
obj/main.elf:     file format elf32-littlearm


Disassembly of section .text:

80000000 <_start>:
80000000:	e10f0000 	mrs	r0, CPSR
80000004:	e3c0001f 	bic	r0, r0, #31
80000008:	e3800013 	orr	r0, r0, #19
8000000c:	e38000c0 	orr	r0, r0, #192	; 0xc0
80000010:	e129f000 	msr	CPSR_fc, r0
80000014:	ee110f50 	mrc	15, 0, r0, cr1, cr0, {2}
80000018:	e380060f 	orr	r0, r0, #15728640	; 0xf00000
8000001c:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
80000020:	f57ff06f 	isb	sy
80000024:	e3a00101 	mov	r0, #1073741824	; 0x40000000
80000028:	eee80a10 	vmsr	fpexc, r0
8000002c:	e59fd004 	ldr	sp, [pc, #4]	; 80000038 <.loop+0x4>
80000030:	eb0000f3 	bl	80000404 <_main>

80000034 <.loop>:
80000034:	eafffffe 	b	80000034 <.loop>
80000038:	4030cdfc 	ldrshtmi	ip, [r0], -ip

8000003c <LED_init>:
#include "gpio.h"
#include "clock.h"
void LED_init(void)
{
8000003c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80000040:	e28db000 	add	fp, sp, #0
80000044:	e24dd00c 	sub	sp, sp, #12


	volatile unsigned int ra;

	PUT32(CM_PER_BASE+CM_PER_GPIO1, 1<<18 | 2);
80000048:	e3a030ac 	mov	r3, #172	; 0xac
8000004c:	e34434e0 	movt	r3, #17632	; 0x44e0
80000050:	e3a02002 	mov	r2, #2
80000054:	e3402004 	movt	r2, #4
80000058:	e5832000 	str	r2, [r3]
	ra = GET32(GPIO1_BASE+GPIO_OE);
8000005c:	e30c3134 	movw	r3, #49460	; 0xc134
80000060:	e3443804 	movt	r3, #18436	; 0x4804
80000064:	e5933000 	ldr	r3, [r3]
80000068:	e50b3008 	str	r3, [fp, #-8]
	ra &= ~(1<<21);
8000006c:	e51b3008 	ldr	r3, [fp, #-8]
80000070:	e3c33602 	bic	r3, r3, #2097152	; 0x200000
80000074:	e50b3008 	str	r3, [fp, #-8]
	PUT32(GPIO1_BASE+GPIO_OE, ra);
80000078:	e30c3134 	movw	r3, #49460	; 0xc134
8000007c:	e3443804 	movt	r3, #18436	; 0x4804
80000080:	e51b2008 	ldr	r2, [fp, #-8]
80000084:	e5832000 	str	r2, [r3]

	PUT32(GPIO1_BASE+GPIO_SETDATAOUT, 1<<21);
80000088:	e30c3194 	movw	r3, #49556	; 0xc194
8000008c:	e3443804 	movt	r3, #18436	; 0x4804
80000090:	e3a02602 	mov	r2, #2097152	; 0x200000
80000094:	e5832000 	str	r2, [r3]
}
80000098:	e24bd000 	sub	sp, fp, #0
8000009c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
800000a0:	e12fff1e 	bx	lr

800000a4 <CM_SetClk>:
#include "clock.h"

void CM_SetClk(CLK_MODULE_t module, CM_PER_REG reg, unsigned int value)
{
800000a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800000a8:	e28db000 	add	fp, sp, #0
800000ac:	e24dd014 	sub	sp, sp, #20
800000b0:	e50b0008 	str	r0, [fp, #-8]
800000b4:	e1a03001 	mov	r3, r1
800000b8:	e50b2010 	str	r2, [fp, #-16]
800000bc:	e14b30ba 	strh	r3, [fp, #-10]

	PUT32(module+reg, value);
800000c0:	e15b20ba 	ldrh	r2, [fp, #-10]
800000c4:	e51b3008 	ldr	r3, [fp, #-8]
800000c8:	e0823003 	add	r3, r2, r3
800000cc:	e1a02003 	mov	r2, r3
800000d0:	e51b3010 	ldr	r3, [fp, #-16]
800000d4:	e5823000 	str	r3, [r2]
}
800000d8:	e24bd000 	sub	sp, fp, #0
800000dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
800000e0:	e12fff1e 	bx	lr

800000e4 <CM_GetClk>:

unsigned int CM_GetClk(CLK_MODULE_t module, CM_PER_REG reg)
{
800000e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800000e8:	e28db000 	add	fp, sp, #0
800000ec:	e24dd00c 	sub	sp, sp, #12
800000f0:	e50b0008 	str	r0, [fp, #-8]
800000f4:	e1a03001 	mov	r3, r1
800000f8:	e14b30ba 	strh	r3, [fp, #-10]
	return GET32(module+reg);
800000fc:	e15b20ba 	ldrh	r2, [fp, #-10]
80000100:	e51b3008 	ldr	r3, [fp, #-8]
80000104:	e0823003 	add	r3, r2, r3
80000108:	e5933000 	ldr	r3, [r3]
}
8000010c:	e1a00003 	mov	r0, r3
80000110:	e24bd000 	sub	sp, fp, #0
80000114:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80000118:	e12fff1e 	bx	lr

8000011c <Init_UART0_Clk>:

void Init_UART0_Clk()
{
8000011c:	e92d4800 	push	{fp, lr}
80000120:	e28db004 	add	fp, sp, #4
80000124:	e24dd008 	sub	sp, sp, #8

	unsigned int temp;
	 // software-forced wake-up transition on the "always on clock domain", TRM Table 8-92
	temp = CM_GetClk(CM_WKUP, CM_WKUP_CLKSTCTRL);		//This register enables the domain power state transition. It controls the SW supervised clock domain state transition between ON-ACTIVE and ON-INACTIVE states. It also hold one status bit per clock input of the domain
80000128:	e3a00b01 	mov	r0, #1024	; 0x400
8000012c:	e34404e0 	movt	r0, #17632	; 0x44e0
80000130:	e3a01000 	mov	r1, #0
80000134:	ebffffea 	bl	800000e4 <CM_GetClk>
80000138:	e50b0008 	str	r0, [fp, #-8]
	temp &= ~(0x3);
8000013c:	e51b3008 	ldr	r3, [fp, #-8]
80000140:	e3c33003 	bic	r3, r3, #3
80000144:	e50b3008 	str	r3, [fp, #-8]
	temp |= (0x2);
80000148:	e51b3008 	ldr	r3, [fp, #-8]
8000014c:	e3833002 	orr	r3, r3, #2
80000150:	e50b3008 	str	r3, [fp, #-8]
	CM_SetClk(CM_WKUP, CM_WKUP_CLKSTCTRL, temp);		//0x2=SW_WKUP
80000154:	e3a00b01 	mov	r0, #1024	; 0x400
80000158:	e34404e0 	movt	r0, #17632	; 0x44e0
8000015c:	e3a01000 	mov	r1, #0
80000160:	e51b2008 	ldr	r2, [fp, #-8]
80000164:	ebffffce 	bl	800000a4 <CM_SetClk>

	// software-forced wake up transition on the L4 high speed domain
	temp = CM_GetClk(CM_PER, CM_PER_L4HS_CLKSTCTRL);	//This register enables the domain power state transition. It controls the SW supervised clock domain state transition between ON-ACTIVE and ON-INACTIVE states. It also hold one status bit per clock input of the domain
80000168:	e3a00000 	mov	r0, #0
8000016c:	e34404e0 	movt	r0, #17632	; 0x44e0
80000170:	e3a01f47 	mov	r1, #284	; 0x11c
80000174:	ebffffda 	bl	800000e4 <CM_GetClk>
80000178:	e50b0008 	str	r0, [fp, #-8]
	temp &= ~(0x3);
8000017c:	e51b3008 	ldr	r3, [fp, #-8]
80000180:	e3c33003 	bic	r3, r3, #3
80000184:	e50b3008 	str	r3, [fp, #-8]
	temp |= (0x2);
80000188:	e51b3008 	ldr	r3, [fp, #-8]
8000018c:	e3833002 	orr	r3, r3, #2
80000190:	e50b3008 	str	r3, [fp, #-8]
	CM_SetClk(CM_PER, CM_PER_L4HS_CLKSTCTRL, temp);		//0x2=SW_WKUP
80000194:	e3a00000 	mov	r0, #0
80000198:	e34404e0 	movt	r0, #17632	; 0x44e0
8000019c:	e3a01f47 	mov	r1, #284	; 0x11c
800001a0:	e51b2008 	ldr	r2, [fp, #-8]
800001a4:	ebffffbe 	bl	800000a4 <CM_SetClk>

	// Module is explicitly enabled,    TRM Table 8-137
	temp = CM_GetClk(CM_WKUP, CM_WKUP_UART0_CLKCTRL);		//This register enables the domain power state transition. It controls the SW supervised clock domain state transition between ON-ACTIVE and ON-INACTIVE states. It also hold one status bit per clock input of the domain
800001a8:	e3a00b01 	mov	r0, #1024	; 0x400
800001ac:	e34404e0 	movt	r0, #17632	; 0x44e0
800001b0:	e3a010b4 	mov	r1, #180	; 0xb4
800001b4:	ebffffca 	bl	800000e4 <CM_GetClk>
800001b8:	e50b0008 	str	r0, [fp, #-8]
	temp &= ~(0x3);
800001bc:	e51b3008 	ldr	r3, [fp, #-8]
800001c0:	e3c33003 	bic	r3, r3, #3
800001c4:	e50b3008 	str	r3, [fp, #-8]
	temp |= (0x2);
800001c8:	e51b3008 	ldr	r3, [fp, #-8]
800001cc:	e3833002 	orr	r3, r3, #2
800001d0:	e50b3008 	str	r3, [fp, #-8]
	CM_SetClk(CM_WKUP, CM_WKUP_UART0_CLKCTRL, temp);		//0x2=SW_WKUP
800001d4:	e3a00b01 	mov	r0, #1024	; 0x400
800001d8:	e34404e0 	movt	r0, #17632	; 0x44e0
800001dc:	e3a010b4 	mov	r1, #180	; 0xb4
800001e0:	e51b2008 	ldr	r2, [fp, #-8]
800001e4:	ebffffae 	bl	800000a4 <CM_SetClk>
	temp &= ~(0x3);
	temp |= (0x2);
	CM_SetClk(CM_PER, CM_PER_UART1_CLKCTRL, temp);		//0x2=SW_WKUP
*/   

}
800001e8:	e24bd004 	sub	sp, fp, #4
800001ec:	e8bd8800 	pop	{fp, pc}

800001f0 <CM_setCtrlModule>:
#include "control_module.h"

void CM_setCtrlModule(CONTROL_MODULE_REG_t module, unsigned int value)
{
800001f0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800001f4:	e28db000 	add	fp, sp, #0
800001f8:	e24dd00c 	sub	sp, sp, #12
800001fc:	e1a03000 	mov	r3, r0
80000200:	e50b100c 	str	r1, [fp, #-12]
80000204:	e14b30b6 	strh	r3, [fp, #-6]

	PUT32(CONTROL_MODULE_REGISTER_BASE + module, value);
80000208:	e15b30b6 	ldrh	r3, [fp, #-6]
8000020c:	e2833311 	add	r3, r3, #1140850688	; 0x44000000
80000210:	e28338e1 	add	r3, r3, #14745600	; 0xe10000
80000214:	e1a02003 	mov	r2, r3
80000218:	e51b300c 	ldr	r3, [fp, #-12]
8000021c:	e5823000 	str	r3, [r2]
}
80000220:	e24bd000 	sub	sp, fp, #0
80000224:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80000228:	e12fff1e 	bx	lr

8000022c <CM_getCtrlModule>:

unsigned int CM_getCtrlModule(CONTROL_MODULE_REG_t module)
{
8000022c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80000230:	e28db000 	add	fp, sp, #0
80000234:	e24dd00c 	sub	sp, sp, #12
80000238:	e1a03000 	mov	r3, r0
8000023c:	e14b30b6 	strh	r3, [fp, #-6]
	return GET32(CONTROL_MODULE_REGISTER_BASE + module);
80000240:	e15b30b6 	ldrh	r3, [fp, #-6]
80000244:	e2833311 	add	r3, r3, #1140850688	; 0x44000000
80000248:	e28338e1 	add	r3, r3, #14745600	; 0xe10000
8000024c:	e5933000 	ldr	r3, [r3]
}
80000250:	e1a00003 	mov	r0, r3
80000254:	e24bd000 	sub	sp, fp, #0
80000258:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
8000025c:	e12fff1e 	bx	lr

80000260 <PAD_setMode>:

void PAD_setMode(CONTROL_MODULE_REG_t module, unsigned int mode)
{
80000260:	e92d4800 	push	{fp, lr}
80000264:	e28db004 	add	fp, sp, #4
80000268:	e24dd010 	sub	sp, sp, #16
8000026c:	e1a03000 	mov	r3, r0
80000270:	e50b1014 	str	r1, [fp, #-20]
80000274:	e14b30be 	strh	r3, [fp, #-14]
	unsigned int temp = CM_getCtrlModule(0);
80000278:	e3a00000 	mov	r0, #0
8000027c:	ebffffea 	bl	8000022c <CM_getCtrlModule>
80000280:	e50b0008 	str	r0, [fp, #-8]
	temp &= ~(0b111);    // turn down MUXMODE
80000284:	e51b3008 	ldr	r3, [fp, #-8]
80000288:	e3c33007 	bic	r3, r3, #7
8000028c:	e50b3008 	str	r3, [fp, #-8]
	temp |= mode;        // set new MUXMODE
80000290:	e51b2008 	ldr	r2, [fp, #-8]
80000294:	e51b3014 	ldr	r3, [fp, #-20]
80000298:	e1823003 	orr	r3, r2, r3
8000029c:	e50b3008 	str	r3, [fp, #-8]
	CM_setCtrlModule(module, temp);
800002a0:	e15b30be 	ldrh	r3, [fp, #-14]
800002a4:	e1a00003 	mov	r0, r3
800002a8:	e51b1008 	ldr	r1, [fp, #-8]
800002ac:	ebffffcf 	bl	800001f0 <CM_setCtrlModule>


}
800002b0:	e24bd004 	sub	sp, fp, #4
800002b4:	e8bd8800 	pop	{fp, pc}

800002b8 <Uart0_Mux>:




void Uart0_Mux()
{
800002b8:	e92d4800 	push	{fp, lr}
800002bc:	e28db004 	add	fp, sp, #4

	CM_setCtrlModule(CM_conf_uart0_rxd, (1 << 4) | (1 << 5));		//Rx muxing
800002c0:	e3a00e97 	mov	r0, #2416	; 0x970
800002c4:	e3a01030 	mov	r1, #48	; 0x30
800002c8:	ebffffc8 	bl	800001f0 <CM_setCtrlModule>
	CM_setCtrlModule(CM_conf_uart0_txd,0);					//tx muxing
800002cc:	e3000974 	movw	r0, #2420	; 0x974
800002d0:	e3a01000 	mov	r1, #0
800002d4:	ebffffc5 	bl	800001f0 <CM_setCtrlModule>
/*
	PAD_setMode(CM_conf_uart0_txd, 0);
	PAD_setMode(CM_conf_uart0_rxd, 0);
*/
}
800002d8:	e8bd8800 	pop	{fp, pc}

800002dc <__aeabi_idivmod>:
typedef struct { int quot; int rem; } idiv_return;

idiv_return __aeabi_idivmod(int num, int denom) {
800002dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800002e0:	e28db000 	add	fp, sp, #0
800002e4:	e24dd024 	sub	sp, sp, #36	; 0x24
800002e8:	e50b0018 	str	r0, [fp, #-24]
800002ec:	e50b101c 	str	r1, [fp, #-28]
800002f0:	e50b2020 	str	r2, [fp, #-32]
    idiv_return r;
    int q = 0;
800002f4:	e3a03000 	mov	r3, #0
800002f8:	e50b3008 	str	r3, [fp, #-8]

    while (num >= denom) {
800002fc:	ea000006 	b	8000031c <__aeabi_idivmod+0x40>
        num -= denom;
80000300:	e51b201c 	ldr	r2, [fp, #-28]
80000304:	e51b3020 	ldr	r3, [fp, #-32]
80000308:	e0633002 	rsb	r3, r3, r2
8000030c:	e50b301c 	str	r3, [fp, #-28]
        q++;
80000310:	e51b3008 	ldr	r3, [fp, #-8]
80000314:	e2833001 	add	r3, r3, #1
80000318:	e50b3008 	str	r3, [fp, #-8]

idiv_return __aeabi_idivmod(int num, int denom) {
    idiv_return r;
    int q = 0;

    while (num >= denom) {
8000031c:	e51b201c 	ldr	r2, [fp, #-28]
80000320:	e51b3020 	ldr	r3, [fp, #-32]
80000324:	e1520003 	cmp	r2, r3
80000328:	aafffff4 	bge	80000300 <__aeabi_idivmod+0x24>
        num -= denom;
        q++;
    }

    r.quot = q;
8000032c:	e51b3008 	ldr	r3, [fp, #-8]
80000330:	e50b3010 	str	r3, [fp, #-16]
    r.rem = num;
80000334:	e51b301c 	ldr	r3, [fp, #-28]
80000338:	e50b300c 	str	r3, [fp, #-12]

    return r;
8000033c:	e51b3018 	ldr	r3, [fp, #-24]
80000340:	e1a02003 	mov	r2, r3
80000344:	e24b3010 	sub	r3, fp, #16
80000348:	e8930003 	ldm	r3, {r0, r1}
8000034c:	e8820003 	stm	r2, {r0, r1}
}
80000350:	e51b0018 	ldr	r0, [fp, #-24]
80000354:	e24bd000 	sub	sp, fp, #0
80000358:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
8000035c:	e12fff1e 	bx	lr

80000360 <__aeabi_idiv>:

int __aeabi_idiv(int num, int denom) {
80000360:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80000364:	e28db000 	add	fp, sp, #0
80000368:	e24dd014 	sub	sp, sp, #20
8000036c:	e50b0010 	str	r0, [fp, #-16]
80000370:	e50b1014 	str	r1, [fp, #-20]
    int q = 0;
80000374:	e3a03000 	mov	r3, #0
80000378:	e50b3008 	str	r3, [fp, #-8]

    while (num >= denom) {
8000037c:	ea000006 	b	8000039c <__aeabi_idiv+0x3c>
        num -= denom;
80000380:	e51b2010 	ldr	r2, [fp, #-16]
80000384:	e51b3014 	ldr	r3, [fp, #-20]
80000388:	e0633002 	rsb	r3, r3, r2
8000038c:	e50b3010 	str	r3, [fp, #-16]
        q++;
80000390:	e51b3008 	ldr	r3, [fp, #-8]
80000394:	e2833001 	add	r3, r3, #1
80000398:	e50b3008 	str	r3, [fp, #-8]
}

int __aeabi_idiv(int num, int denom) {
    int q = 0;

    while (num >= denom) {
8000039c:	e51b2010 	ldr	r2, [fp, #-16]
800003a0:	e51b3014 	ldr	r3, [fp, #-20]
800003a4:	e1520003 	cmp	r2, r3
800003a8:	aafffff4 	bge	80000380 <__aeabi_idiv+0x20>
        num -= denom;
        q++;
    }

   return q;
800003ac:	e51b3008 	ldr	r3, [fp, #-8]
}
800003b0:	e1a00003 	mov	r0, r3
800003b4:	e24bd000 	sub	sp, fp, #0
800003b8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
800003bc:	e12fff1e 	bx	lr

800003c0 <uart_putf>:
#include "sys_log.h"

extern unsigned short int value;

void uart_putf(const char *fmt, ...) 
{
800003c0:	e92d000f 	push	{r0, r1, r2, r3}
800003c4:	e92d4800 	push	{fp, lr}
800003c8:	e28db004 	add	fp, sp, #4
800003cc:	e24dd008 	sub	sp, sp, #8
	out_func_t fn = UART_putC;
800003d0:	e300375c 	movw	r3, #1884	; 0x75c
800003d4:	e3483000 	movt	r3, #32768	; 0x8000
800003d8:	e50b3008 	str	r3, [fp, #-8]
	va_list ap;
	va_start(ap, fmt);    
800003dc:	e28b3008 	add	r3, fp, #8
800003e0:	e50b300c 	str	r3, [fp, #-12]
	_vprintk(fn, fmt, ap);                               
800003e4:	e51b0008 	ldr	r0, [fp, #-8]
800003e8:	e59b1004 	ldr	r1, [fp, #4]
800003ec:	e51b200c 	ldr	r2, [fp, #-12]
800003f0:	eb0001d7 	bl	80000b54 <_vprintk>
	va_end(ap); 
}
800003f4:	e24bd004 	sub	sp, fp, #4
800003f8:	e8bd4800 	pop	{fp, lr}
800003fc:	e28dd010 	add	sp, sp, #16
80000400:	e12fff1e 	bx	lr

80000404 <_main>:

void _main(void)
{
80000404:	e92d4800 	push	{fp, lr}
80000408:	e28db004 	add	fp, sp, #4
	LED_init();
8000040c:	ebffff0a 	bl	8000003c <LED_init>
	UART_init(115200,STOP1,PARITY_NONE,FLOW_OFF);
80000410:	e3a00cc2 	mov	r0, #49664	; 0xc200
80000414:	e3400001 	movt	r0, #1
80000418:	e3a01000 	mov	r1, #0
8000041c:	e3a02000 	mov	r2, #0
80000420:	e3a03000 	mov	r3, #0
80000424:	eb0000b9 	bl	80000710 <UART_init>
	UART_putC('\n');
80000428:	e3a0000a 	mov	r0, #10
8000042c:	eb0000ca 	bl	8000075c <UART_putC>
	UART_putString("Uart init done : ");
80000430:	e30104d8 	movw	r0, #5336	; 0x14d8
80000434:	e3480000 	movt	r0, #32768	; 0x8000
80000438:	eb0000f1 	bl	80000804 <UART_putString>
	UART_putString("Hi shashi\n");
8000043c:	e30104ec 	movw	r0, #5356	; 0x14ec
80000440:	e3480000 	movt	r0, #32768	; 0x8000
80000444:	eb0000ee 	bl	80000804 <UART_putString>
	UART_putString("Uart init done : ");
80000448:	e30104d8 	movw	r0, #5336	; 0x14d8
8000044c:	e3480000 	movt	r0, #32768	; 0x8000
80000450:	eb0000eb 	bl	80000804 <UART_putString>
	UART_putString("Hi dabba\n\n");
80000454:	e30104f8 	movw	r0, #5368	; 0x14f8
80000458:	e3480000 	movt	r0, #32768	; 0x8000
8000045c:	eb0000e8 	bl	80000804 <UART_putString>
	UART_putString("Uart init done : ");
80000460:	e30104d8 	movw	r0, #5336	; 0x14d8
80000464:	e3480000 	movt	r0, #32768	; 0x8000
80000468:	eb0000e5 	bl	80000804 <UART_putString>
	UART_putString("Hi dabba\n\n");
8000046c:	e30104f8 	movw	r0, #5368	; 0x14f8
80000470:	e3480000 	movt	r0, #32768	; 0x8000
80000474:	eb0000e2 	bl	80000804 <UART_putString>
	uart_putf("LCR value = %x\n", value);
80000478:	e301352a 	movw	r3, #5418	; 0x152a
8000047c:	e3483000 	movt	r3, #32768	; 0x8000
80000480:	e1d330b0 	ldrh	r3, [r3]
80000484:	e3010504 	movw	r0, #5380	; 0x1504
80000488:	e3480000 	movt	r0, #32768	; 0x8000
8000048c:	e1a01003 	mov	r1, r3
80000490:	ebffffca 	bl	800003c0 <uart_putf>
	while (1) {
		UART_putString("Enter a character : ");
80000494:	e3010514 	movw	r0, #5396	; 0x1514
80000498:	e3480000 	movt	r0, #32768	; 0x8000
8000049c:	eb0000d8 	bl	80000804 <UART_putString>
		UART_putC(UART_getC());
800004a0:	eb0000c5 	bl	800007bc <UART_getC>
800004a4:	e1a03000 	mov	r3, r0
800004a8:	e1a00003 	mov	r0, r3
800004ac:	eb0000aa 	bl	8000075c <UART_putC>
		UART_putC('\n');
800004b0:	e3a0000a 	mov	r0, #10
800004b4:	eb0000a8 	bl	8000075c <UART_putC>
	}
800004b8:	eafffff5 	b	80000494 <_main+0x90>
800004bc:	00000000 	andeq	r0, r0, r0

800004c0 <GPIO_init>:
#include "control_module.h"
#include "string.h"

unsigned short int value = 0;
void GPIO_init()
{
800004c0:	e92d4800 	push	{fp, lr}
800004c4:	e28db004 	add	fp, sp, #4
800004c8:	e24dd008 	sub	sp, sp, #8
	unsigned int setting = (1<<18) | (0x2<<0);
800004cc:	e3a03002 	mov	r3, #2
800004d0:	e3403004 	movt	r3, #4
800004d4:	e50b3008 	str	r3, [fp, #-8]
	CM_SetClk(CM_PER, CM_PER_GPIO1_CLKCTRL, setting);
800004d8:	e3a00000 	mov	r0, #0
800004dc:	e34404e0 	movt	r0, #17632	; 0x44e0
800004e0:	e3a010ac 	mov	r1, #172	; 0xac
800004e4:	e51b2008 	ldr	r2, [fp, #-8]
800004e8:	ebfffeed 	bl	800000a4 <CM_SetClk>
	while((CM_GetClk(CM_PER, CM_PER_GPIO1_CLKCTRL) & (0x3<<16)) != 0);
800004ec:	e1a00000 	nop			; (mov r0, r0)
800004f0:	e3a00000 	mov	r0, #0
800004f4:	e34404e0 	movt	r0, #17632	; 0x44e0
800004f8:	e3a010ac 	mov	r1, #172	; 0xac
800004fc:	ebfffef8 	bl	800000e4 <CM_GetClk>
80000500:	e1a03000 	mov	r3, r0
80000504:	e2033803 	and	r3, r3, #196608	; 0x30000
80000508:	e3530000 	cmp	r3, #0
8000050c:	1afffff7 	bne	800004f0 <GPIO_init+0x30>

}
80000510:	e24bd004 	sub	sp, fp, #4
80000514:	e8bd8800 	pop	{fp, pc}

80000518 <Uart0_Reset>:
/* 
 * UART procedure described in 19.4 UART/IrDA/CIR Basic Programming Model
 */

void Uart0_Reset(unsigned int baudrate) 
{
80000518:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
8000051c:	e28db000 	add	fp, sp, #0
80000520:	e24dd01c 	sub	sp, sp, #28
80000524:	e50b0018 	str	r0, [fp, #-24]
	/** UART reset --> setting SYSC[1] */
	unsigned int temp = GET32(UART0+SYSC);
80000528:	e3093054 	movw	r3, #36948	; 0x9054
8000052c:	e34434e0 	movt	r3, #17632	; 0x44e0
80000530:	e5933000 	ldr	r3, [r3]
80000534:	e50b3008 	str	r3, [fp, #-8]
	temp |= 0x2;
80000538:	e51b3008 	ldr	r3, [fp, #-8]
8000053c:	e3833002 	orr	r3, r3, #2
80000540:	e50b3008 	str	r3, [fp, #-8]
	PUT32(UART0+SYSC, temp);		
80000544:	e3093054 	movw	r3, #36948	; 0x9054
80000548:	e34434e0 	movt	r3, #17632	; 0x44e0
8000054c:	e51b2008 	ldr	r2, [fp, #-8]
80000550:	e5832000 	str	r2, [r3]
	while (((GET32(UART0+SYSS)) & 0x1) == 0);		/* Wait till reset is complete */
80000554:	e1a00000 	nop			; (mov r0, r0)
80000558:	e3093058 	movw	r3, #36952	; 0x9058
8000055c:	e34434e0 	movt	r3, #17632	; 0x44e0
80000560:	e5933000 	ldr	r3, [r3]
80000564:	e2033001 	and	r3, r3, #1
80000568:	e3530000 	cmp	r3, #0
8000056c:	0afffff9 	beq	80000558 <Uart0_Reset+0x40>
	temp = GET8(UART0+SYSC);
80000570:	e3093054 	movw	r3, #36948	; 0x9054
80000574:	e34434e0 	movt	r3, #17632	; 0x44e0
80000578:	e5d33000 	ldrb	r3, [r3]
8000057c:	e6ef3073 	uxtb	r3, r3
80000580:	e50b3008 	str	r3, [fp, #-8]
	temp |= (0x1 << 0x3);
80000584:	e51b3008 	ldr	r3, [fp, #-8]
80000588:	e3833008 	orr	r3, r3, #8
8000058c:	e50b3008 	str	r3, [fp, #-8]
	PUT8(UART0+SYSC, temp);					/* No idle/Wakeup capability is enabled */
80000590:	e3093054 	movw	r3, #36948	; 0x9054
80000594:	e34434e0 	movt	r3, #17632	; 0x44e0
80000598:	e51b2008 	ldr	r2, [fp, #-8]
8000059c:	e6ef2072 	uxtb	r2, r2
800005a0:	e5c32000 	strb	r2, [r3]

	/* UART init*/
	/* Check below condition is necessary ??*/
	while(!(GET32(UART0+LSR) & 0x40));    		// Transmitter hold (TX	FIFO) and shift	registers are empty
800005a4:	e1a00000 	nop			; (mov r0, r0)
800005a8:	e3093014 	movw	r3, #36884	; 0x9014
800005ac:	e34434e0 	movt	r3, #17632	; 0x44e0
800005b0:	e5933000 	ldr	r3, [r3]
800005b4:	e2033040 	and	r3, r3, #64	; 0x40
800005b8:	e3530000 	cmp	r3, #0
800005bc:	0afffff9 	beq	800005a8 <Uart0_Reset+0x90>

	/* UART Interrupt Enable Register */
	PUT8(UART0+IER, 0);					//Disable uart interrupts
800005c0:	e3093004 	movw	r3, #36868	; 0x9004
800005c4:	e34434e0 	movt	r3, #17632	; 0x44e0
800005c8:	e3a02000 	mov	r2, #0
800005cc:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+MDR1,0x7);        				/* Disable modeselect (default) 19.5.1.19*/
800005d0:	e3093020 	movw	r3, #36896	; 0x9020
800005d4:	e34434e0 	movt	r3, #17632	; 0x44e0
800005d8:	e3a02007 	mov	r2, #7
800005dc:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+LCR,~(0x7C));    // divisor latch enable, access DLL DHL, set uart as 8bit
800005e0:	e309300c 	movw	r3, #36876	; 0x900c
800005e4:	e34434e0 	movt	r3, #17632	; 0x44e0
800005e8:	e3e0207c 	mvn	r2, #124	; 0x7c
800005ec:	e5c32000 	strb	r2, [r3]

	value = GET8(UART0+LCR);
800005f0:	e309300c 	movw	r3, #36876	; 0x900c
800005f4:	e34434e0 	movt	r3, #17632	; 0x44e0
800005f8:	e5d33000 	ldrb	r3, [r3]
800005fc:	e6ef3073 	uxtb	r3, r3
80000600:	e6ff2073 	uxth	r2, r3
80000604:	e301352a 	movw	r3, #5418	; 0x152a
80000608:	e3483000 	movt	r3, #32768	; 0x8000
8000060c:	e1c320b0 	strh	r2, [r3]
	PUT8(UART0+RHR,0);          // DLL = 0
80000610:	e3a03a09 	mov	r3, #36864	; 0x9000
80000614:	e34434e0 	movt	r3, #17632	; 0x44e0
80000618:	e3a02000 	mov	r2, #0
8000061c:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+IER,0);          // DHL = 0
80000620:	e3093004 	movw	r3, #36868	; 0x9004
80000624:	e34434e0 	movt	r3, #17632	; 0x44e0
80000628:	e3a02000 	mov	r2, #0
8000062c:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+LCR,0x3);        // set uart as 8bit
80000630:	e309300c 	movw	r3, #36876	; 0x900c
80000634:	e34434e0 	movt	r3, #17632	; 0x44e0
80000638:	e3a02003 	mov	r2, #3
8000063c:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+MCR,0x3);        // force /rts & /drt to active (low) (?!)
80000640:	e3093010 	movw	r3, #36880	; 0x9010
80000644:	e34434e0 	movt	r3, #17632	; 0x44e0
80000648:	e3a02003 	mov	r2, #3
8000064c:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+FCR,0x7);        // clear rx&tx FIFOs, and enables them (each 64 bytes deep)
80000650:	e3093008 	movw	r3, #36872	; 0x9008
80000654:	e34434e0 	movt	r3, #17632	; 0x44e0
80000658:	e3a02007 	mov	r2, #7
8000065c:	e5c32000 	strb	r2, [r3]
	  1 . UART 16x mode: Divisor value = Operating frequency/(16x baud rate) , Operating frequency = 48 MHz	 
	  2 . For 115200/16x speed DLL = 0x00, DLH = 0x1A
	  3 . The divisor latches high register(DLH) with the DLL register stores the 14-bit divisor for generation
	      of the baud clock in the baud rate generator
	  */
	float div = 48000000.0/(16.0*(float)baudrate);
80000660:	e51b3018 	ldr	r3, [fp, #-24]
80000664:	ee073a90 	vmov	s15, r3
80000668:	eef87a67 	vcvt.f32.u32	s15, s15
8000066c:	eef70ae7 	vcvt.f64.f32	d16, s15
80000670:	eef31b00 	vmov.f64	d17, #48	; 0x30
80000674:	ee600ba1 	vmul.f64	d16, d16, d17
80000678:	eddf1b22 	vldr	d17, [pc, #136]	; 80000708 <Uart0_Reset+0x1f0>
8000067c:	eec10ba0 	vdiv.f64	d16, d17, d16
80000680:	eef77be0 	vcvt.f32.f64	s15, d16
80000684:	ed4b7a03 	vstr	s15, [fp, #-12]
	unsigned int intdiv = (unsigned int) div; 
80000688:	ed5b7a03 	vldr	s15, [fp, #-12]
8000068c:	eefc7ae7 	vcvt.u32.f32	s15, s15
80000690:	ee173a90 	vmov	r3, s15
80000694:	e50b3010 	str	r3, [fp, #-16]
	PUT8(UART0+LCR,~(0x7C));    		   /* divisor latch enable, access DLL DHL, set uart as 8bit*/
80000698:	e309300c 	movw	r3, #36876	; 0x900c
8000069c:	e34434e0 	movt	r3, #17632	; 0x44e0
800006a0:	e3e0207c 	mvn	r2, #124	; 0x7c
800006a4:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+RHR,intdiv&0xFF);          	   /* DLL = 26 */
800006a8:	e3a03a09 	mov	r3, #36864	; 0x9000
800006ac:	e34434e0 	movt	r3, #17632	; 0x44e0
800006b0:	e51b2010 	ldr	r2, [fp, #-16]
800006b4:	e6ef2072 	uxtb	r2, r2
800006b8:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+IER,(intdiv>>8)&0x3F);          /* DHL = 0  IER now DLH*/
800006bc:	e3093004 	movw	r3, #36868	; 0x9004
800006c0:	e34434e0 	movt	r3, #17632	; 0x44e0
800006c4:	e51b2010 	ldr	r2, [fp, #-16]
800006c8:	e1a02422 	lsr	r2, r2, #8
800006cc:	e6ef2072 	uxtb	r2, r2
800006d0:	e202203f 	and	r2, r2, #63	; 0x3f
800006d4:	e6ef2072 	uxtb	r2, r2
800006d8:	e5c32000 	strb	r2, [r3]

	PUT8(UART0+LCR,0x3);        // set uart as 8 bit
800006dc:	e309300c 	movw	r3, #36876	; 0x900c
800006e0:	e34434e0 	movt	r3, #17632	; 0x44e0
800006e4:	e3a02003 	mov	r2, #3
800006e8:	e5c32000 	strb	r2, [r3]
	PUT8(UART0+MDR1,0);          // uart 16x oversampling
800006ec:	e3093020 	movw	r3, #36896	; 0x9020
800006f0:	e34434e0 	movt	r3, #17632	; 0x44e0
800006f4:	e3a02000 	mov	r2, #0
800006f8:	e5c32000 	strb	r2, [r3]

}
800006fc:	e24bd000 	sub	sp, fp, #0
80000700:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80000704:	e12fff1e 	bx	lr
80000708:	00000000 	andeq	r0, r0, r0
8000070c:	4186e360 	orrmi	lr, r6, r0, ror #6

80000710 <UART_init>:

void UART_init(unsigned int baudrate, STOP_BIT_t stopBit, PARITY_BIT_t parity, FLOW_t flowControl) 
{
80000710:	e92d4800 	push	{fp, lr}
80000714:	e28db004 	add	fp, sp, #4
80000718:	e24dd008 	sub	sp, sp, #8
8000071c:	e50b0008 	str	r0, [fp, #-8]
80000720:	e1a00001 	mov	r0, r1
80000724:	e1a01002 	mov	r1, r2
80000728:	e1a02003 	mov	r2, r3
8000072c:	e1a03000 	mov	r3, r0
80000730:	e54b3009 	strb	r3, [fp, #-9]
80000734:	e1a03001 	mov	r3, r1
80000738:	e54b300a 	strb	r3, [fp, #-10]
8000073c:	e1a03002 	mov	r3, r2
80000740:	e54b300b 	strb	r3, [fp, #-11]

	//	GPIO_init();

	//UART mux config
	Uart0_Mux();
80000744:	ebfffedb 	bl	800002b8 <Uart0_Mux>

	//Init clock and muxing of pins
	Init_UART0_Clk();
80000748:	ebfffe73 	bl	8000011c <Init_UART0_Clk>

	//Uart soft reset
	Uart0_Reset(baudrate);
8000074c:	e51b0008 	ldr	r0, [fp, #-8]
80000750:	ebffff70 	bl	80000518 <Uart0_Reset>
}
80000754:	e24bd004 	sub	sp, fp, #4
80000758:	e8bd8800 	pop	{fp, pc}

8000075c <UART_putC>:

void UART_putC( char c)
{
8000075c:	e92d4800 	push	{fp, lr}
80000760:	e28db004 	add	fp, sp, #4
80000764:	e24dd008 	sub	sp, sp, #8
80000768:	e1a03000 	mov	r3, r0
8000076c:	e54b3005 	strb	r3, [fp, #-5]

	if (c == '\n')
80000770:	e55b3005 	ldrb	r3, [fp, #-5]
80000774:	e353000a 	cmp	r3, #10
80000778:	1a000001 	bne	80000784 <UART_putC+0x28>
		UART_putC('\r');
8000077c:	e3a0000d 	mov	r0, #13
80000780:	ebfffff5 	bl	8000075c <UART_putC>

	while((GET8(UART0+LSR)&0x20) != 0x20)	/* wait until txfifo is empty (check exact bit is set) */ 
80000784:	e1a00000 	nop			; (mov r0, r0)
80000788:	e3093014 	movw	r3, #36884	; 0x9014
8000078c:	e34434e0 	movt	r3, #17632	; 0x44e0
80000790:	e5d33000 	ldrb	r3, [r3]
80000794:	e6ef3073 	uxtb	r3, r3
80000798:	e2033020 	and	r3, r3, #32
8000079c:	e3530000 	cmp	r3, #0
800007a0:	0afffff8 	beq	80000788 <UART_putC+0x2c>
		;

	PUT8(UART0 +RHR,c);
800007a4:	e3a03a09 	mov	r3, #36864	; 0x9000
800007a8:	e34434e0 	movt	r3, #17632	; 0x44e0
800007ac:	e55b2005 	ldrb	r2, [fp, #-5]
800007b0:	e5c32000 	strb	r2, [r3]
}
800007b4:	e24bd004 	sub	sp, fp, #4
800007b8:	e8bd8800 	pop	{fp, pc}

800007bc <UART_getC>:
char UART_getC()
{
800007bc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800007c0:	e28db000 	add	fp, sp, #0
	while((GET8(UART0+LSR)&0x1) == 0);     //wait for a character to be in the rx fifo
800007c4:	e1a00000 	nop			; (mov r0, r0)
800007c8:	e3093014 	movw	r3, #36884	; 0x9014
800007cc:	e34434e0 	movt	r3, #17632	; 0x44e0
800007d0:	e5d33000 	ldrb	r3, [r3]
800007d4:	e6ef3073 	uxtb	r3, r3
800007d8:	e2033001 	and	r3, r3, #1
800007dc:	e3530000 	cmp	r3, #0
800007e0:	0afffff8 	beq	800007c8 <UART_getC+0xc>
	return GET8(UART0+RHR);
800007e4:	e3a03a09 	mov	r3, #36864	; 0x9000
800007e8:	e34434e0 	movt	r3, #17632	; 0x44e0
800007ec:	e5d33000 	ldrb	r3, [r3]
800007f0:	e6ef3073 	uxtb	r3, r3
}
800007f4:	e1a00003 	mov	r0, r3
800007f8:	e24bd000 	sub	sp, fp, #0
800007fc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80000800:	e12fff1e 	bx	lr

80000804 <UART_putString>:

int UART_putString(char *str)
{
80000804:	e92d4800 	push	{fp, lr}
80000808:	e28db004 	add	fp, sp, #4
8000080c:	e24dd010 	sub	sp, sp, #16
80000810:	e50b0010 	str	r0, [fp, #-16]
   int length = strlen(str);
80000814:	e51b0010 	ldr	r0, [fp, #-16]
80000818:	eb0001ff 	bl	8000101c <strlen>
8000081c:	e50b000c 	str	r0, [fp, #-12]
   for(int i = 0; i < length; i++)
80000820:	e3a03000 	mov	r3, #0
80000824:	e50b3008 	str	r3, [fp, #-8]
80000828:	ea000008 	b	80000850 <UART_putString+0x4c>
   {
      UART_putC(str[i]);
8000082c:	e51b3008 	ldr	r3, [fp, #-8]
80000830:	e51b2010 	ldr	r2, [fp, #-16]
80000834:	e0823003 	add	r3, r2, r3
80000838:	e5d33000 	ldrb	r3, [r3]
8000083c:	e1a00003 	mov	r0, r3
80000840:	ebffffc5 	bl	8000075c <UART_putC>
}

int UART_putString(char *str)
{
   int length = strlen(str);
   for(int i = 0; i < length; i++)
80000844:	e51b3008 	ldr	r3, [fp, #-8]
80000848:	e2833001 	add	r3, r3, #1
8000084c:	e50b3008 	str	r3, [fp, #-8]
80000850:	e51b2008 	ldr	r2, [fp, #-8]
80000854:	e51b300c 	ldr	r3, [fp, #-12]
80000858:	e1520003 	cmp	r2, r3
8000085c:	bafffff2 	blt	8000082c <UART_putString+0x28>
   {
      UART_putC(str[i]);
   }
   return length;
80000860:	e51b300c 	ldr	r3, [fp, #-12]
}
80000864:	e1a00003 	mov	r0, r3
80000868:	e24bd004 	sub	sp, fp, #4
8000086c:	e8bd8800 	pop	{fp, pc}

80000870 <UART_getString>:

int UART_getString(char *buf)
{
80000870:	e92d4810 	push	{r4, fp, lr}
80000874:	e28db008 	add	fp, sp, #8
80000878:	e24dd014 	sub	sp, sp, #20
8000087c:	e50b0018 	str	r0, [fp, #-24]
   int length = strlen(buf);
80000880:	e51b0018 	ldr	r0, [fp, #-24]
80000884:	eb0001e4 	bl	8000101c <strlen>
80000888:	e50b0014 	str	r0, [fp, #-20]
   for(int i = 0; i < length; i ++)
8000088c:	e3a03000 	mov	r3, #0
80000890:	e50b3010 	str	r3, [fp, #-16]
80000894:	ea000008 	b	800008bc <UART_getString+0x4c>
   {
      buf[i] = UART_getC();
80000898:	e51b3010 	ldr	r3, [fp, #-16]
8000089c:	e51b2018 	ldr	r2, [fp, #-24]
800008a0:	e0824003 	add	r4, r2, r3
800008a4:	ebffffc4 	bl	800007bc <UART_getC>
800008a8:	e1a03000 	mov	r3, r0
800008ac:	e5c43000 	strb	r3, [r4]
}

int UART_getString(char *buf)
{
   int length = strlen(buf);
   for(int i = 0; i < length; i ++)
800008b0:	e51b3010 	ldr	r3, [fp, #-16]
800008b4:	e2833001 	add	r3, r3, #1
800008b8:	e50b3010 	str	r3, [fp, #-16]
800008bc:	e51b2010 	ldr	r2, [fp, #-16]
800008c0:	e51b3014 	ldr	r3, [fp, #-20]
800008c4:	e1520003 	cmp	r2, r3
800008c8:	bafffff2 	blt	80000898 <UART_getString+0x28>
   {
      buf[i] = UART_getC();
   }
   return length;
800008cc:	e51b3014 	ldr	r3, [fp, #-20]
}
800008d0:	e1a00003 	mov	r0, r3
800008d4:	e24bd008 	sub	sp, fp, #8
800008d8:	e8bd8810 	pop	{r4, fp, pc}

800008dc <_printk_dec_ulong>:
 * @return N/A
 */
static void _printk_dec_ulong(out_func_t out,
		const unsigned long num, int pad_zero,
		int min_width)
{
800008dc:	e92d4800 	push	{fp, lr}
800008e0:	e28db004 	add	fp, sp, #4
800008e4:	e24dd020 	sub	sp, sp, #32
800008e8:	e50b0018 	str	r0, [fp, #-24]
800008ec:	e50b101c 	str	r1, [fp, #-28]
800008f0:	e50b2020 	str	r2, [fp, #-32]
800008f4:	e50b3024 	str	r3, [fp, #-36]	; 0x24
	/*
	unsigned long pos = 999999999;
	unsigned long remainder = num;
	*/
	long pos = 999999999;
800008f8:	e30c39ff 	movw	r3, #51711	; 0xc9ff
800008fc:	e3433b9a 	movt	r3, #15258	; 0x3b9a
80000900:	e50b3008 	str	r3, [fp, #-8]
	long remainder = num;
80000904:	e51b301c 	ldr	r3, [fp, #-28]
80000908:	e50b300c 	str	r3, [fp, #-12]
	int found_largest_digit = 0;
8000090c:	e3a03000 	mov	r3, #0
80000910:	e50b3010 	str	r3, [fp, #-16]
	int remaining = 10; /* 10 digits max */
80000914:	e3a0300a 	mov	r3, #10
80000918:	e50b3014 	str	r3, [fp, #-20]

	/* make sure we don't skip if value is zero */
	if (min_width <= 0) {
8000091c:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
80000920:	e3530000 	cmp	r3, #0
80000924:	ca000001 	bgt	80000930 <_printk_dec_ulong+0x54>
		min_width = 1;
80000928:	e3a03001 	mov	r3, #1
8000092c:	e50b3024 	str	r3, [fp, #-36]	; 0x24
	}

	while (pos >= 9) {
80000930:	ea000035 	b	80000a0c <_printk_dec_ulong+0x130>
		if (found_largest_digit || remainder > pos) {
80000934:	e51b3010 	ldr	r3, [fp, #-16]
80000938:	e3530000 	cmp	r3, #0
8000093c:	1a000003 	bne	80000950 <_printk_dec_ulong+0x74>
80000940:	e51b200c 	ldr	r2, [fp, #-12]
80000944:	e51b3008 	ldr	r3, [fp, #-8]
80000948:	e1520003 	cmp	r2, r3
8000094c:	da00000e 	ble	8000098c <_printk_dec_ulong+0xb0>
			found_largest_digit = 1;
80000950:	e3a03001 	mov	r3, #1
80000954:	e50b3010 	str	r3, [fp, #-16]
			out((char)((remainder / (pos + 1)) + 48));
80000958:	e51b3008 	ldr	r3, [fp, #-8]
8000095c:	e2833001 	add	r3, r3, #1
80000960:	e51b000c 	ldr	r0, [fp, #-12]
80000964:	e1a01003 	mov	r1, r3
80000968:	ebfffe7c 	bl	80000360 <__aeabi_idiv>
8000096c:	e1a03000 	mov	r3, r0
80000970:	e6ef3073 	uxtb	r3, r3
80000974:	e2833030 	add	r3, r3, #48	; 0x30
80000978:	e6ef2073 	uxtb	r2, r3
8000097c:	e51b3018 	ldr	r3, [fp, #-24]
80000980:	e1a00002 	mov	r0, r2
80000984:	e12fff33 	blx	r3
80000988:	ea00000c 	b	800009c0 <_printk_dec_ulong+0xe4>
		} else if (remaining <= min_width) {
8000098c:	e51b2014 	ldr	r2, [fp, #-20]
80000990:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
80000994:	e1520003 	cmp	r2, r3
80000998:	ca000008 	bgt	800009c0 <_printk_dec_ulong+0xe4>
			out((char)(pad_zero ? '0' : ' '));
8000099c:	e51b3020 	ldr	r3, [fp, #-32]
800009a0:	e3530000 	cmp	r3, #0
800009a4:	0a000001 	beq	800009b0 <_printk_dec_ulong+0xd4>
800009a8:	e3a02030 	mov	r2, #48	; 0x30
800009ac:	ea000000 	b	800009b4 <_printk_dec_ulong+0xd8>
800009b0:	e3a02020 	mov	r2, #32
800009b4:	e51b3018 	ldr	r3, [fp, #-24]
800009b8:	e1a00002 	mov	r0, r2
800009bc:	e12fff33 	blx	r3
		}
		remaining--;
800009c0:	e51b3014 	ldr	r3, [fp, #-20]
800009c4:	e2433001 	sub	r3, r3, #1
800009c8:	e50b3014 	str	r3, [fp, #-20]
		remainder %= (pos + 1); 
800009cc:	e51b3008 	ldr	r3, [fp, #-8]
800009d0:	e2833001 	add	r3, r3, #1
800009d4:	e51b200c 	ldr	r2, [fp, #-12]
800009d8:	e1a00002 	mov	r0, r2
800009dc:	e1a01003 	mov	r1, r3
800009e0:	ebfffe3d 	bl	800002dc <__aeabi_idivmod>
800009e4:	e1a03001 	mov	r3, r1
800009e8:	e50b300c 	str	r3, [fp, #-12]
		pos /= 10; 
800009ec:	e51b1008 	ldr	r1, [fp, #-8]
800009f0:	e3063667 	movw	r3, #26215	; 0x6667
800009f4:	e3463666 	movt	r3, #26214	; 0x6666
800009f8:	e0c32391 	smull	r2, r3, r1, r3
800009fc:	e1a02143 	asr	r2, r3, #2
80000a00:	e1a03fc1 	asr	r3, r1, #31
80000a04:	e0633002 	rsb	r3, r3, r2
80000a08:	e50b3008 	str	r3, [fp, #-8]
	/* make sure we don't skip if value is zero */
	if (min_width <= 0) {
		min_width = 1;
	}

	while (pos >= 9) {
80000a0c:	e51b3008 	ldr	r3, [fp, #-8]
80000a10:	e3530008 	cmp	r3, #8
80000a14:	caffffc6 	bgt	80000934 <_printk_dec_ulong+0x58>
		}
		remaining--;
		remainder %= (pos + 1); 
		pos /= 10; 
	}
	out((char)(remainder + 48));
80000a18:	e51b300c 	ldr	r3, [fp, #-12]
80000a1c:	e6ef3073 	uxtb	r3, r3
80000a20:	e2833030 	add	r3, r3, #48	; 0x30
80000a24:	e6ef2073 	uxtb	r2, r3
80000a28:	e51b3018 	ldr	r3, [fp, #-24]
80000a2c:	e1a00002 	mov	r0, r2
80000a30:	e12fff33 	blx	r3
}
80000a34:	e24bd004 	sub	sp, fp, #4
80000a38:	e8bd8800 	pop	{fp, pc}

80000a3c <_printk_hex_ulong>:
 * @return N/A
 */
static void _printk_hex_ulong(out_func_t out,
		const unsigned long num, int pad_zero,
		int min_width)
{
80000a3c:	e92d4800 	push	{fp, lr}
80000a40:	e28db004 	add	fp, sp, #4
80000a44:	e24dd020 	sub	sp, sp, #32
80000a48:	e50b0018 	str	r0, [fp, #-24]
80000a4c:	e50b101c 	str	r1, [fp, #-28]
80000a50:	e50b2020 	str	r2, [fp, #-32]
80000a54:	e50b3024 	str	r3, [fp, #-36]	; 0x24
	int size = sizeof(num) * 2;
80000a58:	e3a03008 	mov	r3, #8
80000a5c:	e50b3008 	str	r3, [fp, #-8]
	int found_largest_digit = 0;
80000a60:	e3a03000 	mov	r3, #0
80000a64:	e50b300c 	str	r3, [fp, #-12]
	int remaining = 8; /* 8 digits max */
80000a68:	e3a03008 	mov	r3, #8
80000a6c:	e50b3010 	str	r3, [fp, #-16]

	for (; size; size--) {
80000a70:	ea000032 	b	80000b40 <_printk_hex_ulong+0x104>
		char nibble = (num >> ((size - 1) << 2) & 0xf);
80000a74:	e51b3008 	ldr	r3, [fp, #-8]
80000a78:	e2433001 	sub	r3, r3, #1
80000a7c:	e1a03103 	lsl	r3, r3, #2
80000a80:	e51b201c 	ldr	r2, [fp, #-28]
80000a84:	e1a03332 	lsr	r3, r2, r3
80000a88:	e6ef3073 	uxtb	r3, r3
80000a8c:	e203300f 	and	r3, r3, #15
80000a90:	e54b3011 	strb	r3, [fp, #-17]

		if (nibble || found_largest_digit || size == 1) {
80000a94:	e55b3011 	ldrb	r3, [fp, #-17]
80000a98:	e3530000 	cmp	r3, #0
80000a9c:	1a000005 	bne	80000ab8 <_printk_hex_ulong+0x7c>
80000aa0:	e51b300c 	ldr	r3, [fp, #-12]
80000aa4:	e3530000 	cmp	r3, #0
80000aa8:	1a000002 	bne	80000ab8 <_printk_hex_ulong+0x7c>
80000aac:	e51b3008 	ldr	r3, [fp, #-8]
80000ab0:	e3530001 	cmp	r3, #1
80000ab4:	1a00000f 	bne	80000af8 <_printk_hex_ulong+0xbc>
			found_largest_digit = 1;
80000ab8:	e3a03001 	mov	r3, #1
80000abc:	e50b300c 	str	r3, [fp, #-12]
			nibble += nibble > 9 ? 87 : 48;
80000ac0:	e55b3011 	ldrb	r3, [fp, #-17]
80000ac4:	e3530009 	cmp	r3, #9
80000ac8:	9a000001 	bls	80000ad4 <_printk_hex_ulong+0x98>
80000acc:	e3a02057 	mov	r2, #87	; 0x57
80000ad0:	ea000000 	b	80000ad8 <_printk_hex_ulong+0x9c>
80000ad4:	e3a02030 	mov	r2, #48	; 0x30
80000ad8:	e55b3011 	ldrb	r3, [fp, #-17]
80000adc:	e0823003 	add	r3, r2, r3
80000ae0:	e54b3011 	strb	r3, [fp, #-17]
			out((char)nibble);
80000ae4:	e55b2011 	ldrb	r2, [fp, #-17]
80000ae8:	e51b3018 	ldr	r3, [fp, #-24]
80000aec:	e1a00002 	mov	r0, r2
80000af0:	e12fff33 	blx	r3
			continue;
80000af4:	ea00000e 	b	80000b34 <_printk_hex_ulong+0xf8>
		}

		if (remaining-- <= min_width) {
80000af8:	e51b3010 	ldr	r3, [fp, #-16]
80000afc:	e2432001 	sub	r2, r3, #1
80000b00:	e50b2010 	str	r2, [fp, #-16]
80000b04:	e51b2024 	ldr	r2, [fp, #-36]	; 0x24
80000b08:	e1530002 	cmp	r3, r2
80000b0c:	ca000008 	bgt	80000b34 <_printk_hex_ulong+0xf8>
			out((char)(pad_zero ? '0' : ' '));
80000b10:	e51b3020 	ldr	r3, [fp, #-32]
80000b14:	e3530000 	cmp	r3, #0
80000b18:	0a000001 	beq	80000b24 <_printk_hex_ulong+0xe8>
80000b1c:	e3a02030 	mov	r2, #48	; 0x30
80000b20:	ea000000 	b	80000b28 <_printk_hex_ulong+0xec>
80000b24:	e3a02020 	mov	r2, #32
80000b28:	e51b3018 	ldr	r3, [fp, #-24]
80000b2c:	e1a00002 	mov	r0, r2
80000b30:	e12fff33 	blx	r3
{
	int size = sizeof(num) * 2;
	int found_largest_digit = 0;
	int remaining = 8; /* 8 digits max */

	for (; size; size--) {
80000b34:	e51b3008 	ldr	r3, [fp, #-8]
80000b38:	e2433001 	sub	r3, r3, #1
80000b3c:	e50b3008 	str	r3, [fp, #-8]
80000b40:	e51b3008 	ldr	r3, [fp, #-8]
80000b44:	e3530000 	cmp	r3, #0
80000b48:	1affffc9 	bne	80000a74 <_printk_hex_ulong+0x38>

		if (remaining-- <= min_width) {
			out((char)(pad_zero ? '0' : ' '));
		}
	}
}
80000b4c:	e24bd004 	sub	sp, fp, #4
80000b50:	e8bd8800 	pop	{fp, pc}

80000b54 <_vprintk>:
 * @param ap Variable parameters
 *
 * @return N/A
 */
void _vprintk(out_func_t out, const char *fmt, va_list ap)
{
80000b54:	e92d4800 	push	{fp, lr}
80000b58:	e28db004 	add	fp, sp, #4
80000b5c:	e24dd030 	sub	sp, sp, #48	; 0x30
80000b60:	e50b0028 	str	r0, [fp, #-40]	; 0x28
80000b64:	e50b102c 	str	r1, [fp, #-44]	; 0x2c
80000b68:	e50b2030 	str	r2, [fp, #-48]	; 0x30
	int might_format = 0; /* 1 if encountered a '%' */
80000b6c:	e3a03000 	mov	r3, #0
80000b70:	e50b3008 	str	r3, [fp, #-8]
	int pad_zero = 0;
80000b74:	e3a03000 	mov	r3, #0
80000b78:	e50b300c 	str	r3, [fp, #-12]
	int min_width = -1;
80000b7c:	e3e03000 	mvn	r3, #0
80000b80:	e50b3010 	str	r3, [fp, #-16]

	/* fmt has already been adjusted if needed */

	while (*fmt) {
80000b84:	ea0000f5 	b	80000f60 <_vprintk+0x40c>
		if (!might_format) {
80000b88:	e51b3008 	ldr	r3, [fp, #-8]
80000b8c:	e3530000 	cmp	r3, #0
80000b90:	1a000010 	bne	80000bd8 <_vprintk+0x84>
			if (*fmt != '%') {
80000b94:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000b98:	e5d33000 	ldrb	r3, [r3]
80000b9c:	e3530025 	cmp	r3, #37	; 0x25
80000ba0:	0a000005 	beq	80000bbc <_vprintk+0x68>
				out((char)*fmt);
80000ba4:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000ba8:	e5d32000 	ldrb	r2, [r3]
80000bac:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000bb0:	e1a00002 	mov	r0, r2
80000bb4:	e12fff33 	blx	r3
80000bb8:	ea0000e5 	b	80000f54 <_vprintk+0x400>
			} else {
				might_format = 1;
80000bbc:	e3a03001 	mov	r3, #1
80000bc0:	e50b3008 	str	r3, [fp, #-8]
				min_width = -1;
80000bc4:	e3e03000 	mvn	r3, #0
80000bc8:	e50b3010 	str	r3, [fp, #-16]
				pad_zero = 0;
80000bcc:	e3a03000 	mov	r3, #0
80000bd0:	e50b300c 	str	r3, [fp, #-12]
80000bd4:	ea0000de 	b	80000f54 <_vprintk+0x400>
			}
		} else {
			switch (*fmt) {
80000bd8:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000bdc:	e5d33000 	ldrb	r3, [r3]
80000be0:	e2433025 	sub	r3, r3, #37	; 0x25
80000be4:	e3530055 	cmp	r3, #85	; 0x55
80000be8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
80000bec:	ea0000cb 	b	80000f20 <_vprintk+0x3cc>
80000bf0:	80000f10 	andhi	r0, r0, r0, lsl pc
80000bf4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000bf8:	80000f20 	andhi	r0, r0, r0, lsr #30
80000bfc:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c00:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c04:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c08:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c0c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c10:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c14:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c18:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c1c:	80000d48 	andhi	r0, r0, r8, asr #26
80000c20:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c24:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c28:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c2c:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c30:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c34:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c38:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c3c:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c40:	80000d6c 	andhi	r0, r0, ip, ror #26
80000c44:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c48:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c4c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c50:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c54:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c58:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c5c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c60:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c64:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c68:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c6c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c70:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c74:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c78:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c7c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c80:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c84:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c88:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c8c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c90:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c94:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c98:	80000f20 	andhi	r0, r0, r0, lsr #30
80000c9c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ca0:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ca4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ca8:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cac:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cb0:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cb4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cb8:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cbc:	80000e70 	andhi	r0, r0, r0, ror lr
80000cc0:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cc4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cc8:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ccc:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cd0:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cd4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cd8:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cdc:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ce0:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ce4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000ce8:	80000ee4 	andhi	r0, r0, r4, ror #29
80000cec:	80000dbc 			; <UNDEFINED> instruction: 0x80000dbc
80000cf0:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cf4:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cf8:	80000f20 	andhi	r0, r0, r0, lsr #30
80000cfc:	80000f50 	andhi	r0, r0, r0, asr pc
80000d00:	80000dbc 			; <UNDEFINED> instruction: 0x80000dbc
80000d04:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d08:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d0c:	80000f50 	andhi	r0, r0, r0, asr pc
80000d10:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d14:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d18:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d1c:	80000e48 	andhi	r0, r0, r8, asr #28
80000d20:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d24:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d28:	80000e9c 	mulhi	r0, ip, lr
80000d2c:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d30:	80000e1c 	andhi	r0, r0, ip, lsl lr
80000d34:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d38:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d3c:	80000e70 	andhi	r0, r0, r0, ror lr
80000d40:	80000f20 	andhi	r0, r0, r0, lsr #30
80000d44:	80000f50 	andhi	r0, r0, r0, asr pc
				case '0':
					if (min_width < 0 && pad_zero == 0) {
80000d48:	e51b3010 	ldr	r3, [fp, #-16]
80000d4c:	e3530000 	cmp	r3, #0
80000d50:	aa000005 	bge	80000d6c <_vprintk+0x218>
80000d54:	e51b300c 	ldr	r3, [fp, #-12]
80000d58:	e3530000 	cmp	r3, #0
80000d5c:	1a000002 	bne	80000d6c <_vprintk+0x218>
						pad_zero = 1;
80000d60:	e3a03001 	mov	r3, #1
80000d64:	e50b300c 	str	r3, [fp, #-12]
						goto still_might_format;
80000d68:	ea000079 	b	80000f54 <_vprintk+0x400>
					}
					/* Fall through */
				case '1' ... '9':
					if (min_width < 0) {
80000d6c:	e51b3010 	ldr	r3, [fp, #-16]
80000d70:	e3530000 	cmp	r3, #0
80000d74:	aa000004 	bge	80000d8c <_vprintk+0x238>
						min_width = *fmt - '0';
80000d78:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000d7c:	e5d33000 	ldrb	r3, [r3]
80000d80:	e2433030 	sub	r3, r3, #48	; 0x30
80000d84:	e50b3010 	str	r3, [fp, #-16]
					} else {
						min_width = 10 * min_width + *fmt - '0';
					}
					goto still_might_format;
80000d88:	ea000071 	b	80000f54 <_vprintk+0x400>
					/* Fall through */
				case '1' ... '9':
					if (min_width < 0) {
						min_width = *fmt - '0';
					} else {
						min_width = 10 * min_width + *fmt - '0';
80000d8c:	e51b2010 	ldr	r2, [fp, #-16]
80000d90:	e1a03002 	mov	r3, r2
80000d94:	e1a03103 	lsl	r3, r3, #2
80000d98:	e0833002 	add	r3, r3, r2
80000d9c:	e1a03083 	lsl	r3, r3, #1
80000da0:	e1a02003 	mov	r2, r3
80000da4:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000da8:	e5d33000 	ldrb	r3, [r3]
80000dac:	e0823003 	add	r3, r2, r3
80000db0:	e2433030 	sub	r3, r3, #48	; 0x30
80000db4:	e50b3010 	str	r3, [fp, #-16]
					}
					goto still_might_format;
80000db8:	ea000065 	b	80000f54 <_vprintk+0x400>
				case 'h':
					/* FIXME: do nothing for these modifiers */
					goto still_might_format;
				case 'd':
				case 'i': {
						  long d = va_arg(ap, long);
80000dbc:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
80000dc0:	e2832004 	add	r2, r3, #4
80000dc4:	e50b2030 	str	r2, [fp, #-48]	; 0x30
80000dc8:	e5933000 	ldr	r3, [r3]
80000dcc:	e50b3014 	str	r3, [fp, #-20]

						  if (d < 0) {
80000dd0:	e51b3014 	ldr	r3, [fp, #-20]
80000dd4:	e3530000 	cmp	r3, #0
80000dd8:	aa000008 	bge	80000e00 <_vprintk+0x2ac>
							  out((char)'-');
80000ddc:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000de0:	e3a0002d 	mov	r0, #45	; 0x2d
80000de4:	e12fff33 	blx	r3
							  d = -d;
80000de8:	e51b3014 	ldr	r3, [fp, #-20]
80000dec:	e2633000 	rsb	r3, r3, #0
80000df0:	e50b3014 	str	r3, [fp, #-20]
							  min_width--;
80000df4:	e51b3010 	ldr	r3, [fp, #-16]
80000df8:	e2433001 	sub	r3, r3, #1
80000dfc:	e50b3010 	str	r3, [fp, #-16]
						  }
						  _printk_dec_ulong(out, d, pad_zero,
80000e00:	e51b3014 	ldr	r3, [fp, #-20]
80000e04:	e51b0028 	ldr	r0, [fp, #-40]	; 0x28
80000e08:	e1a01003 	mov	r1, r3
80000e0c:	e51b200c 	ldr	r2, [fp, #-12]
80000e10:	e51b3010 	ldr	r3, [fp, #-16]
80000e14:	ebfffeb0 	bl	800008dc <_printk_dec_ulong>
								  min_width);
						  break;
80000e18:	ea000049 	b	80000f44 <_vprintk+0x3f0>
					  }
				case 'u': {
						  unsigned long u = va_arg(
80000e1c:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
80000e20:	e2832004 	add	r2, r3, #4
80000e24:	e50b2030 	str	r2, [fp, #-48]	; 0x30
80000e28:	e5933000 	ldr	r3, [r3]
80000e2c:	e50b301c 	str	r3, [fp, #-28]
								  ap, unsigned long);
						  _printk_dec_ulong(out, u, pad_zero,
80000e30:	e51b0028 	ldr	r0, [fp, #-40]	; 0x28
80000e34:	e51b101c 	ldr	r1, [fp, #-28]
80000e38:	e51b200c 	ldr	r2, [fp, #-12]
80000e3c:	e51b3010 	ldr	r3, [fp, #-16]
80000e40:	ebfffea5 	bl	800008dc <_printk_dec_ulong>
								  min_width);
						  break;
80000e44:	ea00003e 	b	80000f44 <_vprintk+0x3f0>
					  }
				case 'p':
					  out('0');
80000e48:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000e4c:	e3a00030 	mov	r0, #48	; 0x30
80000e50:	e12fff33 	blx	r3
					  out('x');
80000e54:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000e58:	e3a00078 	mov	r0, #120	; 0x78
80000e5c:	e12fff33 	blx	r3
					  /* left-pad pointers with zeros */
					  pad_zero = 1;
80000e60:	e3a03001 	mov	r3, #1
80000e64:	e50b300c 	str	r3, [fp, #-12]
					  min_width = 8;
80000e68:	e3a03008 	mov	r3, #8
80000e6c:	e50b3010 	str	r3, [fp, #-16]
					  /* Fall through */
				case 'x':
				case 'X': {
						  unsigned long x = va_arg(
80000e70:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
80000e74:	e2832004 	add	r2, r3, #4
80000e78:	e50b2030 	str	r2, [fp, #-48]	; 0x30
80000e7c:	e5933000 	ldr	r3, [r3]
80000e80:	e50b3020 	str	r3, [fp, #-32]
								  ap, unsigned long);
						  _printk_hex_ulong(out, x, pad_zero,
80000e84:	e51b0028 	ldr	r0, [fp, #-40]	; 0x28
80000e88:	e51b1020 	ldr	r1, [fp, #-32]
80000e8c:	e51b200c 	ldr	r2, [fp, #-12]
80000e90:	e51b3010 	ldr	r3, [fp, #-16]
80000e94:	ebfffee8 	bl	80000a3c <_printk_hex_ulong>
								  min_width);
						  break;
80000e98:	ea000029 	b	80000f44 <_vprintk+0x3f0>
					  }
				case 's': {
						  char *s = va_arg(ap, char *);
80000e9c:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
80000ea0:	e2832004 	add	r2, r3, #4
80000ea4:	e50b2030 	str	r2, [fp, #-48]	; 0x30
80000ea8:	e5933000 	ldr	r3, [r3]
80000eac:	e50b3018 	str	r3, [fp, #-24]

						  while (*s)
80000eb0:	ea000006 	b	80000ed0 <_vprintk+0x37c>
							  out((char)(*s++));
80000eb4:	e51b3018 	ldr	r3, [fp, #-24]
80000eb8:	e2832001 	add	r2, r3, #1
80000ebc:	e50b2018 	str	r2, [fp, #-24]
80000ec0:	e5d32000 	ldrb	r2, [r3]
80000ec4:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000ec8:	e1a00002 	mov	r0, r2
80000ecc:	e12fff33 	blx	r3
						  break;
					  }
				case 's': {
						  char *s = va_arg(ap, char *);

						  while (*s)
80000ed0:	e51b3018 	ldr	r3, [fp, #-24]
80000ed4:	e5d33000 	ldrb	r3, [r3]
80000ed8:	e3530000 	cmp	r3, #0
80000edc:	1afffff4 	bne	80000eb4 <_vprintk+0x360>
							  out((char)(*s++));
						  break;
80000ee0:	ea000017 	b	80000f44 <_vprintk+0x3f0>
					  }
				case 'c': {
						  int c = va_arg(ap, int);
80000ee4:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
80000ee8:	e2832004 	add	r2, r3, #4
80000eec:	e50b2030 	str	r2, [fp, #-48]	; 0x30
80000ef0:	e5933000 	ldr	r3, [r3]
80000ef4:	e50b3024 	str	r3, [fp, #-36]	; 0x24

						  out(c);
80000ef8:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
80000efc:	e6ef2073 	uxtb	r2, r3
80000f00:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000f04:	e1a00002 	mov	r0, r2
80000f08:	e12fff33 	blx	r3
						  break;
80000f0c:	ea00000c 	b	80000f44 <_vprintk+0x3f0>
					  }
				case '%': {
						  out((char)'%');
80000f10:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000f14:	e3a00025 	mov	r0, #37	; 0x25
80000f18:	e12fff33 	blx	r3
						  break;
80000f1c:	ea000008 	b	80000f44 <_vprintk+0x3f0>
					  }
				default:
					  out((char)'%');
80000f20:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000f24:	e3a00025 	mov	r0, #37	; 0x25
80000f28:	e12fff33 	blx	r3
					  out((char)*fmt);
80000f2c:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000f30:	e5d32000 	ldrb	r2, [r3]
80000f34:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
80000f38:	e1a00002 	mov	r0, r2
80000f3c:	e12fff33 	blx	r3
					  break;
80000f40:	e1a00000 	nop			; (mov r0, r0)
			}
			might_format = 0;
80000f44:	e3a03000 	mov	r3, #0
80000f48:	e50b3008 	str	r3, [fp, #-8]
80000f4c:	ea000000 	b	80000f54 <_vprintk+0x400>
					goto still_might_format;
				case 'z':
				case 'l':
				case 'h':
					/* FIXME: do nothing for these modifiers */
					goto still_might_format;
80000f50:	e1a00000 	nop			; (mov r0, r0)
					  break;
			}
			might_format = 0;
		}
still_might_format:
		++fmt;
80000f54:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000f58:	e2833001 	add	r3, r3, #1
80000f5c:	e50b302c 	str	r3, [fp, #-44]	; 0x2c
	int pad_zero = 0;
	int min_width = -1;

	/* fmt has already been adjusted if needed */

	while (*fmt) {
80000f60:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
80000f64:	e5d33000 	ldrb	r3, [r3]
80000f68:	e3530000 	cmp	r3, #0
80000f6c:	1affff05 	bne	80000b88 <_vprintk+0x34>
			might_format = 0;
		}
still_might_format:
		++fmt;
	}
}
80000f70:	e24bd004 	sub	sp, fp, #4
80000f74:	e8bd8800 	pop	{fp, pc}

80000f78 <memcmp>:
   void *memmove (void *, const void *, int)
   void *memset (void *, int, int)
   void *memchr (const void *, int, int)
 */
int memcmp (const void *dst, const void *src, int n) 
{
80000f78:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80000f7c:	e28db000 	add	fp, sp, #0
80000f80:	e24dd01c 	sub	sp, sp, #28
80000f84:	e50b0010 	str	r0, [fp, #-16]
80000f88:	e50b1014 	str	r1, [fp, #-20]
80000f8c:	e50b2018 	str	r2, [fp, #-24]
	const char *a = dst;
80000f90:	e51b3010 	ldr	r3, [fp, #-16]
80000f94:	e50b3008 	str	r3, [fp, #-8]
	const char *b = src;
80000f98:	e51b3014 	ldr	r3, [fp, #-20]
80000f9c:	e50b300c 	str	r3, [fp, #-12]
	if (!n)
80000fa0:	e51b3018 	ldr	r3, [fp, #-24]
80000fa4:	e3530000 	cmp	r3, #0
80000fa8:	1a000001 	bne	80000fb4 <memcmp+0x3c>
		return 0;
80000fac:	e3a03000 	mov	r3, #0
80000fb0:	ea000015 	b	8000100c <memcmp+0x94>

	while ((n-- > 0) && (*a++ == *b++))
80000fb4:	e1a00000 	nop			; (mov r0, r0)
80000fb8:	e51b3018 	ldr	r3, [fp, #-24]
80000fbc:	e2432001 	sub	r2, r3, #1
80000fc0:	e50b2018 	str	r2, [fp, #-24]
80000fc4:	e3530000 	cmp	r3, #0
80000fc8:	da000009 	ble	80000ff4 <memcmp+0x7c>
80000fcc:	e51b3008 	ldr	r3, [fp, #-8]
80000fd0:	e2832001 	add	r2, r3, #1
80000fd4:	e50b2008 	str	r2, [fp, #-8]
80000fd8:	e5d32000 	ldrb	r2, [r3]
80000fdc:	e51b300c 	ldr	r3, [fp, #-12]
80000fe0:	e2831001 	add	r1, r3, #1
80000fe4:	e50b100c 	str	r1, [fp, #-12]
80000fe8:	e5d33000 	ldrb	r3, [r3]
80000fec:	e1520003 	cmp	r2, r3
80000ff0:	0afffff0 	beq	80000fb8 <memcmp+0x40>
		;
	
	return (*a - *b);
80000ff4:	e51b3008 	ldr	r3, [fp, #-8]
80000ff8:	e5d33000 	ldrb	r3, [r3]
80000ffc:	e1a02003 	mov	r2, r3
80001000:	e51b300c 	ldr	r3, [fp, #-12]
80001004:	e5d33000 	ldrb	r3, [r3]
80001008:	e0633002 	rsb	r3, r3, r2
}
8000100c:	e1a00003 	mov	r0, r3
80001010:	e24bd000 	sub	sp, fp, #0
80001014:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80001018:	e12fff1e 	bx	lr

8000101c <strlen>:
int strlen (const char *str)
{ 
8000101c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80001020:	e28db000 	add	fp, sp, #0
80001024:	e24dd014 	sub	sp, sp, #20
80001028:	e50b0010 	str	r0, [fp, #-16]
	int i = 0;
8000102c:	e3a03000 	mov	r3, #0
80001030:	e50b3008 	str	r3, [fp, #-8]
	while(*(str+i) !='\0') 
80001034:	ea000002 	b	80001044 <strlen+0x28>
		i++;
80001038:	e51b3008 	ldr	r3, [fp, #-8]
8000103c:	e2833001 	add	r3, r3, #1
80001040:	e50b3008 	str	r3, [fp, #-8]
	return (*a - *b);
}
int strlen (const char *str)
{ 
	int i = 0;
	while(*(str+i) !='\0') 
80001044:	e51b3008 	ldr	r3, [fp, #-8]
80001048:	e51b2010 	ldr	r2, [fp, #-16]
8000104c:	e0823003 	add	r3, r2, r3
80001050:	e5d33000 	ldrb	r3, [r3]
80001054:	e3530000 	cmp	r3, #0
80001058:	1afffff6 	bne	80001038 <strlen+0x1c>
		i++;
	return i;
8000105c:	e51b3008 	ldr	r3, [fp, #-8]
}
80001060:	e1a00003 	mov	r0, r3
80001064:	e24bd000 	sub	sp, fp, #0
80001068:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
8000106c:	e12fff1e 	bx	lr

80001070 <strcpy>:

char *strcpy (char *dst, const char *src) 
{
80001070:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80001074:	e28db000 	add	fp, sp, #0
80001078:	e24dd014 	sub	sp, sp, #20
8000107c:	e50b0010 	str	r0, [fp, #-16]
80001080:	e50b1014 	str	r1, [fp, #-20]
	char *d = dst;
80001084:	e51b3010 	ldr	r3, [fp, #-16]
80001088:	e50b3008 	str	r3, [fp, #-8]
	while ((*dst++ = *src++));
8000108c:	e1a00000 	nop			; (mov r0, r0)
80001090:	e51b3010 	ldr	r3, [fp, #-16]
80001094:	e2832001 	add	r2, r3, #1
80001098:	e50b2010 	str	r2, [fp, #-16]
8000109c:	e51b2014 	ldr	r2, [fp, #-20]
800010a0:	e2821001 	add	r1, r2, #1
800010a4:	e50b1014 	str	r1, [fp, #-20]
800010a8:	e5d22000 	ldrb	r2, [r2]
800010ac:	e5c32000 	strb	r2, [r3]
800010b0:	e5d33000 	ldrb	r3, [r3]
800010b4:	e3530000 	cmp	r3, #0
800010b8:	1afffff4 	bne	80001090 <strcpy+0x20>
	return d;
800010bc:	e51b3008 	ldr	r3, [fp, #-8]
}
800010c0:	e1a00003 	mov	r0, r3
800010c4:	e24bd000 	sub	sp, fp, #0
800010c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
800010cc:	e12fff1e 	bx	lr

800010d0 <strncpy>:


char *strncpy (char *dst, const char *src, int n)
{
800010d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800010d4:	e28db000 	add	fp, sp, #0
800010d8:	e24dd01c 	sub	sp, sp, #28
800010dc:	e50b0010 	str	r0, [fp, #-16]
800010e0:	e50b1014 	str	r1, [fp, #-20]
800010e4:	e50b2018 	str	r2, [fp, #-24]
	char *d = dst;
800010e8:	e51b3010 	ldr	r3, [fp, #-16]
800010ec:	e50b3008 	str	r3, [fp, #-8]
	while ((n-- > 0) && (*dst++ = *src++) );
800010f0:	e1a00000 	nop			; (mov r0, r0)
800010f4:	e51b3018 	ldr	r3, [fp, #-24]
800010f8:	e2432001 	sub	r2, r3, #1
800010fc:	e50b2018 	str	r2, [fp, #-24]
80001100:	e3530000 	cmp	r3, #0
80001104:	da00000a 	ble	80001134 <strncpy+0x64>
80001108:	e51b3010 	ldr	r3, [fp, #-16]
8000110c:	e2832001 	add	r2, r3, #1
80001110:	e50b2010 	str	r2, [fp, #-16]
80001114:	e51b2014 	ldr	r2, [fp, #-20]
80001118:	e2821001 	add	r1, r2, #1
8000111c:	e50b1014 	str	r1, [fp, #-20]
80001120:	e5d22000 	ldrb	r2, [r2]
80001124:	e5c32000 	strb	r2, [r3]
80001128:	e5d33000 	ldrb	r3, [r3]
8000112c:	e3530000 	cmp	r3, #0
80001130:	1affffef 	bne	800010f4 <strncpy+0x24>
	while (n > 0) {
80001134:	ea000007 	b	80001158 <strncpy+0x88>
		*dst++ = '\0';
80001138:	e51b3010 	ldr	r3, [fp, #-16]
8000113c:	e2832001 	add	r2, r3, #1
80001140:	e50b2010 	str	r2, [fp, #-16]
80001144:	e3a02000 	mov	r2, #0
80001148:	e5c32000 	strb	r2, [r3]
		n--;
8000114c:	e51b3018 	ldr	r3, [fp, #-24]
80001150:	e2433001 	sub	r3, r3, #1
80001154:	e50b3018 	str	r3, [fp, #-24]

char *strncpy (char *dst, const char *src, int n)
{
	char *d = dst;
	while ((n-- > 0) && (*dst++ = *src++) );
	while (n > 0) {
80001158:	e51b3018 	ldr	r3, [fp, #-24]
8000115c:	e3530000 	cmp	r3, #0
80001160:	cafffff4 	bgt	80001138 <strncpy+0x68>
		*dst++ = '\0';
		n--;
	}
	return d;
80001164:	e51b3008 	ldr	r3, [fp, #-8]
}
80001168:	e1a00003 	mov	r0, r3
8000116c:	e24bd000 	sub	sp, fp, #0
80001170:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80001174:	e12fff1e 	bx	lr

80001178 <strcat>:
char *strcat (char *dst, const char *src) 
{
80001178:	e92d4800 	push	{fp, lr}
8000117c:	e28db004 	add	fp, sp, #4
80001180:	e24dd010 	sub	sp, sp, #16
80001184:	e50b0010 	str	r0, [fp, #-16]
80001188:	e50b1014 	str	r1, [fp, #-20]
	int i = strlen(dst);
8000118c:	e51b0010 	ldr	r0, [fp, #-16]
80001190:	ebffffa1 	bl	8000101c <strlen>
80001194:	e50b0008 	str	r0, [fp, #-8]
	while ((*(dst + i++) = (*src++)));
80001198:	e1a00000 	nop			; (mov r0, r0)
8000119c:	e51b3008 	ldr	r3, [fp, #-8]
800011a0:	e2832001 	add	r2, r3, #1
800011a4:	e50b2008 	str	r2, [fp, #-8]
800011a8:	e1a02003 	mov	r2, r3
800011ac:	e51b3010 	ldr	r3, [fp, #-16]
800011b0:	e0833002 	add	r3, r3, r2
800011b4:	e51b2014 	ldr	r2, [fp, #-20]
800011b8:	e2821001 	add	r1, r2, #1
800011bc:	e50b1014 	str	r1, [fp, #-20]
800011c0:	e5d22000 	ldrb	r2, [r2]
800011c4:	e5c32000 	strb	r2, [r3]
800011c8:	e5d33000 	ldrb	r3, [r3]
800011cc:	e3530000 	cmp	r3, #0
800011d0:	1afffff1 	bne	8000119c <strcat+0x24>

	return dst;
800011d4:	e51b3010 	ldr	r3, [fp, #-16]
}
800011d8:	e1a00003 	mov	r0, r3
800011dc:	e24bd004 	sub	sp, fp, #4
800011e0:	e8bd8800 	pop	{fp, pc}

800011e4 <strncat>:
char *strncat (char *dst, const char *src, int n)
{
800011e4:	e92d4800 	push	{fp, lr}
800011e8:	e28db004 	add	fp, sp, #4
800011ec:	e24dd018 	sub	sp, sp, #24
800011f0:	e50b0010 	str	r0, [fp, #-16]
800011f4:	e50b1014 	str	r1, [fp, #-20]
800011f8:	e50b2018 	str	r2, [fp, #-24]
	int i = strlen(dst);
800011fc:	e51b0010 	ldr	r0, [fp, #-16]
80001200:	ebffff85 	bl	8000101c <strlen>
80001204:	e50b0008 	str	r0, [fp, #-8]
	while ((n-- > 0) && (*(dst+i++) = (*src++)));
80001208:	e1a00000 	nop			; (mov r0, r0)
8000120c:	e51b3018 	ldr	r3, [fp, #-24]
80001210:	e2432001 	sub	r2, r3, #1
80001214:	e50b2018 	str	r2, [fp, #-24]
80001218:	e3530000 	cmp	r3, #0
8000121c:	da00000d 	ble	80001258 <strncat+0x74>
80001220:	e51b3008 	ldr	r3, [fp, #-8]
80001224:	e2832001 	add	r2, r3, #1
80001228:	e50b2008 	str	r2, [fp, #-8]
8000122c:	e1a02003 	mov	r2, r3
80001230:	e51b3010 	ldr	r3, [fp, #-16]
80001234:	e0833002 	add	r3, r3, r2
80001238:	e51b2014 	ldr	r2, [fp, #-20]
8000123c:	e2821001 	add	r1, r2, #1
80001240:	e50b1014 	str	r1, [fp, #-20]
80001244:	e5d22000 	ldrb	r2, [r2]
80001248:	e5c32000 	strb	r2, [r3]
8000124c:	e5d33000 	ldrb	r3, [r3]
80001250:	e3530000 	cmp	r3, #0
80001254:	1affffec 	bne	8000120c <strncat+0x28>
	while (n > 0) {
80001258:	ea00000a 	b	80001288 <strncat+0xa4>
		*(dst + i++) = '\0';
8000125c:	e51b3008 	ldr	r3, [fp, #-8]
80001260:	e2832001 	add	r2, r3, #1
80001264:	e50b2008 	str	r2, [fp, #-8]
80001268:	e1a02003 	mov	r2, r3
8000126c:	e51b3010 	ldr	r3, [fp, #-16]
80001270:	e0833002 	add	r3, r3, r2
80001274:	e3a02000 	mov	r2, #0
80001278:	e5c32000 	strb	r2, [r3]
		n--;
8000127c:	e51b3018 	ldr	r3, [fp, #-24]
80001280:	e2433001 	sub	r3, r3, #1
80001284:	e50b3018 	str	r3, [fp, #-24]
}
char *strncat (char *dst, const char *src, int n)
{
	int i = strlen(dst);
	while ((n-- > 0) && (*(dst+i++) = (*src++)));
	while (n > 0) {
80001288:	e51b3018 	ldr	r3, [fp, #-24]
8000128c:	e3530000 	cmp	r3, #0
80001290:	cafffff1 	bgt	8000125c <strncat+0x78>
		*(dst + i++) = '\0';
		n--;
	}		
	return dst;
80001294:	e51b3010 	ldr	r3, [fp, #-16]

}
80001298:	e1a00003 	mov	r0, r3
8000129c:	e24bd004 	sub	sp, fp, #4
800012a0:	e8bd8800 	pop	{fp, pc}

800012a4 <strcmp>:

int strcmp (char const* dst, const char *src)
{
800012a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800012a8:	e28db000 	add	fp, sp, #0
800012ac:	e24dd00c 	sub	sp, sp, #12
800012b0:	e50b0008 	str	r0, [fp, #-8]
800012b4:	e50b100c 	str	r1, [fp, #-12]
	while ( *dst && *src) {
800012b8:	ea00000c 	b	800012f0 <strcmp+0x4c>
		if (*dst != *src)
800012bc:	e51b3008 	ldr	r3, [fp, #-8]
800012c0:	e5d32000 	ldrb	r2, [r3]
800012c4:	e51b300c 	ldr	r3, [fp, #-12]
800012c8:	e5d33000 	ldrb	r3, [r3]
800012cc:	e1520003 	cmp	r2, r3
800012d0:	0a000000 	beq	800012d8 <strcmp+0x34>
			break;
800012d4:	ea00000d 	b	80001310 <strcmp+0x6c>
		dst++;
800012d8:	e51b3008 	ldr	r3, [fp, #-8]
800012dc:	e2833001 	add	r3, r3, #1
800012e0:	e50b3008 	str	r3, [fp, #-8]
		src++;
800012e4:	e51b300c 	ldr	r3, [fp, #-12]
800012e8:	e2833001 	add	r3, r3, #1
800012ec:	e50b300c 	str	r3, [fp, #-12]

}

int strcmp (char const* dst, const char *src)
{
	while ( *dst && *src) {
800012f0:	e51b3008 	ldr	r3, [fp, #-8]
800012f4:	e5d33000 	ldrb	r3, [r3]
800012f8:	e3530000 	cmp	r3, #0
800012fc:	0a000003 	beq	80001310 <strcmp+0x6c>
80001300:	e51b300c 	ldr	r3, [fp, #-12]
80001304:	e5d33000 	ldrb	r3, [r3]
80001308:	e3530000 	cmp	r3, #0
8000130c:	1affffea 	bne	800012bc <strcmp+0x18>
		if (*dst != *src)
			break;
		dst++;
		src++;
	}
	return (*dst - *src);
80001310:	e51b3008 	ldr	r3, [fp, #-8]
80001314:	e5d33000 	ldrb	r3, [r3]
80001318:	e1a02003 	mov	r2, r3
8000131c:	e51b300c 	ldr	r3, [fp, #-12]
80001320:	e5d33000 	ldrb	r3, [r3]
80001324:	e0633002 	rsb	r3, r3, r2

}
80001328:	e1a00003 	mov	r0, r3
8000132c:	e24bd000 	sub	sp, fp, #0
80001330:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80001334:	e12fff1e 	bx	lr

80001338 <strncmp>:


int strncmp (char const *dst, const char *src, int n)
{  
80001338:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
8000133c:	e28db000 	add	fp, sp, #0
80001340:	e24dd014 	sub	sp, sp, #20
80001344:	e50b0008 	str	r0, [fp, #-8]
80001348:	e50b100c 	str	r1, [fp, #-12]
8000134c:	e50b2010 	str	r2, [fp, #-16]

	while ( *dst && *src && n > 0) {
80001350:	ea00000f 	b	80001394 <strncmp+0x5c>
		if (*dst != *src)
80001354:	e51b3008 	ldr	r3, [fp, #-8]
80001358:	e5d32000 	ldrb	r2, [r3]
8000135c:	e51b300c 	ldr	r3, [fp, #-12]
80001360:	e5d33000 	ldrb	r3, [r3]
80001364:	e1520003 	cmp	r2, r3
80001368:	0a000000 	beq	80001370 <strncmp+0x38>
			break;
8000136c:	ea000013 	b	800013c0 <strncmp+0x88>
		dst++;
80001370:	e51b3008 	ldr	r3, [fp, #-8]
80001374:	e2833001 	add	r3, r3, #1
80001378:	e50b3008 	str	r3, [fp, #-8]
		src++;
8000137c:	e51b300c 	ldr	r3, [fp, #-12]
80001380:	e2833001 	add	r3, r3, #1
80001384:	e50b300c 	str	r3, [fp, #-12]
		n--;
80001388:	e51b3010 	ldr	r3, [fp, #-16]
8000138c:	e2433001 	sub	r3, r3, #1
80001390:	e50b3010 	str	r3, [fp, #-16]


int strncmp (char const *dst, const char *src, int n)
{  

	while ( *dst && *src && n > 0) {
80001394:	e51b3008 	ldr	r3, [fp, #-8]
80001398:	e5d33000 	ldrb	r3, [r3]
8000139c:	e3530000 	cmp	r3, #0
800013a0:	0a000006 	beq	800013c0 <strncmp+0x88>
800013a4:	e51b300c 	ldr	r3, [fp, #-12]
800013a8:	e5d33000 	ldrb	r3, [r3]
800013ac:	e3530000 	cmp	r3, #0
800013b0:	0a000002 	beq	800013c0 <strncmp+0x88>
800013b4:	e51b3010 	ldr	r3, [fp, #-16]
800013b8:	e3530000 	cmp	r3, #0
800013bc:	caffffe4 	bgt	80001354 <strncmp+0x1c>
			break;
		dst++;
		src++;
		n--;
	}
	return (*dst - *src);
800013c0:	e51b3008 	ldr	r3, [fp, #-8]
800013c4:	e5d33000 	ldrb	r3, [r3]
800013c8:	e1a02003 	mov	r2, r3
800013cc:	e51b300c 	ldr	r3, [fp, #-12]
800013d0:	e5d33000 	ldrb	r3, [r3]
800013d4:	e0633002 	rsb	r3, r3, r2
}
800013d8:	e1a00003 	mov	r0, r3
800013dc:	e24bd000 	sub	sp, fp, #0
800013e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
800013e4:	e12fff1e 	bx	lr

800013e8 <strchr>:
char *strchr (char const *ptr, int c) 
{
800013e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
800013ec:	e28db000 	add	fp, sp, #0
800013f0:	e24dd014 	sub	sp, sp, #20
800013f4:	e50b0010 	str	r0, [fp, #-16]
800013f8:	e50b1014 	str	r1, [fp, #-20]
	char s = (char)c;
800013fc:	e51b3014 	ldr	r3, [fp, #-20]
80001400:	e54b3005 	strb	r3, [fp, #-5]
	while ( (*ptr != '\0') && (*ptr != s))
80001404:	ea000002 	b	80001414 <strchr+0x2c>
	{
		ptr++;
80001408:	e51b3010 	ldr	r3, [fp, #-16]
8000140c:	e2833001 	add	r3, r3, #1
80001410:	e50b3010 	str	r3, [fp, #-16]
	return (*dst - *src);
}
char *strchr (char const *ptr, int c) 
{
	char s = (char)c;
	while ( (*ptr != '\0') && (*ptr != s))
80001414:	e51b3010 	ldr	r3, [fp, #-16]
80001418:	e5d33000 	ldrb	r3, [r3]
8000141c:	e3530000 	cmp	r3, #0
80001420:	0a000004 	beq	80001438 <strchr+0x50>
80001424:	e51b3010 	ldr	r3, [fp, #-16]
80001428:	e5d33000 	ldrb	r3, [r3]
8000142c:	e55b2005 	ldrb	r2, [fp, #-5]
80001430:	e1520003 	cmp	r2, r3
80001434:	1afffff3 	bne	80001408 <strchr+0x20>
	{
		ptr++;
	}
	return (*ptr == '\0' ? NULL : (char *)ptr);
80001438:	e51b3010 	ldr	r3, [fp, #-16]
8000143c:	e5d33000 	ldrb	r3, [r3]
80001440:	e3530000 	cmp	r3, #0
80001444:	0a000001 	beq	80001450 <strchr+0x68>
80001448:	e51b3010 	ldr	r3, [fp, #-16]
8000144c:	ea000000 	b	80001454 <strchr+0x6c>
80001450:	e3a03000 	mov	r3, #0
}
80001454:	e1a00003 	mov	r0, r3
80001458:	e24bd000 	sub	sp, fp, #0
8000145c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
80001460:	e12fff1e 	bx	lr

80001464 <strrchr>:
char *strrchr (char const *ptr, int c)
{
80001464:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
80001468:	e28db000 	add	fp, sp, #0
8000146c:	e24dd014 	sub	sp, sp, #20
80001470:	e50b0010 	str	r0, [fp, #-16]
80001474:	e50b1014 	str	r1, [fp, #-20]
	char *temp = NULL;
80001478:	e3a03000 	mov	r3, #0
8000147c:	e50b3008 	str	r3, [fp, #-8]
	char s = (char) c;
80001480:	e51b3014 	ldr	r3, [fp, #-20]
80001484:	e54b3009 	strb	r3, [fp, #-9]
	while (*ptr != '\0') {
80001488:	ea000009 	b	800014b4 <strrchr+0x50>
		if (*ptr == s)
8000148c:	e51b3010 	ldr	r3, [fp, #-16]
80001490:	e5d33000 	ldrb	r3, [r3]
80001494:	e55b2009 	ldrb	r2, [fp, #-9]
80001498:	e1520003 	cmp	r2, r3
8000149c:	1a000001 	bne	800014a8 <strrchr+0x44>
			temp = (char *)ptr;
800014a0:	e51b3010 	ldr	r3, [fp, #-16]
800014a4:	e50b3008 	str	r3, [fp, #-8]
		ptr++;
800014a8:	e51b3010 	ldr	r3, [fp, #-16]
800014ac:	e2833001 	add	r3, r3, #1
800014b0:	e50b3010 	str	r3, [fp, #-16]
}
char *strrchr (char const *ptr, int c)
{
	char *temp = NULL;
	char s = (char) c;
	while (*ptr != '\0') {
800014b4:	e51b3010 	ldr	r3, [fp, #-16]
800014b8:	e5d33000 	ldrb	r3, [r3]
800014bc:	e3530000 	cmp	r3, #0
800014c0:	1afffff1 	bne	8000148c <strrchr+0x28>
		if (*ptr == s)
			temp = (char *)ptr;
		ptr++;
	}
	return temp;
800014c4:	e51b3008 	ldr	r3, [fp, #-8]
}
800014c8:	e1a00003 	mov	r0, r3
800014cc:	e24bd000 	sub	sp, fp, #0
800014d0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
800014d4:	e12fff1e 	bx	lr

Disassembly of section .rodata:

800014d8 <.LC0>:
800014d8:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
800014dc:	696e6920 	stmdbvs	lr!, {r5, r8, fp, sp, lr}^
800014e0:	6f642074 	svcvs	0x00642074
800014e4:	3a20656e 	bcc	8081aaa4 <value+0x81957a>
800014e8:	00000020 	andeq	r0, r0, r0, lsr #32

800014ec <.LC1>:
800014ec:	73206948 			; <UNDEFINED> instruction: 0x73206948
800014f0:	68736168 	ldmdavs	r3!, {r3, r5, r6, r8, sp, lr}^
800014f4:	00000a69 	andeq	r0, r0, r9, ror #20

800014f8 <.LC2>:
800014f8:	64206948 	strtvs	r6, [r0], #-2376	; 0x948
800014fc:	61626261 	cmnvs	r2, r1, ror #4
80001500:	00000a0a 	andeq	r0, r0, sl, lsl #20

80001504 <.LC3>:
80001504:	2052434c 	subscs	r4, r2, ip, asr #6
80001508:	756c6176 	strbvc	r6, [ip, #-374]!	; 0x176
8000150c:	203d2065 	eorscs	r2, sp, r5, rrx
80001510:	000a7825 	andeq	r7, sl, r5, lsr #16

80001514 <.LC4>:
80001514:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xe45
80001518:	20612072 	rsbcs	r2, r1, r2, ror r0
8000151c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
80001520:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0x361
80001524:	203a2072 	eorscs	r2, sl, r2, ror r0
	...

Disassembly of section .bss:

8000152a <value>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003841 	andeq	r3, r0, r1, asr #16
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002e 	andeq	r0, r0, lr, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	06003841 	streq	r3, [r0], -r1, asr #16
  1c:	0841070a 	stmdaeq	r1, {r1, r3, r8, r9, sl}^
  20:	0a020901 	beq	8242c <_start-0x7ff7dbd4>
  24:	12010c03 	andne	r0, r1, #768	; 0x300
  28:	15011404 	strne	r1, [r1, #-1028]	; 0x404
  2c:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  30:	1c011a01 	stcne	10, cr1, [r1], {1}
  34:	44012201 	strmi	r2, [r1], #-513	; 0x201
  38:	Address 0x0000000000000038 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_start-0x7ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xd45
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0x464
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2973726f 	ldmdbcs	r3!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
  2c:	392e3420 	stmdbcc	lr!, {r5, sl, ip, sp}
  30:	3220332e 	eorcc	r3, r0, #-1207959552	; 0xb8000000
  34:	30353130 	eorscc	r3, r5, r0, lsr r1
  38:	20393235 	eorscs	r3, r9, r5, lsr r2
  3c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  40:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0x165
  44:	415b2029 	cmpmi	fp, r9, lsr #32
  48:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff2fe <value+0x7fffddd4>
  4c:	6465626d 	strbtvs	r6, [r5], #-621	; 0x26d
  50:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  54:	2d395f34 	ldccs	15, cr5, [r9, #-208]!	; 0xffffff30
  58:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  5c:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  60:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  64:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  68:	39373232 	ldmdbcc	r7!, {r1, r4, r5, r9, ip, sp}
  6c:	005d3737 	subseq	r3, sp, r7, lsr r7

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000007f 	andeq	r0, r0, pc, ror r0
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000078 	andeq	r0, r0, r8, ror r0
      10:	00006301 	andeq	r6, r0, r1, lsl #6
      14:	00000900 	andeq	r0, r0, r0, lsl #18
      18:	00003c00 	andeq	r3, r0, r0, lsl #24
      1c:	00006880 	andeq	r6, r0, r0, lsl #17
      20:	00000000 	andeq	r0, r0, r0
      24:	00500200 	subseq	r0, r0, r0, lsl #4
      28:	04020000 	streq	r0, [r2], #-0
      2c:	00000030 	andeq	r0, r0, r0, lsr r0
      30:	ed070403 	cfstrs	mvf0, [r7, #-12]
      34:	0300001d 	movweq	r0, #29
      38:	003d0702 	eorseq	r0, sp, r2, lsl #14
      3c:	01030000 	mrseq	r0, (UNDEF: 3)
      40:	00006a08 	andeq	r6, r0, r8, lsl #20
      44:	05040400 	streq	r0, [r4, #-1024]	; 0x400
      48:	00746e69 	rsbseq	r6, r4, r9, ror #28
      4c:	59050203 	stmdbpl	r5, {r0, r1, r9}
      50:	03000000 	movweq	r0, #0
      54:	00730801 	rsbseq	r0, r3, r1, lsl #16
      58:	00050000 	andeq	r0, r5, r0
      5c:	01000000 	mrseq	r0, (UNDEF: 0)
      60:	00003c03 	andeq	r3, r0, r3, lsl #24
      64:	00006880 	andeq	r6, r0, r0, lsl #17
      68:	7d9c0100 	ldfvcs	f0, [ip]
      6c:	06000000 	streq	r0, [r0], -r0
      70:	01006172 	tsteq	r0, r2, ror r1
      74:	00007d07 	andeq	r7, r0, r7, lsl #26
      78:	74910200 	ldrvc	r0, [r1], #512	; 0x200
      7c:	00300700 	eorseq	r0, r0, r0, lsl #14
      80:	6c000000 	stcvs	0, cr0, [r0], {-0}
      84:	04000004 	streq	r0, [r0], #-4
      88:	00006700 	andeq	r6, r0, r0, lsl #14
      8c:	78010400 	stmdavc	r1, {sl}
      90:	01000000 	mrseq	r0, (UNDEF: 0)
      94:	000009a9 	andeq	r0, r0, r9, lsr #19
      98:	00000009 	andeq	r0, r0, r9
      9c:	800000a4 	andhi	r0, r0, r4, lsr #1
      a0:	0000014c 	andeq	r0, r0, ip, asr #2
      a4:	00000045 	andeq	r0, r0, r5, asr #32
      a8:	00005002 	andeq	r5, r0, r2
      ac:	30040200 	andcc	r0, r4, r0, lsl #4
      b0:	03000000 	movweq	r0, #0
      b4:	1ded0704 	stclne	7, cr0, [sp, #16]!
      b8:	02030000 	andeq	r0, r3, #0
      bc:	00003d07 	andeq	r3, r0, r7, lsl #26
      c0:	08010300 	stmdaeq	r1, {r8, r9}
      c4:	0000006a 	andeq	r0, r0, sl, rrx
      c8:	69050404 	stmdbvs	r5, {r2, sl}
      cc:	0300746e 	movweq	r7, #1134	; 0x46e
      d0:	00590502 	subseq	r0, r9, r2, lsl #10
      d4:	01030000 	mrseq	r0, (UNDEF: 3)
      d8:	00007308 	andeq	r7, r0, r8, lsl #6
      dc:	03040500 	movweq	r0, #17664	; 0x4500
      e0:	0000b30b 	andeq	fp, r0, fp, lsl #6
      e4:	06600600 	strbteq	r0, [r0], -r0, lsl #12
      e8:	80800000 	addhi	r0, r0, r0
      ec:	0604a780 	streq	sl, [r4], -r0, lsl #15
      f0:	000006d6 	ldrdeq	r0, [r0], -r6
      f4:	a7808880 	strge	r8, [r0, r0, lsl #17]
      f8:	07ac0604 	streq	r0, [ip, r4, lsl #12]!
      fc:	8a800000 	bhi	fe000104 <value+0x7dffebda>
     100:	0604a780 	streq	sl, [r4], -r0, lsl #15
     104:	000008be 			; <UNDEFINED> instruction: 0x000008be
     108:	a7808c80 	strge	r8, [r0, r0, lsl #25]
     10c:	08b40604 	ldmeq	r4!, {r2, r9, sl}
     110:	8e800000 	cdphi	0, 8, cr0, cr0, cr0, {0}
     114:	0604a780 	streq	sl, [r4], -r0, lsl #15
     118:	000002d8 	ldrdeq	r0, [r0], -r8
     11c:	a7809080 	strge	r9, [r0, r0, lsl #1]
     120:	090e0604 	stmdbeq	lr, {r2, r9, sl}
     124:	92800000 	addls	r0, r0, #0
     128:	0604a780 	streq	sl, [r4], -r0, lsl #15
     12c:	000006ae 	andeq	r0, r0, lr, lsr #13
     130:	a7809480 	strge	r9, [r0, r0, lsl #9]
     134:	37020004 	strcc	r0, [r2, -r4]
     138:	0300000b 	movweq	r0, #11
     13c:	00005a14 	andeq	r5, r0, r4, lsl sl
     140:	03020500 	movweq	r0, #9472	; 0x2500
     144:	0003ce1c 	andeq	ip, r3, ip, lsl lr
     148:	07c90600 	strbeq	r0, [r9, r0, lsl #12]
     14c:	06000000 	streq	r0, [r0], -r0
     150:	00000606 	andeq	r0, r0, r6, lsl #12
     154:	018f0604 	orreq	r0, pc, r4, lsl #12
     158:	06080000 	streq	r0, [r8], -r0
     15c:	000000fb 	strdeq	r0, [r0], -fp
     160:	0519060c 	ldreq	r0, [r9, #-1548]	; 0x60c
     164:	06140000 	ldreq	r0, [r4], -r0
     168:	00000878 	andeq	r0, r0, r8, ror r8
     16c:	06820618 	pkhbteq	r0, r2, r8, lsl #12
     170:	061c0000 	ldreq	r0, [ip], -r0
     174:	0000017a 	andeq	r0, r0, sl, ror r1
     178:	07710624 	ldrbeq	r0, [r1, -r4, lsr #12]!
     17c:	06280000 	strteq	r0, [r8], -r0
     180:	00000861 	andeq	r0, r0, r1, ror #16
     184:	09ed062c 	stmibeq	sp!, {r2, r3, r5, r9, sl}^
     188:	06300000 	ldrteq	r0, [r0], -r0
     18c:	0000010f 	andeq	r0, r0, pc, lsl #2
     190:	01da0634 	bicseq	r0, sl, r4, lsr r6
     194:	06380000 	ldrteq	r0, [r8], -r0
     198:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     19c:	0785063c 			; <UNDEFINED> instruction: 0x0785063c
     1a0:	00c00000 	sbceq	r0, r0, r0
     1a4:	00038c06 	andeq	r8, r3, r6, lsl #24
     1a8:	0600c400 	streq	ip, [r0], -r0, lsl #8
     1ac:	00000307 	andeq	r0, r0, r7, lsl #6
     1b0:	250600c8 	strcs	r0, [r6, #-200]	; 0xc8
     1b4:	cc000001 	stcgt	0, cr0, [r0], {1}
     1b8:	049b0600 	ldreq	r0, [fp], #1536	; 0x600
     1bc:	00d00000 	sbcseq	r0, r0, r0
     1c0:	0005f206 	andeq	pc, r5, r6, lsl #4
     1c4:	0600e000 	streq	lr, [r0], -r0
     1c8:	000002c4 	andeq	r0, r0, r4, asr #5
     1cc:	640600e4 	strvs	r0, [r6], #-228	; 0xe4
     1d0:	e8000001 	stmda	r0, {r0}
     1d4:	0a620600 	beq	18819dc <_start-0x7e77e624>
     1d8:	00ec0000 	rsceq	r0, ip, r0
     1dc:	000b0b06 	andeq	r0, fp, r6, lsl #22
     1e0:	0600f000 	streq	pc, [r0], -r0
     1e4:	000003a0 	andeq	r0, r0, r0, lsr #7
     1e8:	4f0600f4 	svcmi	0x000600f4
     1ec:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
     1f0:	054c0600 	strbeq	r0, [ip, #-1536]	; 0x600
     1f4:	00fc0000 	rscseq	r0, ip, r0
     1f8:	00034706 	andeq	r4, r3, r6, lsl #14
     1fc:	06018000 	streq	r8, [r1], -r0
     200:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
     204:	2e060184 	adfcsd	f0, f6, f4
     208:	88000004 	stmdahi	r0, {r2}
     20c:	07310601 	ldreq	r0, [r1, -r1, lsl #12]!
     210:	01ac0000 			; <UNDEFINED> instruction: 0x01ac0000
     214:	00075c06 	andeq	r5, r7, r6, lsl #24
     218:	0601b000 	streq	fp, [r1], -r0
     21c:	000007b4 			; <UNDEFINED> instruction: 0x000007b4
     220:	2e0601b4 	mcrcs	1, 0, r0, cr6, cr4, {5}
     224:	bc000009 	stclt	0, cr0, [r0], {9}
     228:	02af0601 	adceq	r0, pc, #1048576	; 0x100000
     22c:	01c00000 	biceq	r0, r0, r0
     230:	0004c106 	andeq	ip, r4, r6, lsl #2
     234:	0601c400 	streq	ip, [r1], -r0, lsl #8
     238:	00000adc 	ldrdeq	r0, [r0], -ip
     23c:	7f0601cc 	svcvc	0x000601cc
     240:	d0000009 	andle	r0, r0, r9
     244:	04d60601 	ldrbeq	r0, [r6], #1537	; 0x601
     248:	01d40000 	bicseq	r0, r4, r0
     24c:	0005af06 	andeq	sl, r5, r6, lsl #30
     250:	0601d800 	streq	sp, [r1], -r0, lsl #16
     254:	00000af3 	strdeq	r0, [r0], -r3
     258:	af0601dc 	svcge	0x000601dc
     25c:	e0000004 	and	r0, r0, r4
     260:	032f0601 			; <UNDEFINED> instruction: 0x032f0601
     264:	01e40000 	mvneq	r0, r0
     268:	00070506 	andeq	r0, r7, r6, lsl #10
     26c:	0601e800 	streq	lr, [r1], -r0, lsl #16
     270:	00000485 	andeq	r0, r0, r5, lsl #9
     274:	ed0601ec 	stfs	f0, [r6, #-944]	; 0xfffffc50
     278:	f0000004 			; <UNDEFINED> instruction: 0xf0000004
     27c:	035d0601 	cmpeq	sp, #1048576	; 0x100000
     280:	01f40000 	mvnseq	r0, r0
     284:	0003cb06 	andeq	ip, r3, r6, lsl #22
     288:	0601f800 	streq	pc, [r1], -r0, lsl #16
     28c:	000007df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     290:	4c0601fc 	stfmis	f0, [r6], {252}	; 0xfc
     294:	80000008 	andhi	r0, r0, r8
     298:	03df0602 	bicseq	r0, pc, #2097152	; 0x200000
     29c:	028c0000 	addeq	r0, ip, #0
     2a0:	00069606 	andeq	r9, r6, r6, lsl #12
     2a4:	06029000 	streq	r9, [r2], -r0
     2a8:	00000139 	andeq	r0, r0, r9, lsr r1
     2ac:	5606029c 			; <UNDEFINED> instruction: 0x5606029c
     2b0:	a0000009 	andge	r0, r0, r9
     2b4:	0a010602 	beq	41ac4 <_start-0x7ffbe53c>
     2b8:	02ac0000 	adceq	r0, ip, #0
     2bc:	00057d06 	andeq	r7, r5, r6, lsl #26
     2c0:	0602b000 	streq	fp, [r2], -r0
     2c4:	00000a48 	andeq	r0, r0, r8, asr #20
     2c8:	c50602c0 	strgt	r0, [r6, #-704]	; 0x2c0
     2cc:	c4000008 	strgt	r0, [r0], #-8
     2d0:	0a320602 	beq	c81ae0 <_start-0x7f37e520>
     2d4:	02c80000 	sbceq	r0, r8, #0
     2d8:	00026d06 	andeq	r6, r2, r6, lsl #26
     2dc:	0602cc00 	streq	ip, [r2], -r0, lsl #24
     2e0:	00000667 	andeq	r0, r0, r7, ror #12
     2e4:	b10602d0 	ldrdlt	r0, [r6, -r0]
     2e8:	00000009 	andeq	r0, r0, r9
     2ec:	00045806 	andeq	r5, r4, r6, lsl #16
     2f0:	03060400 	movweq	r0, #25600	; 0x6400
     2f4:	08000005 	stmdaeq	r0, {r0, r2}
     2f8:	000b2006 	andeq	r2, fp, r6
     2fc:	d6060c00 	strle	r0, [r6], -r0, lsl #24
     300:	10000009 	andne	r0, r0, r9
     304:	0008f606 	andeq	pc, r8, r6, lsl #12
     308:	09061400 	stmdbeq	r6, {sl, ip}
     30c:	18000008 	stmdane	r0, {r3}
     310:	00096a06 	andeq	r6, r9, r6, lsl #20
     314:	8c061c00 	stchi	12, cr1, [r6], {-0}
     318:	20000008 	andcs	r0, r0, r8
     31c:	00056206 	andeq	r6, r5, r6, lsl #4
     320:	71062400 	tstvc	r6, r0, lsl #8
     324:	28000003 	stmdacs	r0, {r0, r1}
     328:	00099606 	andeq	r9, r9, r6, lsl #12
     32c:	f4062c00 			; <UNDEFINED> instruction: 0xf4062c00
     330:	30000007 	andcc	r0, r0, r7
     334:	00021006 	andeq	r1, r2, r6
     338:	db063400 	blle	18d340 <_start-0x7fe72cc0>
     33c:	38000008 	stmdacc	r0, {r3}
     340:	0001a506 	andeq	sl, r1, r6, lsl #10
     344:	1d063c00 	stcne	12, cr3, [r6, #-0]
     348:	c0000008 	andgt	r0, r0, r8
     34c:	0a770600 	beq	1dc1b54 <_start-0x7e23e4ac>
     350:	00c40000 	sbceq	r0, r4, r0
     354:	00044406 	andeq	r4, r4, r6, lsl #8
     358:	0600c800 	streq	ip, [r0], -r0, lsl #16
     35c:	000001ef 	andeq	r0, r0, pc, ror #3
     360:	c00600cc 	andgt	r0, r6, ip, asr #1
     364:	d000000a 	andle	r0, r0, sl
     368:	064c0600 	strbeq	r0, [ip], -r0, lsl #12
     36c:	00d40000 	sbcseq	r0, r4, r0
     370:	00028606 	andeq	r8, r2, r6, lsl #12
     374:	0600d800 	streq	sp, [r0], -r0, lsl #16
     378:	000006de 	ldrdeq	r0, [r0], -lr
     37c:	300600dc 	ldrdcc	r0, [r6], -ip
     380:	e0000005 	and	r0, r0, r5
     384:	08300600 	ldmdaeq	r0!, {r9, sl}
     388:	00e40000 	rsceq	r0, r4, r0
     38c:	0002f306 	andeq	pc, r2, r6, lsl #6
     390:	0600e800 	streq	lr, [r0], -r0, lsl #16
     394:	00000223 	andeq	r0, r0, r3, lsr #4
     398:	f20600ec 	vhadd.s8	q0, q11, q14
     39c:	f0000006 			; <UNDEFINED> instruction: 0xf0000006
     3a0:	024c0600 	subeq	r0, ip, #0, 12
     3a4:	00f40000 	rscseq	r0, r4, r0
     3a8:	000a8d06 	andeq	r8, sl, r6, lsl #26
     3ac:	0600f800 	streq	pc, [r0], -r0, lsl #16
     3b0:	00000746 	andeq	r0, r0, r6, asr #14
     3b4:	1b0600fc 	blne	1807ac <_start-0x7fe7f854>
     3b8:	80000003 	andhi	r0, r0, r3
     3bc:	02380601 	eorseq	r0, r8, #1048576	; 0x100000
     3c0:	01840000 	orreq	r0, r4, r0
     3c4:	00079806 	andeq	r9, r7, r6, lsl #16
     3c8:	06018800 	streq	r8, [r1], -r0, lsl #16
     3cc:	0000071d 	andeq	r0, r0, sp, lsl r7
     3d0:	0f06018c 	svceq	0x0006018c
     3d4:	90000004 	andls	r0, r0, r4
     3d8:	061b0601 	ldreq	r0, [fp], -r1, lsl #12
     3dc:	01940000 	orrseq	r0, r4, r0
     3e0:	00089f06 	andeq	r9, r8, r6, lsl #30
     3e4:	06019800 	streq	r9, [r1], -r0, lsl #16
     3e8:	000005dc 	ldrdeq	r0, [r0], -ip
     3ec:	5906019c 	stmdbpl	r6, {r2, r3, r4, r7, r8}
     3f0:	a000000b 	andge	r0, r0, fp
     3f4:	09420601 	stmdbeq	r2, {r0, r9, sl}^
     3f8:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
     3fc:	00029c06 	andeq	r9, r2, r6, lsl #24
     400:	0601a800 	streq	sl, [r1], -r0, lsl #16
     404:	000009c3 	andeq	r0, r0, r3, asr #19
     408:	f70601ac 			; <UNDEFINED> instruction: 0xf70601ac
     40c:	b0000003 	andlt	r0, r0, r3
     410:	05c60601 	strbeq	r0, [r6, #1537]	; 0x601
     414:	01b40000 			; <UNDEFINED> instruction: 0x01b40000
     418:	000b4406 	andeq	r4, fp, r6, lsl #8
     41c:	0601b800 	streq	fp, [r1], -r0, lsl #16
     420:	00000aa8 	andeq	r0, r0, r8, lsr #21
     424:	920601bc 	andls	r0, r6, #188, 2	; 0x2f
     428:	c0000005 	andgt	r0, r0, r5
     42c:	0a1b0601 	beq	6c1c38 <_start-0x7f93e3c8>
     430:	01c40000 	biceq	r0, r4, r0
     434:	00062f06 	andeq	r2, r6, r6, lsl #30
     438:	0601c800 	streq	ip, [r1], -r0, lsl #16
     43c:	00000915 	andeq	r0, r0, r5, lsl r9
     440:	700601cc 	andvc	r0, r6, ip, asr #3
     444:	d4000004 	strle	r0, [r0], #-4
     448:	06c20601 	strbeq	r0, [r2], r1, lsl #12
     44c:	01d80000 	bicseq	r0, r8, r0
     450:	01c00200 	biceq	r0, r0, r0, lsl #4
     454:	93030000 	movwls	r0, #12288	; 0x3000
     458:	000000be 	strheq	r0, [r0], -lr
     45c:	00042407 	andeq	r2, r4, r7, lsl #8
     460:	a4030100 	strge	r0, [r3], #-256	; 0x100
     464:	40800000 	addmi	r0, r0, r0
     468:	01000000 	mrseq	r0, (UNDEF: 0)
     46c:	0004199c 	muleq	r4, ip, r9
     470:	17e70800 	strbne	r0, [r7, r0, lsl #16]!
     474:	03010000 	movweq	r0, #4096	; 0x1000
     478:	000000b3 	strheq	r0, [r0], -r3
     47c:	09749102 	ldmdbeq	r4!, {r1, r8, ip, pc}^
     480:	00676572 	rsbeq	r6, r7, r2, ror r5
     484:	03ce0301 	biceq	r0, lr, #67108864	; 0x4000000
     488:	91020000 	mrsls	r0, (UNDEF: 2)
     48c:	02670872 	rsbeq	r0, r7, #7471104	; 0x720000
     490:	03010000 	movweq	r0, #4096	; 0x1000
     494:	00000030 	andeq	r0, r0, r0, lsr r0
     498:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     49c:	0006b80a 	andeq	fp, r6, sl, lsl #16
     4a0:	30090100 	andcc	r0, r9, r0, lsl #2
     4a4:	e4000000 	str	r0, [r0], #-0
     4a8:	38800000 	stmcc	r0, {}	; <UNPREDICTABLE>
     4ac:	01000000 	mrseq	r0, (UNDEF: 0)
     4b0:	00044f9c 	muleq	r4, ip, pc	; <UNPREDICTABLE>
     4b4:	17e70800 	strbne	r0, [r7, r0, lsl #16]!
     4b8:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
     4bc:	000000b3 	strheq	r0, [r0], -r3
     4c0:	09749102 	ldmdbeq	r4!, {r1, r8, ip, pc}^
     4c4:	00676572 	rsbeq	r6, r7, r2, ror r5
     4c8:	03ce0901 	biceq	r0, lr, #16384	; 0x4000
     4cc:	91020000 	mrsls	r0, (UNDEF: 2)
     4d0:	cb0b0072 	blgt	2c06a0 <_start-0x7fd3f960>
     4d4:	01000001 	tsteq	r0, r1
     4d8:	00011c0e 	andeq	r1, r1, lr, lsl #24
     4dc:	0000d480 	andeq	sp, r0, r0, lsl #9
     4e0:	0c9c0100 	ldfeqs	f0, [ip], {0}
     4e4:	0000020b 	andeq	r0, r0, fp, lsl #4
     4e8:	00301101 	eorseq	r1, r0, r1, lsl #2
     4ec:	91020000 	mrsls	r0, (UNDEF: 2)
     4f0:	02000074 	andeq	r0, r0, #116	; 0x74
     4f4:	04000007 	streq	r0, [r0], #-7
     4f8:	00012d00 	andeq	r2, r1, r0, lsl #26
     4fc:	78010400 	stmdavc	r1, {sl}
     500:	01000000 	mrseq	r0, (UNDEF: 0)
     504:	00000c0c 	andeq	r0, r0, ip, lsl #24
     508:	00000009 	andeq	r0, r0, r9
     50c:	800001f0 	strdhi	r0, [r0], -r0	; <UNPREDICTABLE>
     510:	000000ec 	andeq	r0, r0, ip, ror #1
     514:	000000a5 	andeq	r0, r0, r5, lsr #1
     518:	00005002 	andeq	r5, r0, r2
     51c:	30040200 	andcc	r0, r4, r0, lsl #4
     520:	03000000 	movweq	r0, #0
     524:	1ded0704 	stclne	7, cr0, [sp, #16]!
     528:	02030000 	andeq	r0, r3, #0
     52c:	00003d07 	andeq	r3, r0, r7, lsl #26
     530:	08010300 	stmdaeq	r1, {r8, r9}
     534:	0000006a 	andeq	r0, r0, sl, rrx
     538:	69050404 	stmdbvs	r5, {r2, sl}
     53c:	0300746e 	movweq	r7, #1134	; 0x46e
     540:	00590502 	subseq	r0, r9, r2, lsl #10
     544:	01030000 	mrseq	r0, (UNDEF: 3)
     548:	00007308 	andeq	r7, r0, r8, lsl #6
     54c:	03020500 	movweq	r0, #9472	; 0x2500
     550:	00064f09 	andeq	r4, r6, r9, lsl #30
     554:	17dc0600 	ldrbne	r0, [ip, r0, lsl #12]
     558:	06000000 	streq	r0, [r0], -r0
     55c:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
     560:	19200604 	stmdbne	r0!, {r2, r9, sl}
     564:	06100000 	ldreq	r0, [r0], -r0
     568:	00001aca 	andeq	r1, r0, sl, asr #21
     56c:	450600c0 	strmi	r0, [r6, #-192]	; 0xc0
     570:	9000001b 	andls	r0, r0, fp, lsl r0
     574:	11dc0602 	bicsne	r0, ip, r2, lsl #12
     578:	089c0000 	ldmeq	ip, {}	; <UNPREDICTABLE>
     57c:	001b1206 	andseq	r1, fp, r6, lsl #4
     580:	0608a800 	streq	sl, [r8], -r0, lsl #16
     584:	00000ff5 	strdeq	r0, [r0], -r5
     588:	770608ac 	strvc	r0, [r6, -ip, lsr #17]
     58c:	c4000017 	strgt	r0, [r0], #-23
     590:	0da50608 	stceq	6, cr0, [r5, #32]!
     594:	08c80000 	stmiaeq	r8, {}^	; <UNPREDICTABLE>
     598:	00126606 	andseq	r6, r2, r6, lsl #12
     59c:	0608cc00 	streq	ip, [r8], -r0, lsl #24
     5a0:	00001a2c 	andeq	r1, r0, ip, lsr #20
     5a4:	7e0608d8 	mcrvc	8, 0, r0, cr6, cr8, {6}
     5a8:	e8000015 	stmda	r0, {r0, r2, r4}
     5ac:	10ef0608 	rscne	r0, pc, r8, lsl #12
     5b0:	08f00000 	ldmeq	r0!, {}^	; <UNPREDICTABLE>
     5b4:	000fac06 	andeq	sl, pc, r6, lsl #24
     5b8:	060a8c00 	streq	r8, [sl], -r0, lsl #24
     5bc:	000017f3 	strdeq	r1, [r0], -r3
     5c0:	cd060c80 	stcgt	12, cr0, [r6, #-512]	; 0xfffffe00
     5c4:	84000017 	strhi	r0, [r0], #-23
     5c8:	0fc2060c 	svceq	0x00c2060c
     5cc:	0c880000 	stceq	0, cr0, [r8], {0}
     5d0:	00180006 	andseq	r0, r8, r6
     5d4:	060c8c00 	streq	r8, [ip], -r0, lsl #24
     5d8:	000019e8 	andeq	r1, r0, r8, ror #19
     5dc:	9d060c90 	stcls	12, cr0, [r6, #-576]	; 0xfffffdc0
     5e0:	94000012 	strls	r0, [r0], #-18
     5e4:	1979060c 	ldmdbne	r9!, {r2, r3, r9, sl}^
     5e8:	0ca00000 	stceq	0, cr0, [r0]
     5ec:	00181306 	andseq	r1, r8, r6, lsl #6
     5f0:	060ca400 	streq	sl, [ip], -r0, lsl #8
     5f4:	00001986 	andeq	r1, r0, r6, lsl #19
     5f8:	1f060ca8 	svcne	0x00060ca8
     5fc:	ac000018 	stcge	0, cr0, [r0], {24}
     600:	1391060c 	orrsne	r0, r1, #12, 12	; 0xc00000
     604:	0cb00000 	ldceq	0, cr0, [r0]
     608:	001b3706 	andseq	r3, fp, r6, lsl #14
     60c:	060cb400 	streq	fp, [ip], -r0, lsl #8
     610:	00001231 	andeq	r1, r0, r1, lsr r2
     614:	d0060cb8 			; <UNDEFINED> instruction: 0xd0060cb8
     618:	bc000012 	stclt	0, cr0, [r0], {18}
     61c:	167c060c 	ldrbtne	r0, [ip], -ip, lsl #12
     620:	0cc40000 	stcleq	0, cr0, [r4], {0}
     624:	0019b306 	andseq	fp, r9, r6, lsl #6
     628:	060cc800 	streq	ip, [ip], -r0, lsl #16
     62c:	00001756 	andeq	r1, r0, r6, asr r7
     630:	49060cd0 	stmdbmi	r6, {r4, r6, r7, sl, fp}
     634:	e400000c 	str	r0, [r0], #-12
     638:	0e01060c 	cfmadd32eq	mvax0, mvfx0, mvfx1, mvfx12
     63c:	0cf00000 	ldcleq	0, cr0, [r0]
     640:	00149606 	andseq	r9, r4, r6, lsl #12
     644:	060cf400 	streq	pc, [ip], -r0, lsl #8
     648:	0000109b 	muleq	r0, fp, r0
     64c:	b0060d90 	mullt	r6, r0, sp
     650:	94000010 	strls	r0, [r0], #-16
     654:	10c5060d 	sbcne	r0, r5, sp, lsl #12
     658:	0d980000 	ldceq	0, cr0, [r8]
     65c:	0010da06 	andseq	sp, r0, r6, lsl #20
     660:	060d9c00 	streq	r9, [sp], -r0, lsl #24
     664:	00000f36 	andeq	r0, r0, r6, lsr pc
     668:	1c060da0 	stcne	13, cr0, [r6], {160}	; 0xa0
     66c:	a4000013 	strge	r0, [r0], #-19
     670:	137c060d 	cmnne	ip, #13631488	; 0xd00000
     674:	0da80000 	stceq	0, cr0, [r8]
     678:	0011f206 	andseq	pc, r1, r6, lsl #4
     67c:	060ef000 	streq	pc, [lr], -r0
     680:	000013f2 	strdeq	r1, [r0], -r2
     684:	3e060ef4 	mcrcc	14, 0, r0, cr6, cr4, {7}
     688:	f8000018 			; <UNDEFINED> instruction: 0xf8000018
     68c:	15d8060e 	ldrbne	r0, [r8, #1550]	; 0x60e
     690:	0efc0000 	cdpeq	0, 15, cr0, cr12, cr0, {0}
     694:	00125206 	andseq	r5, r2, r6, lsl #4
     698:	060fb800 	streq	fp, [pc], -r0, lsl #16
     69c:	0000146e 	andeq	r1, r0, lr, ror #8
     6a0:	65060fbc 	strvs	r0, [r6, #-4028]	; 0xfbc
     6a4:	d000000e 	andle	r0, r0, lr
     6a8:	1993060f 	ldmibne	r3, {r0, r1, r2, r3, r9, sl}
     6ac:	0ff40000 	svceq	0x00f40000
     6b0:	000c6806 	andeq	r6, ip, r6, lsl #16
     6b4:	060ffc00 	streq	pc, [pc], -r0, lsl #24
     6b8:	00000cbe 			; <UNDEFINED> instruction: 0x00000cbe
     6bc:	cf061080 	svcgt	0x00061080
     6c0:	8400000c 	strhi	r0, [r0], #-12
     6c4:	0ce00610 	stcleq	6, cr0, [r0], #64	; 0x40
     6c8:	10880000 	addne	r0, r8, r0
     6cc:	000cf106 	andeq	pc, ip, r6, lsl #2
     6d0:	06108c00 	ldreq	r8, [r0], -r0, lsl #24
     6d4:	00000d02 	andeq	r0, r0, r2, lsl #26
     6d8:	13061090 	movwne	r1, #24720	; 0x6090
     6dc:	9400000d 	strls	r0, [r0], #-13
     6e0:	0d240610 	stceq	6, cr0, [r4, #-64]!	; 0xffffffc0
     6e4:	10980000 	addsne	r0, r8, r0
     6e8:	000d3506 	andeq	r3, sp, r6, lsl #10
     6ec:	06109c00 	ldreq	r9, [r0], -r0, lsl #24
     6f0:	00000d46 	andeq	r0, r0, r6, asr #26
     6f4:	570610a0 	strpl	r1, [r6, -r0, lsr #1]
     6f8:	a400000d 	strge	r0, [r0], #-13
     6fc:	1aa60610 	bne	fe981f44 <value+0x7e980a1a>
     700:	10a80000 	adcne	r0, r8, r0
     704:	001ab806 	andseq	fp, sl, r6, lsl #16
     708:	0610ac00 	ldreq	sl, [r0], -r0, lsl #24
     70c:	00001a69 	andeq	r1, r0, r9, ror #20
     710:	dc0610b0 	stcle	0, cr1, [r6], {176}	; 0xb0
     714:	b400001a 	strlt	r0, [r0], #-26
     718:	1aee0610 	bne	ffb81f60 <value+0x7fb80a36>
     71c:	10b80000 	adcsne	r0, r8, r0
     720:	001b0006 	andseq	r0, fp, r6
     724:	0610bc00 	ldreq	fp, [r0], -r0, lsl #24
     728:	00000b6c 	andeq	r0, r0, ip, ror #22
     72c:	7c0610c0 	stcvc	0, cr1, [r6], {192}	; 0xc0
     730:	c400000b 	strgt	r0, [r0], #-11
     734:	0b8c0610 	bleq	fe301f7c <value+0x7e300a52>
     738:	10c80000 	sbcne	r0, r8, r0
     73c:	000b9c06 	andeq	r9, fp, r6, lsl #24
     740:	0610cc00 	ldreq	ip, [r0], -r0, lsl #24
     744:	00000bac 	andeq	r0, r0, ip, lsr #23
     748:	bc0610d0 	stclt	0, cr1, [r6], {208}	; 0xd0
     74c:	d400000b 	strle	r0, [r0], #-11
     750:	0bcc0610 	bleq	ff301f98 <value+0x7f300a6e>
     754:	10d80000 	sbcsne	r0, r8, r0
     758:	000bdc06 	andeq	sp, fp, r6, lsl #24
     75c:	0610dc00 	ldreq	sp, [r0], -r0, lsl #24
     760:	00000bec 	andeq	r0, r0, ip, ror #23
     764:	fc0610e0 	stc2	0, cr1, [r6], {224}	; 0xe0
     768:	e400000b 	str	r0, [r0], #-11
     76c:	11b20610 			; <UNDEFINED> instruction: 0x11b20610
     770:	10e80000 	rscne	r0, r8, r0
     774:	0015c706 	andseq	ip, r5, r6, lsl #14
     778:	0610ec00 	ldreq	lr, [r0], -r0, lsl #24
     77c:	00000cab 	andeq	r0, r0, fp, lsr #25
     780:	010610f0 	strdeq	r1, [r6, -r0]
     784:	f4000011 	vst4.8	{d0-d3}, [r0 :64], r1
     788:	16fe0610 	usatne	r0, #30, r0, lsl #12
     78c:	10f80000 	rscsne	r0, r8, r0
     790:	0011a006 	andseq	sl, r1, r6
     794:	0610fc00 	ldreq	pc, [r0], -r0, lsl #24
     798:	00000c75 	andeq	r0, r0, r5, ror ip
     79c:	87061180 	strhi	r1, [r6, -r0, lsl #3]
     7a0:	8400000c 	strhi	r0, [r0], #-12
     7a4:	0c990611 	ldceq	6, cr0, [r9], {17}
     7a8:	11880000 	orrne	r0, r8, r0
     7ac:	00166b06 	andseq	r6, r6, r6, lsl #22
     7b0:	06118c00 	ldreq	r8, [r1], -r0, lsl #24
     7b4:	00000f81 	andeq	r0, r0, r1, lsl #31
     7b8:	a1061190 			; <UNDEFINED> instruction: 0xa1061190
     7bc:	94000016 	strls	r0, [r0], #-22
     7c0:	118f0611 	orrne	r0, pc, r1, lsl r6	; <UNPREDICTABLE>
     7c4:	11980000 	orrsne	r0, r8, r0
     7c8:	00134406 	andseq	r4, r3, r6, lsl #8
     7cc:	06119c00 	ldreq	r9, [r1], -r0, lsl #24
     7d0:	00000ea6 	andeq	r0, r0, r6, lsr #29
     7d4:	b80611a0 	stmdalt	r6, {r5, r7, r8, ip}
     7d8:	a400000e 	strge	r0, [r0], #-14
     7dc:	0eca0611 	mcreq	6, 6, r0, cr10, cr1, {0}
     7e0:	11a80000 			; <UNDEFINED> instruction: 0x11a80000
     7e4:	000edc06 	andeq	sp, lr, r6, lsl #24
     7e8:	0611ac00 	ldreq	sl, [r1], -r0, lsl #24
     7ec:	00000eee 	andeq	r0, r0, lr, ror #29
     7f0:	000611b0 			; <UNDEFINED> instruction: 0x000611b0
     7f4:	b400000f 	strlt	r0, [r0], #-15
     7f8:	0f120611 	svceq	0x00120611
     7fc:	11b80000 			; <UNDEFINED> instruction: 0x11b80000
     800:	000f2406 	andeq	r2, pc, r6, lsl #8
     804:	0611bc00 	ldreq	fp, [r1], -r0, lsl #24
     808:	00001935 	andeq	r1, r0, r5, lsr r9
     80c:	430611c0 	movwmi	r1, #25024	; 0x61c0
     810:	c400000f 	strgt	r0, [r0], #-15
     814:	0db50611 	ldceq	6, cr0, [r5, #68]!	; 0x44
     818:	11c80000 	bicne	r0, r8, r0
     81c:	000dc806 	andeq	ip, sp, r6, lsl #16
     820:	0611cc00 	ldreq	ip, [r1], -r0, lsl #24
     824:	00000ddb 	ldrdeq	r0, [r0], -fp
     828:	ee0611d0 	fltdm	f6, r1
     82c:	d400000d 	strle	r0, [r0], #-13
     830:	182b0611 	stmdane	fp!, {r0, r4, r9, sl}
     834:	11d80000 	bicsne	r0, r8, r0
     838:	000e0f06 	andeq	r0, lr, r6, lsl #30
     83c:	0611dc00 	ldreq	sp, [r1], -r0, lsl #24
     840:	00001b62 	andeq	r1, r0, r2, ror #22
     844:	6c0611e0 	stfvss	f1, [r6], {224}	; 0xe0
     848:	e4000015 	str	r0, [r0], #-21
     84c:	10350611 	eorsne	r0, r5, r1, lsl r6
     850:	11e80000 	mvnne	r0, r0
     854:	0013c506 	andseq	ip, r3, r6, lsl #10
     858:	0611ec00 	ldreq	lr, [r1], -r0, lsl #24
     85c:	00001529 	andeq	r1, r0, r9, lsr #10
     860:	170611f0 			; <UNDEFINED> instruction: 0x170611f0
     864:	f4000015 	vst4.8	{d0-d3}, [r0 :64], r5
     868:	10890611 	addne	r0, r9, r1, lsl r6
     86c:	11f80000 	mvnsne	r0, r0
     870:	00107706 	andseq	r7, r0, r6, lsl #14
     874:	0611fc00 	ldreq	pc, [r1], -r0, lsl #24
     878:	0000114c 	andeq	r1, r0, ip, asr #2
     87c:	a9061280 	stmdbge	r6, {r7, r9, ip}
     880:	84000012 	strhi	r0, [r0], #-18
     884:	158b0612 	strne	r0, [fp, #1554]	; 0x612
     888:	12880000 	addne	r0, r8, #0
     88c:	000c1d06 	andeq	r1, ip, r6, lsl #26
     890:	06128c00 	ldreq	r8, [r2], -r0, lsl #24
     894:	00001504 	andeq	r1, r0, r4, lsl #10
     898:	47061290 			; <UNDEFINED> instruction: 0x47061290
     89c:	94000019 	strls	r0, [r0], #-25
     8a0:	12f10612 	rscsne	r0, r1, #18874368	; 0x1200000
     8a4:	12980000 	addsne	r0, r8, #0
     8a8:	0016ec06 	andseq	lr, r6, r6, lsl #24
     8ac:	06129c00 	ldreq	r9, [r2], -r0, lsl #24
     8b0:	000016da 	ldrdeq	r1, [r0], -sl
     8b4:	c80612a0 	stmdagt	r6, {r5, r7, r9, ip}
     8b8:	a4000016 	strge	r0, [r0], #-22
     8bc:	16b60612 	ssatne	r0, #23, r2, lsl #12
     8c0:	12a80000 	adcne	r0, r8, #0
     8c4:	000fe106 	andeq	lr, pc, r6, lsl #2
     8c8:	0612ac00 	ldreq	sl, [r2], -r0, lsl #24
     8cc:	00001482 	andeq	r1, r0, r2, lsl #9
     8d0:	f30612b0 	vqsub.u8	d1, d22, d16
     8d4:	b4000019 	strlt	r0, [r0], #-25
     8d8:	13320612 	teqne	r2, #18874368	; 0x1200000
     8dc:	12b80000 	adcsne	r0, r8, #0
     8e0:	0019d606 	andseq	sp, r9, r6, lsl #12
     8e4:	0612bc00 	ldreq	fp, [r2], -r0, lsl #24
     8e8:	000019c4 	andeq	r1, r0, r4, asr #19
     8ec:	7b0612c0 	blvc	1853f4 <_start-0x7fe7ac0c>
     8f0:	c400001a 	strgt	r0, [r0], #-26
     8f4:	14050612 	strne	r0, [r5], #-1554	; 0x612
     8f8:	12c80000 	sbcne	r0, r8, #0
     8fc:	000fd506 	andeq	sp, pc, r6, lsl #10
     900:	0612cc00 	ldreq	ip, [r2], -r0, lsl #24
     904:	0000172f 	andeq	r1, r0, pc, lsr #14
     908:	d00612d0 	ldrdle	r1, [r6], -r0
     90c:	d4000018 	strle	r0, [r0], #-24
     910:	1b740612 	blne	1d02160 <_start-0x7e2fdea0>
     914:	12d80000 	sbcsne	r0, r8, #0
     918:	00135a06 	andseq	r5, r3, r6, lsl #20
     91c:	0612dc00 	ldreq	sp, [r2], -r0, lsl #24
     920:	0000136b 	andeq	r1, r0, fp, ror #6
     924:	810612e0 	smlatthi	r6, r0, r2, r1
     928:	e400000d 	str	r0, [r0], #-13
     92c:	19660612 	stmdbne	r6!, {r1, r4, r9, sl}^
     930:	12e80000 	rscne	r0, r8, #0
     934:	000f5506 	andeq	r5, pc, r6, lsl #10
     938:	0612ec00 	ldreq	lr, [r2], -r0, lsl #24
     93c:	000014f2 	strdeq	r1, [r0], -r2
     940:	3e0612f0 	mcrcc	2, 0, r1, cr6, cr0, {7}
     944:	f4000016 	vst4.8	{d0-d3}, [r0 :64], r6
     948:	1b240612 	blne	902198 <_start-0x7f6fde68>
     94c:	12f80000 	rscsne	r0, r8, #0
     950:	00112806 	andseq	r2, r1, r6, lsl #16
     954:	0612fc00 	ldreq	pc, [r2], -r0, lsl #24
     958:	00001602 	andeq	r1, r0, r2, lsl #12
     95c:	05061380 	streq	r1, [r6, #-896]	; 0x380
     960:	84000012 	strhi	r0, [r0], #-18
     964:	1b900613 	blne	fe4021b8 <value+0x7e400c8e>
     968:	13880000 	orrne	r0, r8, #0
     96c:	0019a206 	andseq	sl, r9, r6, lsl #4
     970:	06138c00 	ldreq	r8, [r3], -r0, lsl #24
     974:	00001a91 	muleq	r0, r1, sl
     978:	8a061390 	bhi	1857c0 <_start-0x7fe7a840>
     97c:	94000012 	strls	r0, [r0], #-18
     980:	18f80613 	ldmne	r8!, {r0, r1, r4, r9, sl}^
     984:	13980000 	orrsne	r0, r8, #0
     988:	00155606 	andseq	r5, r5, r6, lsl #12
     98c:	06139c00 	ldreq	r9, [r3], -r0, lsl #24
     990:	00001a54 	andeq	r1, r0, r4, asr sl
     994:	3f0613a0 	svccc	0x000613a0
     998:	a4000012 	strge	r0, [r0], #-18
     99c:	190c0613 	stmdbne	ip, {r0, r1, r4, r9, sl}
     9a0:	13a80000 			; <UNDEFINED> instruction: 0x13a80000
     9a4:	00159c06 	andseq	r9, r5, r6, lsl #24
     9a8:	0613ac00 	ldreq	sl, [r3], -r0, lsl #24
     9ac:	0000186a 	andeq	r1, r0, sl, ror #16
     9b0:	830613b0 	movwhi	r1, #25520	; 0x63b0
     9b4:	b4000018 	strlt	r0, [r0], #-24
     9b8:	113b0613 	teqne	fp, r3, lsl r6
     9bc:	13b80000 			; <UNDEFINED> instruction: 0x13b80000
     9c0:	000e2206 	andeq	r2, lr, r6, lsl #4
     9c4:	0613c000 	ldreq	ip, [r3], -r0
     9c8:	0000115d 	andeq	r1, r0, sp, asr r1
     9cc:	050613d0 	streq	r1, [r6, #-976]	; 0x3d0
     9d0:	d400001a 	strle	r0, [r0], #-26
     9d4:	1b840613 	blne	fe102228 <value+0x7e100cfe>
     9d8:	13d80000 	bicsne	r0, r8, #0
     9dc:	00195a06 	andseq	r5, r9, r6, lsl #20
     9e0:	0613dc00 	ldreq	sp, [r3], -r0, lsl #24
     9e4:	0000142a 	andeq	r1, r0, sl, lsr #8
     9e8:	060613e0 	streq	r1, [r6], -r0, ror #7
     9ec:	e4000010 	str	r0, [r0], #-16
     9f0:	10130613 	andsne	r0, r3, r3, lsl r6
     9f4:	13e80000 	mvnne	r0, #0
     9f8:	0012ba06 	andseq	fp, r2, r6, lsl #20
     9fc:	0613f800 	ldreq	pc, [r3], -r0, lsl #16
     a00:	00001112 	andeq	r1, r0, r2, lsl r1
     a04:	de0613fc 	mcrle	3, 0, r1, cr6, cr12, {7}
     a08:	80000012 	andhi	r0, r0, r2, lsl r0
     a0c:	10460614 	subne	r0, r6, r4, lsl r6
     a10:	14840000 	strne	r0, [r4], #0
     a14:	00178e06 	andseq	r8, r7, r6, lsl #28
     a18:	06149c00 	ldreq	r9, [r4], -r0, lsl #24
     a1c:	0000168c 	andeq	r1, r0, ip, lsl #13
     a20:	da0614b4 	ble	185cf8 <_start-0x7fe7a308>
     a24:	80000014 	andhi	r0, r0, r4, lsl r0
     a28:	1276061c 	rsbsne	r0, r6, #28, 12	; 0x1c00000
     a2c:	1c840000 	stcne	0, cr0, [r4], {0}
     a30:	001a4306 	andseq	r4, sl, r6, lsl #6
     a34:	061c8c00 	ldreq	r8, [ip], -r0, lsl #24
     a38:	00001710 	andeq	r1, r0, r0, lsl r7
     a3c:	68061c94 	stmdavs	r6, {r2, r4, r7, sl, fp, ip}
     a40:	9000000d 	andls	r0, r0, sp
     a44:	189c061f 	ldmne	ip, {r0, r1, r2, r3, r4, r9, sl}
     a48:	1f940000 	svcne	0x00940000
     a4c:	00121706 	andseq	r1, r2, r6, lsl #14
     a50:	061f9800 	ldreq	r9, [pc], -r0, lsl #16
     a54:	000014bf 			; <UNDEFINED> instruction: 0x000014bf
     a58:	4a061f9c 	bmi	1888d0 <_start-0x7fe77730>
     a5c:	a000000e 	andge	r0, r0, lr
     a60:	0c2e061f 	stceq	6, cr0, [lr], #-124	; 0xffffff84
     a64:	1fa40000 	svcne	0x00a40000
     a68:	00153b06 	andseq	r3, r5, r6, lsl #22
     a6c:	061fa800 	ldreq	sl, [pc], -r0, lsl #16
     a70:	0000105c 	andeq	r1, r0, ip, asr r0
     a74:	a4061fac 	strge	r1, [r6], #-4012	; 0xfac
     a78:	b0000014 	andlt	r0, r0, r4, lsl r0
     a7c:	0e2f061f 	mcreq	6, 1, r0, cr15, cr15, {0}
     a80:	1fb40000 	svcne	0x00b40000
     a84:	00145306 	andseq	r5, r4, r6, lsl #6
     a88:	061fb800 	ldreq	fp, [pc], -r0, lsl #16
     a8c:	00001ba1 	andeq	r1, r0, r1, lsr #23
     a90:	b5061fbc 	strlt	r1, [r6, #-4028]	; 0xfbc
     a94:	c0000018 	andgt	r0, r0, r8, lsl r0
     a98:	1438061f 	ldrtne	r0, [r8], #-1567	; 0x61f
     a9c:	1fc40000 	svcne	0x00c40000
     aa0:	00165006 	andseq	r5, r6, r6
     aa4:	061fc800 	ldreq	ip, [pc], -r0, lsl #16
     aa8:	00001a11 	andeq	r1, r0, r1, lsl sl
     aac:	71061fcc 	smlabtvc	r6, ip, pc, r1	; <UNPREDICTABLE>
     ab0:	d000000e 	andle	r0, r0, lr
     ab4:	13dc061f 	bicsne	r0, ip, #32505856	; 0x1f00000
     ab8:	1fd40000 	svcne	0x00d40000
     abc:	00117a06 	andseq	r7, r1, r6, lsl #20
     ac0:	061fd800 	ldreq	sp, [pc], -r0, lsl #16
     ac4:	00000e88 	andeq	r0, r0, r8, lsl #29
     ac8:	51062080 	smlabbpl	r6, r0, r0, r2
     acc:	98000018 	stmdals	r0, {r3, r4}
     ad0:	15b20626 	ldrne	r0, [r2, #1574]!	; 0x626
     ad4:	269c0000 	ldrcs	r0, [ip], r0
     ad8:	00172206 	andseq	r2, r7, r6, lsl #4
     adc:	0626a000 	strteq	sl, [r6], -r0
     ae0:	0000139f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
     ae4:	410626a4 	smlatbmi	r6, r4, r6, r2
     ae8:	a8000017 	stmdage	r0, {r0, r1, r2, r4}
     aec:	15ed0626 	strbne	r0, [sp, #1574]!	; 0x626
     af0:	26ac0000 	strtcs	r0, [ip], r0
     af4:	00176206 	andseq	r6, r7, r6, lsl #4
     af8:	0626b000 	strteq	fp, [r6], -r0
     afc:	00001614 	andeq	r1, r0, r4, lsl r6
     b00:	290626b4 	stmdbcs	r6, {r2, r4, r5, r7, r9, sl, sp}
     b04:	b8000016 	stmdalt	r0, {r1, r2, r4}
     b08:	17a30626 	strne	r0, [r3, r6, lsr #12]!
     b0c:	26bc0000 	ldrtcs	r0, [ip], r0
     b10:	0017b806 	andseq	fp, r7, r6, lsl #16
     b14:	0626c000 	strteq	ip, [r6], -r0
     b18:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
     b1c:	e00626c4 	and	r2, r6, r4, asr #13
     b20:	84000018 	strhi	r0, [r0], #-24
     b24:	14120628 	ldrne	r0, [r2], #-1576	; 0x628
     b28:	28880000 	stmcs	r8, {}	; <UNPREDICTABLE>
     b2c:	00130406 	andseq	r0, r3, r6, lsl #8
     b30:	06288c00 	strteq	r8, [r8], -r0, lsl #24
     b34:	000011c3 	andeq	r1, r0, r3, asr #3
     b38:	680628c0 	stmdavs	r6, {r6, r7, fp, sp}
     b3c:	c400000f 	strgt	r0, [r0], #-15
     b40:	20020028 	andcs	r0, r2, r8, lsr #32
     b44:	03000010 	movweq	r0, #16
     b48:	00005ae3 	andeq	r5, r0, r3, ror #21
     b4c:	0c570700 	mrrceq	7, 0, r0, r7, cr0
     b50:	03010000 	movweq	r0, #4096	; 0x1000
     b54:	800001f0 	strdhi	r0, [r0], -r0	; <UNPREDICTABLE>
     b58:	0000003c 	andeq	r0, r0, ip, lsr r0
     b5c:	068c9c01 	streq	r9, [ip], r1, lsl #24
     b60:	e7080000 	str	r0, [r8, -r0]
     b64:	01000017 	tsteq	r0, r7, lsl r0
     b68:	00064f03 	andeq	r4, r6, r3, lsl #30
     b6c:	76910200 	ldrvc	r0, [r1], r0, lsl #4
     b70:	00026708 	andeq	r6, r2, r8, lsl #14
     b74:	30030100 	andcc	r0, r3, r0, lsl #2
     b78:	02000000 	andeq	r0, r0, #0
     b7c:	09007091 	stmdbeq	r0, {r0, r4, r7, ip, sp, lr}
     b80:	00001169 	andeq	r1, r0, r9, ror #2
     b84:	00300901 	eorseq	r0, r0, r1, lsl #18
     b88:	022c0000 	eoreq	r0, ip, #0
     b8c:	00348000 	eorseq	r8, r4, r0
     b90:	9c010000 	stcls	0, cr0, [r1], {-0}
     b94:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
     b98:	0017e708 	andseq	lr, r7, r8, lsl #14
     b9c:	4f090100 	svcmi	0x00090100
     ba0:	02000006 	andeq	r0, r0, #6
     ba4:	0a007691 	beq	1e5f0 <_start-0x7ffe1a10>
     ba8:	00000e9a 	muleq	r0, sl, lr
     bac:	02600e01 	rsbeq	r0, r0, #1, 28
     bb0:	00588000 	subseq	r8, r8, r0
     bb4:	9c010000 	stcls	0, cr0, [r1], {-0}
     bb8:	000006f4 	strdeq	r0, [r0], -r4
     bbc:	0017e708 	andseq	lr, r7, r8, lsl #14
     bc0:	4f0e0100 	svcmi	0x000e0100
     bc4:	02000006 	andeq	r0, r0, #6
     bc8:	ee086e91 	mcr	14, 0, r6, cr8, cr1, {4}
     bcc:	01000017 	tsteq	r0, r7, lsl r0
     bd0:	0000300e 	andeq	r3, r0, lr
     bd4:	68910200 	ldmvs	r1, {r9}
     bd8:	00020b0b 	andeq	r0, r2, fp, lsl #22
     bdc:	30100100 	andscc	r0, r0, r0, lsl #2
     be0:	02000000 	andeq	r0, r0, #0
     be4:	0c007491 	cfstrseq	mvf7, [r0], {145}	; 0x91
     be8:	00000d9b 	muleq	r0, fp, sp
     bec:	02b81d01 	adcseq	r1, r8, #1, 26	; 0x40
     bf0:	00248000 	eoreq	r8, r4, r0
     bf4:	9c010000 	stcls	0, cr0, [r1], {-0}
     bf8:	0000e100 	andeq	lr, r0, r0, lsl #2
     bfc:	fe000400 	cdp2	4, 0, cr0, cr0, cr0, {0}
     c00:	04000001 	streq	r0, [r0], #-1
     c04:	00007801 	andeq	r7, r0, r1, lsl #16
     c08:	1bde0100 	blne	ff781010 <value+0x7f77fae6>
     c0c:	00090000 	andeq	r0, r9, r0
     c10:	02dc0000 	sbcseq	r0, ip, #0
     c14:	00e48000 	rsceq	r8, r4, r0
     c18:	01110000 	tsteq	r1, r0
     c1c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     c20:	00460101 	subeq	r0, r6, r1, lsl #2
     c24:	bc030000 	stclt	0, cr0, [r3], {-0}
     c28:	0100001b 	tsteq	r0, fp, lsl r0
     c2c:	00004601 	andeq	r4, r0, r1, lsl #12
     c30:	72040000 	andvc	r0, r4, #0
     c34:	01006d65 	tsteq	r0, r5, ror #26
     c38:	00004601 	andeq	r4, r0, r1, lsl #12
     c3c:	05000400 	streq	r0, [r0, #-1024]	; 0x400
     c40:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     c44:	e4060074 	str	r0, [r6], #-116	; 0x74
     c48:	0100001b 	tsteq	r0, fp, lsl r0
     c4c:	00002501 	andeq	r2, r0, r1, lsl #10
     c50:	1bc10700 	blne	ff042858 <value+0x7f04132e>
     c54:	03010000 	movweq	r0, #4096	; 0x1000
     c58:	0000004d 	andeq	r0, r0, sp, asr #32
     c5c:	800002dc 	ldrdhi	r0, [r0], -ip
     c60:	00000084 	andeq	r0, r0, r4, lsl #1
     c64:	00a69c01 	adceq	r9, r6, r1, lsl #24
     c68:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
     c6c:	01006d75 	tsteq	r0, r5, ror sp
     c70:	00004603 	andeq	r4, r0, r3, lsl #12
     c74:	60910200 	addsvs	r0, r1, r0, lsl #4
     c78:	001bf009 	andseq	pc, fp, r9
     c7c:	46030100 	strmi	r0, [r3], -r0, lsl #2
     c80:	02000000 	andeq	r0, r0, #0
     c84:	720a5c91 	andvc	r5, sl, #37120	; 0x9100
     c88:	4d040100 	stfmis	f0, [r4, #-0]
     c8c:	02000000 	andeq	r0, r0, #0
     c90:	710a6c91 			; <UNDEFINED> instruction: 0x710a6c91
     c94:	46050100 	strmi	r0, [r5], -r0, lsl #2
     c98:	02000000 	andeq	r0, r0, #0
     c9c:	0b007491 	bleq	1dee8 <_start-0x7ffe2118>
     ca0:	00001bd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
     ca4:	00461201 	subeq	r1, r6, r1, lsl #4
     ca8:	03600000 	cmneq	r0, #0
     cac:	00608000 	rsbeq	r8, r0, r0
     cb0:	9c010000 	stcls	0, cr0, [r1], {-0}
     cb4:	6d756e08 	ldclvs	14, cr6, [r5, #-32]!	; 0xffffffe0
     cb8:	46120100 	ldrmi	r0, [r2], -r0, lsl #2
     cbc:	02000000 	andeq	r0, r0, #0
     cc0:	f0096c91 			; <UNDEFINED> instruction: 0xf0096c91
     cc4:	0100001b 	tsteq	r0, fp, lsl r0
     cc8:	00004612 	andeq	r4, r0, r2, lsl r6
     ccc:	68910200 	ldmvs	r1, {r9}
     cd0:	0100710a 	tsteq	r0, sl, lsl #2
     cd4:	00004613 	andeq	r4, r0, r3, lsl r6
     cd8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     cdc:	01320000 	teqeq	r2, r0
     ce0:	00040000 	andeq	r0, r4, r0
     ce4:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
     ce8:	00780104 	rsbseq	r0, r8, r4, lsl #2
     cec:	fc010000 	stc2	0, cr0, [r1], {-0}
     cf0:	0900001b 	stmdbeq	r0, {r0, r1, r3, r4}
     cf4:	c0000000 	andgt	r0, r0, r0
     cf8:	fc800003 	stc2	0, cr0, [r0], {3}
     cfc:	55000000 	strpl	r0, [r0, #-0]
     d00:	02000001 	andeq	r0, r0, #1
     d04:	1ded0704 	stclne	7, cr0, [sp, #16]!
     d08:	02020000 	andeq	r0, r2, #0
     d0c:	00003d07 	andeq	r3, r0, r7, lsl #26
     d10:	08010200 	stmdaeq	r1, {r9}
     d14:	0000006a 	andeq	r0, r0, sl, rrx
     d18:	69050403 	stmdbvs	r5, {r0, r1, sl}
     d1c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     d20:	00590502 	subseq	r0, r9, r2, lsl #10
     d24:	01020000 	mrseq	r0, (UNDEF: 2)
     d28:	00007308 	andeq	r7, r0, r8, lsl #6
     d2c:	02010400 	andeq	r0, r1, #0, 8
     d30:	0000640a 	andeq	r6, r0, sl, lsl #8
     d34:	1c2b0500 	cfstr32ne	mvfx0, [fp], #-0
     d38:	05000000 	streq	r0, [r0, #-0]
     d3c:	00001c40 	andeq	r1, r0, r0, asr #24
     d40:	01040001 	tsteq	r4, r1
     d44:	007f1302 	rsbseq	r1, pc, r2, lsl #6
     d48:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     d4c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d50:	001c1f05 	andseq	r1, ip, r5, lsl #30
     d54:	53050100 	movwpl	r0, #20736	; 0x5100
     d58:	0200001c 	andeq	r0, r0, #28
     d5c:	02010400 	andeq	r0, r1, #0, 8
     d60:	00009a20 	andeq	r9, r0, r0, lsr #20
     d64:	1c340500 	cfldr32ne	mvfx0, [r4], #-0
     d68:	05000000 	streq	r0, [r0, #-0]
     d6c:	00001c03 	andeq	r1, r0, r3, lsl #24
     d70:	1c3a0501 	cfldr32ne	mvfx0, [sl], #-4
     d74:	00020000 	andeq	r0, r2, r0
     d78:	001c4806 	andseq	r4, ip, r6, lsl #16
     d7c:	a5150300 	ldrge	r0, [r5, #-768]	; 0x300
     d80:	07000000 	streq	r0, [r0, -r0]
     d84:	0000ab04 	andeq	sl, r0, r4, lsl #22
     d88:	00b60800 	adcseq	r0, r6, r0, lsl #16
     d8c:	48090000 	stmdami	r9, {}	; <UNPREDICTABLE>
     d90:	00000000 	andeq	r0, r0, r0
     d94:	001c150a 	andseq	r1, ip, sl, lsl #10
     d98:	c00a0100 	andgt	r0, sl, r0, lsl #2
     d9c:	44800003 	strmi	r0, [r0], #3
     da0:	01000000 	mrseq	r0, (UNDEF: 0)
     da4:	0000f59c 	muleq	r0, ip, r5
     da8:	6d660b00 	vstmdbvs	r6!, {d16-d15}
     dac:	0a010074 	beq	40f84 <_start-0x7ffbf07c>
     db0:	000000f5 	strdeq	r0, [r0], -r5
     db4:	0c709102 	ldfeqp	f1, [r0], #-8
     db8:	006e660d 	rsbeq	r6, lr, sp, lsl #12
     dbc:	009a0c01 	addseq	r0, sl, r1, lsl #24
     dc0:	91020000 	mrsls	r0, (UNDEF: 2)
     dc4:	70610d64 	rsbvc	r0, r1, r4, ror #26
     dc8:	000d0100 	andeq	r0, sp, r0, lsl #2
     dcc:	02000001 	andeq	r0, r0, #1
     dd0:	07006091 			; <UNDEFINED> instruction: 0x07006091
     dd4:	0000fb04 	andeq	pc, r0, r4, lsl #22
     dd8:	00480e00 	subeq	r0, r8, r0, lsl #28
     ddc:	0b0f0000 	bleq	3c0de4 <_start-0x7fc3f21c>
     de0:	0400001c 	streq	r0, [r0], #-28
     de4:	01170004 	tsteq	r7, r4
     de8:	6a100000 	bvs	400df0 <_start-0x7fbff210>
     dec:	1700001c 	smladne	r0, ip, r0, r0
     df0:	00000001 	andeq	r0, r0, r1
     df4:	12041100 	andne	r1, r4, #0, 2
     df8:	00001bf6 	strdeq	r1, [r0], -r6
     dfc:	04041301 	streq	r1, [r4], #-769	; 0x301
     e00:	00b88000 	adcseq	r8, r8, r0
     e04:	9c010000 	stcls	0, cr0, [r1], {-0}
     e08:	00026713 	andeq	r6, r2, r3, lsl r7
     e0c:	2c080100 	stfcss	f0, [r8], {-0}
     e10:	00000000 	andeq	r0, r0, r0
     e14:	000006e6 	andeq	r0, r0, r6, ror #13
     e18:	03ae0004 			; <UNDEFINED> instruction: 0x03ae0004
     e1c:	01040000 	mrseq	r0, (UNDEF: 4)
     e20:	00000078 	andeq	r0, r0, r8, ror r0
     e24:	001c9e01 	andseq	r9, ip, r1, lsl #28
     e28:	00000900 	andeq	r0, r0, r0, lsl #18
     e2c:	0004c000 	andeq	ip, r4, r0
     e30:	00041c80 	andeq	r1, r4, r0, lsl #25
     e34:	00020200 	andeq	r0, r2, r0, lsl #4
     e38:	00500200 	subseq	r0, r0, r0, lsl #4
     e3c:	04020000 	streq	r0, [r2], #-0
     e40:	00000030 	andeq	r0, r0, r0, lsr r0
     e44:	ed070403 	cfstrs	mvf0, [r7, #-12]
     e48:	0300001d 	movweq	r0, #29
     e4c:	003d0702 	eorseq	r0, sp, r2, lsl #14
     e50:	11020000 	mrsne	r0, (UNDEF: 2)
     e54:	0200001d 	andeq	r0, r0, #29
     e58:	00004906 	andeq	r4, r0, r6, lsl #18
     e5c:	08010300 	stmdaeq	r1, {r8, r9}
     e60:	0000006a 	andeq	r0, r0, sl, rrx
     e64:	69050404 	stmdbvs	r5, {r2, sl}
     e68:	0300746e 	movweq	r7, #1134	; 0x46e
     e6c:	00590502 	subseq	r0, r9, r2, lsl #10
     e70:	01030000 	mrseq	r0, (UNDEF: 3)
     e74:	00007308 	andeq	r7, r0, r8, lsl #6
     e78:	03010500 	movweq	r0, #5376	; 0x1500
     e7c:	00016712 	andeq	r6, r1, r2, lsl r7
     e80:	48520600 	ldmdami	r2, {r9, sl}^
     e84:	06000052 			; <UNDEFINED> instruction: 0x06000052
     e88:	00524854 	subseq	r4, r2, r4, asr r8
     e8c:	45490600 	strbmi	r0, [r9, #-1536]	; 0x600
     e90:	06040052 			; <UNDEFINED> instruction: 0x06040052
     e94:	00524949 	subseq	r4, r2, r9, asr #18
     e98:	43460608 	movtmi	r0, #26120	; 0x6608
     e9c:	06080052 			; <UNDEFINED> instruction: 0x06080052
     ea0:	0052434c 	subseq	r4, r2, ip, asr #6
     ea4:	434d060c 	movtmi	r0, #54796	; 0xd60c
     ea8:	06100052 			; <UNDEFINED> instruction: 0x06100052
     eac:	0052534c 	subseq	r5, r2, ip, asr #6
     eb0:	534d0614 	movtpl	r0, #54804	; 0xd614
     eb4:	06180052 			; <UNDEFINED> instruction: 0x06180052
     eb8:	00524354 	subseq	r4, r2, r4, asr r3
     ebc:	50530618 	subspl	r0, r3, r8, lsl r6
     ec0:	061c0052 			; <UNDEFINED> instruction: 0x061c0052
     ec4:	00524c54 	subseq	r4, r2, r4, asr ip
     ec8:	1d02071c 	stcne	7, cr0, [r2, #-112]	; 0xffffff90
     ecc:	07200000 	streq	r0, [r0, -r0]!
     ed0:	00001d07 	andeq	r1, r0, r7, lsl #26
     ed4:	1c8e0724 	stcne	7, cr0, [lr], {36}	; 0x24
     ed8:	07280000 	streq	r0, [r8, -r0]!
     edc:	00001ceb 	andeq	r1, r0, fp, ror #25
     ee0:	1d870728 	stcne	7, cr0, [r7, #160]	; 0xa0
     ee4:	072c0000 	streq	r0, [ip, -r0]!
     ee8:	00001ce5 	andeq	r1, r0, r5, ror #25
     eec:	1d80072c 	stcne	7, cr0, [r0, #176]	; 0xb0
     ef0:	07300000 	ldreq	r0, [r0, -r0]!
     ef4:	00001dbc 			; <UNDEFINED> instruction: 0x00001dbc
     ef8:	1d790730 	ldclne	7, cr0, [r9, #-192]!	; 0xffffff40
     efc:	07340000 	ldreq	r0, [r4, -r0]!
     f00:	00001db6 			; <UNDEFINED> instruction: 0x00001db6
     f04:	4c420634 	mcrrmi	6, 3, r0, r2, cr4
     f08:	07380052 			; <UNDEFINED> instruction: 0x07380052
     f0c:	00001c88 	andeq	r1, r0, r8, lsl #25
     f10:	4353063c 	cmpmi	r3, #60, 12	; 0x3c00000
     f14:	00c00052 	sbceq	r0, r0, r2, asr r0
     f18:	52535306 	subspl	r5, r3, #402653184	; 0x18000000
     f1c:	0700c400 	streq	ip, [r0, -r0, lsl #8]
     f20:	00001d2d 	andeq	r1, r0, sp, lsr #26
     f24:	4d0600c8 	stcmi	0, cr0, [r6, #-800]	; 0xfffffce0
     f28:	d0005256 	andle	r5, r0, r6, asr r2
     f2c:	1ce00700 	stclne	7, cr0, [r0]
     f30:	00d40000 	sbcseq	r0, r4, r0
     f34:	001cf107 	andseq	pc, ip, r7, lsl #2
     f38:	0600d800 	streq	sp, [r0], -r0, lsl #16
     f3c:	00524557 	subseq	r4, r2, r7, asr r5
     f40:	fd0700dc 	stc2	0, cr0, [r7, #-880]	; 0xfffffc90
     f44:	e000001c 	and	r0, r0, ip, lsl r0
     f48:	1d320700 	ldcne	7, cr0, [r2, #-0]
     f4c:	00e40000 	rsceq	r0, r4, r0
     f50:	001c7d07 	andseq	r7, ip, r7, lsl #26
     f54:	0700e800 	streq	lr, [r0, -r0, lsl #16]
     f58:	00001d19 	andeq	r1, r0, r9, lsl sp
     f5c:	6f0700ec 	svcvs	0x000700ec
     f60:	f000001c 			; <UNDEFINED> instruction: 0xf000001c
     f64:	1d240700 	stcne	7, cr0, [r4, #-0]
     f68:	00f40000 	rscseq	r0, r4, r0
     f6c:	001d0c07 	andseq	r0, sp, r7, lsl #24
     f70:	07018000 	streq	r8, [r1, -r0]
     f74:	00001d1e 	andeq	r1, r0, lr, lsl sp
     f78:	05000184 	streq	r0, [r0, #-388]	; 0x184
     f7c:	7c0a0401 	cfstrsvc	mvf0, [sl], {1}
     f80:	07000001 	streq	r0, [r0, -r1]
     f84:	00001c2b 	andeq	r1, r0, fp, lsr #24
     f88:	1c400700 	mcrrne	7, 0, r0, r0, cr0
     f8c:	00010000 	andeq	r0, r1, r0
     f90:	001d9a02 	andseq	r9, sp, r2, lsl #20
     f94:	670d0400 	strvs	r0, [sp, -r0, lsl #8]
     f98:	05000001 	streq	r0, [r0, #-1]
     f9c:	a2130401 	andsge	r0, r3, #16777216	; 0x1000000
     fa0:	07000001 	streq	r0, [r0, -r1]
     fa4:	00001c5e 	andeq	r1, r0, lr, asr ip
     fa8:	1c1f0700 	ldcne	7, cr0, [pc], {-0}
     fac:	07010000 	streq	r0, [r1, -r0]
     fb0:	00001c53 	andeq	r1, r0, r3, asr ip
     fb4:	a9020002 	stmdbge	r2, {r1}
     fb8:	0400001d 	streq	r0, [r0], #-29
     fbc:	00018717 	andeq	r8, r1, r7, lsl r7
     fc0:	04010500 	streq	r0, [r1], #-1280	; 0x500
     fc4:	0001c820 	andeq	ip, r1, r0, lsr #16
     fc8:	1c340700 	ldcne	7, cr0, [r4], #-0
     fcc:	07000000 	streq	r0, [r0, -r0]
     fd0:	00001c03 	andeq	r1, r0, r3, lsl #24
     fd4:	1c3a0701 	ldcne	7, cr0, [sl], #-4
     fd8:	00020000 	andeq	r0, r2, r0
     fdc:	001d5d02 	andseq	r5, sp, r2, lsl #26
     fe0:	ad240400 	cfstrsge	mvf0, [r4, #-0]
     fe4:	05000001 	streq	r0, [r0, #-1]
     fe8:	2c0b0504 	cfstr32cs	mvfx0, [fp], {4}
     fec:	07000002 	streq	r0, [r0, -r2]
     ff0:	00000660 	andeq	r0, r0, r0, ror #12
     ff4:	a7808080 	strge	r8, [r0, r0, lsl #1]
     ff8:	06d60704 	ldrbeq	r0, [r6], r4, lsl #14
     ffc:	88800000 	stmhi	r0, {}	; <UNPREDICTABLE>
    1000:	0704a780 	streq	sl, [r4, -r0, lsl #15]
    1004:	000007ac 	andeq	r0, r0, ip, lsr #15
    1008:	a7808a80 	strge	r8, [r0, r0, lsl #21]
    100c:	08be0704 	ldmeq	lr!, {r2, r8, r9, sl}
    1010:	8c800000 	stchi	0, cr0, [r0], {0}
    1014:	0704a780 	streq	sl, [r4, -r0, lsl #15]
    1018:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
    101c:	a7808e80 	strge	r8, [r0, r0, lsl #29]
    1020:	02d80704 	sbcseq	r0, r8, #4, 14	; 0x100000
    1024:	90800000 	addls	r0, r0, r0
    1028:	0704a780 	streq	sl, [r4, -r0, lsl #15]
    102c:	0000090e 	andeq	r0, r0, lr, lsl #18
    1030:	a7809280 	strge	r9, [r0, r0, lsl #5]
    1034:	06ae0704 	strteq	r0, [lr], r4, lsl #14
    1038:	94800000 	strls	r0, [r0], #0
    103c:	0004a780 	andeq	sl, r4, r0, lsl #15
    1040:	1c050205 	sfmne	f0, 4, [r5], {5}
    1044:	0000053c 	andeq	r0, r0, ip, lsr r5
    1048:	0007c907 	andeq	ip, r7, r7, lsl #18
    104c:	06070000 	streq	r0, [r7], -r0
    1050:	04000006 	streq	r0, [r0], #-6
    1054:	00018f07 	andeq	r8, r1, r7, lsl #30
    1058:	fb070800 	blx	1c3062 <_start-0x7fe3cf9e>
    105c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1060:	00051907 	andeq	r1, r5, r7, lsl #18
    1064:	78071400 	stmdavc	r7, {sl, ip}
    1068:	18000008 	stmdane	r0, {r3}
    106c:	00068207 	andeq	r8, r6, r7, lsl #4
    1070:	7a071c00 	bvc	1c8078 <_start-0x7fe37f88>
    1074:	24000001 	strcs	r0, [r0], #-1
    1078:	00077107 	andeq	r7, r7, r7, lsl #2
    107c:	61072800 	tstvs	r7, r0, lsl #16
    1080:	2c000008 	stccs	0, cr0, [r0], {8}
    1084:	0009ed07 	andeq	lr, r9, r7, lsl #26
    1088:	0f073000 	svceq	0x00073000
    108c:	34000001 	strcc	r0, [r0], #-1
    1090:	0001da07 	andeq	sp, r1, r7, lsl #20
    1094:	df073800 	svcle	0x00073800
    1098:	3c000002 	stccc	0, cr0, [r0], {2}
    109c:	00078507 	andeq	r8, r7, r7, lsl #10
    10a0:	0700c000 	streq	ip, [r0, -r0]
    10a4:	0000038c 	andeq	r0, r0, ip, lsl #7
    10a8:	070700c4 	streq	r0, [r7, -r4, asr #1]
    10ac:	c8000003 	stmdagt	r0, {r0, r1}
    10b0:	01250700 			; <UNDEFINED> instruction: 0x01250700
    10b4:	00cc0000 	sbceq	r0, ip, r0
    10b8:	00049b07 	andeq	r9, r4, r7, lsl #22
    10bc:	0700d000 	streq	sp, [r0, -r0]
    10c0:	000005f2 	strdeq	r0, [r0], -r2
    10c4:	c40700e0 	strgt	r0, [r7], #-224	; 0xe0
    10c8:	e4000002 	str	r0, [r0], #-2
    10cc:	01640700 	cmneq	r4, r0, lsl #14
    10d0:	00e80000 	rsceq	r0, r8, r0
    10d4:	000a6207 	andeq	r6, sl, r7, lsl #4
    10d8:	0700ec00 	streq	lr, [r0, -r0, lsl #24]
    10dc:	00000b0b 	andeq	r0, r0, fp, lsl #22
    10e0:	a00700f0 	strdge	r0, [r7], -r0	; <UNPREDICTABLE>
    10e4:	f4000003 	vst4.8	{d0-d3}, [r0], r3
    10e8:	014f0700 	cmpeq	pc, r0, lsl #14
    10ec:	00f80000 	rscseq	r0, r8, r0
    10f0:	00054c07 	andeq	r4, r5, r7, lsl #24
    10f4:	0700fc00 	streq	pc, [r0, -r0, lsl #24]
    10f8:	00000347 	andeq	r0, r0, r7, asr #6
    10fc:	b5070180 	strlt	r0, [r7, #-384]	; 0x180
    1100:	84000003 	strhi	r0, [r0], #-3
    1104:	042e0701 	strteq	r0, [lr], #-1793	; 0x701
    1108:	01880000 	orreq	r0, r8, r0
    110c:	00073107 	andeq	r3, r7, r7, lsl #2
    1110:	0701ac00 	streq	sl, [r1, -r0, lsl #24]
    1114:	0000075c 	andeq	r0, r0, ip, asr r7
    1118:	b40701b0 	strlt	r0, [r7], #-432	; 0x1b0
    111c:	b4000007 	strlt	r0, [r0], #-7
    1120:	092e0701 	stmdbeq	lr!, {r0, r8, r9, sl}
    1124:	01bc0000 			; <UNDEFINED> instruction: 0x01bc0000
    1128:	0002af07 	andeq	sl, r2, r7, lsl #30
    112c:	0701c000 	streq	ip, [r1, -r0]
    1130:	000004c1 	andeq	r0, r0, r1, asr #9
    1134:	dc0701c4 	stfles	f0, [r7], {196}	; 0xc4
    1138:	cc00000a 	stcgt	0, cr0, [r0], {10}
    113c:	097f0701 	ldmdbeq	pc!, {r0, r8, r9, sl}^	; <UNPREDICTABLE>
    1140:	01d00000 	bicseq	r0, r0, r0
    1144:	0004d607 	andeq	sp, r4, r7, lsl #12
    1148:	0701d400 	streq	sp, [r1, -r0, lsl #8]
    114c:	000005af 	andeq	r0, r0, pc, lsr #11
    1150:	f30701d8 	veor	q0, <illegal reg q11.5>, q4
    1154:	dc00000a 	stcle	0, cr0, [r0], {10}
    1158:	04af0701 	strteq	r0, [pc], #1793	; 1160 <_start-0x7fffeea0>
    115c:	01e00000 	mvneq	r0, r0
    1160:	00032f07 	andeq	r2, r3, r7, lsl #30
    1164:	0701e400 	streq	lr, [r1, -r0, lsl #8]
    1168:	00000705 	andeq	r0, r0, r5, lsl #14
    116c:	850701e8 	strhi	r0, [r7, #-488]	; 0x1e8
    1170:	ec000004 	stc	0, cr0, [r0], {4}
    1174:	04ed0701 	strbteq	r0, [sp], #1793	; 0x701
    1178:	01f00000 	mvnseq	r0, r0
    117c:	00035d07 	andeq	r5, r3, r7, lsl #26
    1180:	0701f400 	streq	pc, [r1, -r0, lsl #8]
    1184:	000003cb 	andeq	r0, r0, fp, asr #7
    1188:	df0701f8 	svcle	0x000701f8
    118c:	fc000007 	stc2	0, cr0, [r0], {7}
    1190:	084c0701 	stmdaeq	ip, {r0, r8, r9, sl}^
    1194:	02800000 	addeq	r0, r0, #0
    1198:	0003df07 	andeq	sp, r3, r7, lsl #30
    119c:	07028c00 	streq	r8, [r2, -r0, lsl #24]
    11a0:	00000696 	muleq	r0, r6, r6
    11a4:	39070290 	stmdbcc	r7, {r4, r7, r9}
    11a8:	9c000001 	stcls	0, cr0, [r0], {1}
    11ac:	09560702 	ldmdbeq	r6, {r1, r8, r9, sl}^
    11b0:	02a00000 	adceq	r0, r0, #0
    11b4:	000a0107 	andeq	r0, sl, r7, lsl #2
    11b8:	0702ac00 	streq	sl, [r2, -r0, lsl #24]
    11bc:	0000057d 	andeq	r0, r0, sp, ror r5
    11c0:	480702b0 	stmdami	r7, {r4, r5, r7, r9}
    11c4:	c000000a 	andgt	r0, r0, sl
    11c8:	08c50702 	stmiaeq	r5, {r1, r8, r9, sl}^
    11cc:	02c40000 	sbceq	r0, r4, #0
    11d0:	000a3207 	andeq	r3, sl, r7, lsl #4
    11d4:	0702c800 	streq	ip, [r2, -r0, lsl #16]
    11d8:	0000026d 	andeq	r0, r0, sp, ror #4
    11dc:	670702cc 	strvs	r0, [r7, -ip, asr #5]
    11e0:	d0000006 	andle	r0, r0, r6
    11e4:	09b10702 	ldmibeq	r1!, {r1, r8, r9, sl}
    11e8:	07000000 	streq	r0, [r0, -r0]
    11ec:	00000458 	andeq	r0, r0, r8, asr r4
    11f0:	05030704 	streq	r0, [r3, #-1796]	; 0x704
    11f4:	07080000 	streq	r0, [r8, -r0]
    11f8:	00000b20 	andeq	r0, r0, r0, lsr #22
    11fc:	09d6070c 	ldmibeq	r6, {r2, r3, r8, r9, sl}^
    1200:	07100000 	ldreq	r0, [r0, -r0]
    1204:	000008f6 	strdeq	r0, [r0], -r6
    1208:	08090714 	stmdaeq	r9, {r2, r4, r8, r9, sl}
    120c:	07180000 	ldreq	r0, [r8, -r0]
    1210:	0000096a 	andeq	r0, r0, sl, ror #18
    1214:	088c071c 	stmeq	ip, {r2, r3, r4, r8, r9, sl}
    1218:	07200000 	streq	r0, [r0, -r0]!
    121c:	00000562 	andeq	r0, r0, r2, ror #10
    1220:	03710724 	cmneq	r1, #36, 14	; 0x900000
    1224:	07280000 	streq	r0, [r8, -r0]!
    1228:	00000996 	muleq	r0, r6, r9
    122c:	07f4072c 	ldrbeq	r0, [r4, ip, lsr #14]!
    1230:	07300000 	ldreq	r0, [r0, -r0]!
    1234:	00000210 	andeq	r0, r0, r0, lsl r2
    1238:	08db0734 	ldmeq	fp, {r2, r4, r5, r8, r9, sl}^
    123c:	07380000 	ldreq	r0, [r8, -r0]!
    1240:	000001a5 	andeq	r0, r0, r5, lsr #3
    1244:	081d073c 	ldmdaeq	sp, {r2, r3, r4, r5, r8, r9, sl}
    1248:	00c00000 	sbceq	r0, r0, r0
    124c:	000a7707 	andeq	r7, sl, r7, lsl #14
    1250:	0700c400 	streq	ip, [r0, -r0, lsl #8]
    1254:	00000444 	andeq	r0, r0, r4, asr #8
    1258:	ef0700c8 	svc	0x000700c8
    125c:	cc000001 	stcgt	0, cr0, [r0], {1}
    1260:	0ac00700 	beq	ff002e68 <value+0x7f00193e>
    1264:	00d00000 	sbcseq	r0, r0, r0
    1268:	00064c07 	andeq	r4, r6, r7, lsl #24
    126c:	0700d400 	streq	sp, [r0, -r0, lsl #8]
    1270:	00000286 	andeq	r0, r0, r6, lsl #5
    1274:	de0700d8 	mcrle	0, 0, r0, cr7, cr8, {6}
    1278:	dc000006 	stcle	0, cr0, [r0], {6}
    127c:	05300700 	ldreq	r0, [r0, #-1792]!	; 0x700
    1280:	00e00000 	rsceq	r0, r0, r0
    1284:	00083007 	andeq	r3, r8, r7
    1288:	0700e400 	streq	lr, [r0, -r0, lsl #8]
    128c:	000002f3 	strdeq	r0, [r0], -r3
    1290:	230700e8 	movwcs	r0, #28904	; 0x70e8
    1294:	ec000002 	stc	0, cr0, [r0], {2}
    1298:	06f20700 	ldrbteq	r0, [r2], r0, lsl #14
    129c:	00f00000 	rscseq	r0, r0, r0
    12a0:	00024c07 	andeq	r4, r2, r7, lsl #24
    12a4:	0700f400 	streq	pc, [r0, -r0, lsl #8]
    12a8:	00000a8d 	andeq	r0, r0, sp, lsl #21
    12ac:	460700f8 			; <UNDEFINED> instruction: 0x460700f8
    12b0:	fc000007 	stc2	0, cr0, [r0], {7}
    12b4:	031b0700 	tsteq	fp, #0, 14
    12b8:	01800000 	orreq	r0, r0, r0
    12bc:	00023807 	andeq	r3, r2, r7, lsl #16
    12c0:	07018400 	streq	r8, [r1, -r0, lsl #8]
    12c4:	00000798 	muleq	r0, r8, r7
    12c8:	1d070188 	stfnes	f0, [r7, #-544]	; 0xfffffde0
    12cc:	8c000007 	stchi	0, cr0, [r0], {7}
    12d0:	040f0701 	streq	r0, [pc], #-1793	; 12d8 <_start-0x7fffed28>
    12d4:	01900000 	orrseq	r0, r0, r0
    12d8:	00061b07 	andeq	r1, r6, r7, lsl #22
    12dc:	07019400 	streq	r9, [r1, -r0, lsl #8]
    12e0:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    12e4:	dc070198 	stfles	f0, [r7], {152}	; 0x98
    12e8:	9c000005 	stcls	0, cr0, [r0], {5}
    12ec:	0b590701 	bleq	1642ef8 <_start-0x7e9bd108>
    12f0:	01a00000 	moveq	r0, r0
    12f4:	00094207 	andeq	r4, r9, r7, lsl #4
    12f8:	0701a400 	streq	sl, [r1, -r0, lsl #8]
    12fc:	0000029c 	muleq	r0, ip, r2
    1300:	c30701a8 	movwgt	r0, #29096	; 0x71a8
    1304:	ac000009 	stcge	0, cr0, [r0], {9}
    1308:	03f70701 	mvnseq	r0, #262144	; 0x40000
    130c:	01b00000 	movseq	r0, r0
    1310:	0005c607 	andeq	ip, r5, r7, lsl #12
    1314:	0701b400 	streq	fp, [r1, -r0, lsl #8]
    1318:	00000b44 	andeq	r0, r0, r4, asr #22
    131c:	a80701b8 	stmdage	r7, {r3, r4, r5, r7, r8}
    1320:	bc00000a 	stclt	0, cr0, [r0], {10}
    1324:	05920701 	ldreq	r0, [r2, #1793]	; 0x701
    1328:	01c00000 	biceq	r0, r0, r0
    132c:	000a1b07 	andeq	r1, sl, r7, lsl #22
    1330:	0701c400 	streq	ip, [r1, -r0, lsl #8]
    1334:	0000062f 	andeq	r0, r0, pc, lsr #12
    1338:	150701c8 	strne	r0, [r7, #-456]	; 0x1c8
    133c:	cc000009 	stcgt	0, cr0, [r0], {9}
    1340:	04700701 	ldrbteq	r0, [r0], #-1793	; 0x701
    1344:	01d40000 	bicseq	r0, r4, r0
    1348:	0006c207 	andeq	ip, r6, r7, lsl #4
    134c:	0001d800 	andeq	sp, r1, r0, lsl #16
    1350:	001c9408 	andseq	r9, ip, r8, lsl #8
    1354:	c0080100 	andgt	r0, r8, r0, lsl #2
    1358:	58800004 	stmpl	r0, {r2}
    135c:	01000000 	mrseq	r0, (UNDEF: 0)
    1360:	0005609c 	muleq	r5, ip, r0
    1364:	1cb70900 	ldcne	9, cr0, [r7]
    1368:	0a010000 	beq	41370 <_start-0x7ffbec90>
    136c:	00000030 	andeq	r0, r0, r0, lsr r0
    1370:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1374:	001cc50a 	andseq	ip, ip, sl, lsl #10
    1378:	18130100 	ldmdane	r3, {r8}
    137c:	f8800005 			; <UNDEFINED> instruction: 0xf8800005
    1380:	01000001 	tsteq	r0, r1
    1384:	0005ae9c 	muleq	r5, ip, lr
    1388:	1c740b00 	ldclne	11, cr0, [r4], #-0
    138c:	13010000 	movwne	r0, #4096	; 0x1000
    1390:	00000030 	andeq	r0, r0, r0, lsr r0
    1394:	09649102 	stmdbeq	r4!, {r1, r8, ip, pc}^
    1398:	0000020b 	andeq	r0, r0, fp, lsl #4
    139c:	00301601 	eorseq	r1, r0, r1, lsl #12
    13a0:	91020000 	mrsls	r0, (UNDEF: 2)
    13a4:	69640c74 	stmdbvs	r4!, {r2, r4, r5, r6, sl, fp}^
    13a8:	34010076 	strcc	r0, [r1], #-118	; 0x76
    13ac:	000005ae 	andeq	r0, r0, lr, lsr #11
    13b0:	09709102 	ldmdbeq	r0!, {r1, r8, ip, pc}^
    13b4:	00001cf6 	strdeq	r1, [r0], -r6
    13b8:	00303501 	eorseq	r3, r0, r1, lsl #10
    13bc:	91020000 	mrsls	r0, (UNDEF: 2)
    13c0:	0403006c 	streq	r0, [r3], #-108	; 0x6c
    13c4:	001cbf04 	andseq	fp, ip, r4, lsl #30
    13c8:	1d6f0d00 	stclne	13, cr0, [pc, #-0]	; 13d0 <_start-0x7fffec30>
    13cc:	3f010000 	svccc	0x00010000
    13d0:	80000710 	andhi	r0, r0, r0, lsl r7
    13d4:	0000004c 	andeq	r0, r0, ip, asr #32
    13d8:	06039c01 	streq	r9, [r3], -r1, lsl #24
    13dc:	740b0000 	strvc	r0, [fp], #-0
    13e0:	0100001c 	tsteq	r0, ip, lsl r0
    13e4:	0000303f 	andeq	r3, r0, pc, lsr r0
    13e8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    13ec:	001da10b 	andseq	sl, sp, fp, lsl #2
    13f0:	c83f0100 	ldmdagt	pc!, {r8}	; <UNPREDICTABLE>
    13f4:	02000001 	andeq	r0, r0, #1
    13f8:	560b7391 			; <UNDEFINED> instruction: 0x560b7391
    13fc:	0100001d 	tsteq	r0, sp, lsl r0
    1400:	0001a23f 	andeq	sl, r1, pc, lsr r2
    1404:	72910200 	addsvc	r0, r1, #0, 4
    1408:	001d8e0b 	andseq	r8, sp, fp, lsl #28
    140c:	7c3f0100 	ldfvcs	f0, [pc], #-0	; 1414 <_start-0x7fffebec>
    1410:	02000001 	andeq	r0, r0, #1
    1414:	0d007191 	stfeqs	f7, [r0, #-580]	; 0xfffffdbc
    1418:	00001cad 	andeq	r1, r0, sp, lsr #25
    141c:	075c4e01 	ldrbeq	r4, [ip, -r1, lsl #28]
    1420:	00608000 	rsbeq	r8, r0, r0
    1424:	9c010000 	stcls	0, cr0, [r1], {-0}
    1428:	00000625 	andeq	r0, r0, r5, lsr #12
    142c:	0100630e 	tsteq	r0, lr, lsl #6
    1430:	00005e4e 	andeq	r5, r0, lr, asr #28
    1434:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1438:	1d4c0f00 	stclne	15, cr0, [ip, #-0]
    143c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    1440:	0000005e 	andeq	r0, r0, lr, asr r0
    1444:	800007bc 			; <UNDEFINED> instruction: 0x800007bc
    1448:	00000048 	andeq	r0, r0, r8, asr #32
    144c:	3d109c01 	ldccc	12, cr9, [r0, #-4]
    1450:	0100001d 	tsteq	r0, sp, lsl r0
    1454:	0000505f 	andeq	r5, r0, pc, asr r0
    1458:	00080400 	andeq	r0, r8, r0, lsl #8
    145c:	00006c80 	andeq	r6, r0, r0, lsl #25
    1460:	869c0100 	ldrhi	r0, [ip], r0, lsl #2
    1464:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    1468:	00727473 	rsbseq	r7, r2, r3, ror r4
    146c:	06865f01 	streq	r5, [r6], r1, lsl #30
    1470:	91020000 	mrsls	r0, (UNDEF: 2)
    1474:	1d68096c 	stclne	9, cr0, [r8, #-432]!	; 0xfffffe50
    1478:	61010000 	mrsvs	r0, (UNDEF: 1)
    147c:	00000050 	andeq	r0, r0, r0, asr r0
    1480:	11709102 	cmnne	r0, r2, lsl #2
    1484:	80000820 	andhi	r0, r0, r0, lsr #16
    1488:	00000040 	andeq	r0, r0, r0, asr #32
    148c:	0100690c 	tsteq	r0, ip, lsl #18
    1490:	00005062 	andeq	r5, r0, r2, rrx
    1494:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1498:	04120000 	ldreq	r0, [r2], #-0
    149c:	0000005e 	andeq	r0, r0, lr, asr r0
    14a0:	001cd110 	andseq	sp, ip, r0, lsl r1
    14a4:	50690100 	rsbpl	r0, r9, r0, lsl #2
    14a8:	70000000 	andvc	r0, r0, r0
    14ac:	6c800008 	stcvs	0, cr0, [r0], {8}
    14b0:	01000000 	mrseq	r0, (UNDEF: 0)
    14b4:	0006d89c 	muleq	r6, ip, r8
    14b8:	75620e00 	strbvc	r0, [r2, #-3584]!	; 0xe00
    14bc:	69010066 	stmdbvs	r1, {r1, r2, r5, r6}
    14c0:	00000686 	andeq	r0, r0, r6, lsl #13
    14c4:	09649102 	stmdbeq	r4!, {r1, r8, ip, pc}^
    14c8:	00001d68 	andeq	r1, r0, r8, ror #26
    14cc:	00506b01 	subseq	r6, r0, r1, lsl #22
    14d0:	91020000 	mrsls	r0, (UNDEF: 2)
    14d4:	088c1168 	stmeq	ip, {r3, r5, r6, r8, ip}
    14d8:	00408000 	subeq	r8, r0, r0
    14dc:	690c0000 	stmdbvs	ip, {}	; <UNPREDICTABLE>
    14e0:	506c0100 	rsbpl	r0, ip, r0, lsl #2
    14e4:	02000000 	andeq	r0, r0, #0
    14e8:	00006c91 	muleq	r0, r1, ip
    14ec:	00026713 	andeq	r6, r2, r3, lsl r7
    14f0:	37070100 	strcc	r0, [r7, -r0, lsl #2]
    14f4:	05000000 	streq	r0, [r0, #-0]
    14f8:	00152a03 	andseq	r2, r5, r3, lsl #20
    14fc:	02910080 	addseq	r0, r1, #128	; 0x80
    1500:	00040000 	andeq	r0, r4, r0
    1504:	000004e3 	andeq	r0, r0, r3, ror #9
    1508:	00780104 	rsbseq	r0, r8, r4, lsl #2
    150c:	c7010000 	strgt	r0, [r1, -r0]
    1510:	2100001d 	tstcs	r0, sp, lsl r0
    1514:	dc00001e 	stcle	0, cr0, [r0], {30}
    1518:	9c800008 	stcls	0, cr0, [r0], {8}
    151c:	f5000006 			; <UNDEFINED> instruction: 0xf5000006
    1520:	02000002 	andeq	r0, r0, #2
    1524:	00001c48 	andeq	r1, r0, r8, asr #24
    1528:	00301502 	eorseq	r1, r0, r2, lsl #10
    152c:	04030000 	streq	r0, [r3], #-0
    1530:	00000036 	andeq	r0, r0, r6, lsr r0
    1534:	00004104 	andeq	r4, r0, r4, lsl #2
    1538:	00410500 	subeq	r0, r1, r0, lsl #10
    153c:	06000000 	streq	r0, [r0], -r0
    1540:	00730801 	rsbseq	r0, r3, r1, lsl #16
    1544:	d6070000 	strle	r0, [r7], -r0
    1548:	0100001d 	tsteq	r0, sp, lsl r0
    154c:	0008dc13 	andeq	sp, r8, r3, lsl ip
    1550:	00016080 	andeq	r6, r1, r0, lsl #1
    1554:	ce9c0100 	fmlgte	f0, f4, f0
    1558:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    155c:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1560:	00251301 	eoreq	r1, r5, r1, lsl #6
    1564:	91020000 	mrsls	r0, (UNDEF: 2)
    1568:	756e0864 	strbvc	r0, [lr, #-2148]!	; 0x864
    156c:	1401006d 	strne	r0, [r1], #-109	; 0x6d
    1570:	000000ce 	andeq	r0, r0, lr, asr #1
    1574:	09609102 	stmdbeq	r0!, {r1, r8, ip, pc}^
    1578:	00001e6d 	andeq	r1, r0, sp, ror #28
    157c:	00da1401 	sbcseq	r1, sl, r1, lsl #8
    1580:	91020000 	mrsls	r0, (UNDEF: 2)
    1584:	1e63095c 	mcrne	9, 3, r0, cr3, cr12, {2}
    1588:	15010000 	strne	r0, [r1, #-0]
    158c:	000000da 	ldrdeq	r0, [r0], -sl
    1590:	0a589102 	beq	16259a0 <_start-0x7e9da660>
    1594:	00736f70 	rsbseq	r6, r3, r0, ror pc
    1598:	00e11b01 	rsceq	r1, r1, r1, lsl #22
    159c:	91020000 	mrsls	r0, (UNDEF: 2)
    15a0:	1dfa0b74 	ldclne	11, cr0, [sl, #464]!	; 0x1d0
    15a4:	1c010000 	stcne	0, cr0, [r1], {-0}
    15a8:	000000e1 	andeq	r0, r0, r1, ror #1
    15ac:	0b709102 	bleq	1c259bc <_start-0x7e3da644>
    15b0:	00001e04 	andeq	r1, r0, r4, lsl #28
    15b4:	00da1d01 	sbcseq	r1, sl, r1, lsl #26
    15b8:	91020000 	mrsls	r0, (UNDEF: 2)
    15bc:	1eab0b6c 	vfmsne.f64	d0, d11, d28
    15c0:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    15c4:	000000da 	ldrdeq	r0, [r0], -sl
    15c8:	00689102 	rsbeq	r9, r8, r2, lsl #2
    15cc:	0000d30c 	andeq	sp, r0, ip, lsl #6
    15d0:	07040600 	streq	r0, [r4, -r0, lsl #12]
    15d4:	00001de8 	andeq	r1, r0, r8, ror #27
    15d8:	6905040d 	stmdbvs	r5, {r0, r2, r3, sl}
    15dc:	0600746e 	streq	r7, [r0], -lr, ror #8
    15e0:	1e9b0504 	cdpne	5, 9, cr0, cr11, cr4, {0}
    15e4:	76070000 	strvc	r0, [r7], -r0
    15e8:	0100001e 	tsteq	r0, lr, lsl r0
    15ec:	000a3c3c 	andeq	r3, sl, ip, lsr ip
    15f0:	00011880 	andeq	r1, r1, r0, lsl #17
    15f4:	789c0100 	ldmvc	ip, {r8}
    15f8:	08000001 	stmdaeq	r0, {r0}
    15fc:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1600:	00253c01 	eoreq	r3, r5, r1, lsl #24
    1604:	91020000 	mrsls	r0, (UNDEF: 2)
    1608:	756e0864 	strbvc	r0, [lr, #-2148]!	; 0x864
    160c:	3d01006d 	stccc	0, cr0, [r1, #-436]	; 0xfffffe4c
    1610:	000000ce 	andeq	r0, r0, lr, asr #1
    1614:	09609102 	stmdbeq	r0!, {r1, r8, ip, pc}^
    1618:	00001e6d 	andeq	r1, r0, sp, ror #28
    161c:	00da3d01 	sbcseq	r3, sl, r1, lsl #26
    1620:	91020000 	mrsls	r0, (UNDEF: 2)
    1624:	1e63095c 	mcrne	9, 3, r0, cr3, cr12, {2}
    1628:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    162c:	000000da 	ldrdeq	r0, [r0], -sl
    1630:	0b589102 	bleq	1625a40 <_start-0x7e9da5c0>
    1634:	00001dc2 	andeq	r1, r0, r2, asr #27
    1638:	00da4001 	sbcseq	r4, sl, r1
    163c:	91020000 	mrsls	r0, (UNDEF: 2)
    1640:	1e040b74 	vmovne.16	d4[1], r0
    1644:	41010000 	mrsmi	r0, (UNDEF: 1)
    1648:	000000da 	ldrdeq	r0, [r0], -sl
    164c:	0b709102 	bleq	1c25a5c <_start-0x7e3da5a4>
    1650:	00001eab 	andeq	r1, r0, fp, lsr #29
    1654:	00da4201 	sbcseq	r4, sl, r1, lsl #4
    1658:	91020000 	mrsls	r0, (UNDEF: 2)
    165c:	0a740e6c 	beq	1d05014 <_start-0x7e2fafec>
    1660:	00c08000 	sbceq	r8, r0, r0
    1664:	a40b0000 	strge	r0, [fp], #-0
    1668:	0100001e 	tsteq	r0, lr, lsl r0
    166c:	00004145 	andeq	r4, r0, r5, asr #2
    1670:	6b910200 	blvs	fe441e78 <value+0x7e44094e>
    1674:	180f0000 	stmdane	pc, {}	; <UNPREDICTABLE>
    1678:	0100001e 	tsteq	r0, lr, lsl r0
    167c:	000b545f 	andeq	r5, fp, pc, asr r4
    1680:	00042480 	andeq	r2, r4, r0, lsl #9
    1684:	6a9c0100 	bvs	fe701a8c <value+0x7e700562>
    1688:	08000002 	stmdaeq	r0, {r1}
    168c:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1690:	00255f01 	eoreq	r5, r5, r1, lsl #30
    1694:	91020000 	mrsls	r0, (UNDEF: 2)
    1698:	6d660854 	stclvs	8, cr0, [r6, #-336]!	; 0xfffffeb0
    169c:	5f010074 	svcpl	0x00010074
    16a0:	0000026a 	andeq	r0, r0, sl, ror #4
    16a4:	08509102 	ldmdaeq	r0, {r1, r8, ip, pc}^
    16a8:	01007061 	tsteq	r0, r1, rrx
    16ac:	0002755f 	andeq	r7, r2, pc, asr r5
    16b0:	4c910200 	lfmmi	f0, 4, [r1], {0}
    16b4:	001e8e0b 	andseq	r8, lr, fp, lsl #28
    16b8:	da610100 	ble	1841ac0 <_start-0x7e7be540>
    16bc:	02000000 	andeq	r0, r0, #0
    16c0:	6d0b7491 	cfstrsvs	mvf7, [fp, #-580]	; 0xfffffdbc
    16c4:	0100001e 	tsteq	r0, lr, lsl r0
    16c8:	0000da62 	andeq	sp, r0, r2, ror #20
    16cc:	70910200 	addsvc	r0, r1, r0, lsl #4
    16d0:	001e630b 	andseq	r6, lr, fp, lsl #6
    16d4:	da630100 	ble	18c1adc <_start-0x7e73e524>
    16d8:	02000000 	andeq	r0, r0, #0
    16dc:	88106c91 	ldmdahi	r0, {r0, r4, r7, sl, fp, sp, lr}
    16e0:	0100001e 	tsteq	r0, lr, lsl r0
    16e4:	000f54bf 			; <UNDEFINED> instruction: 0x000f54bf
    16e8:	0dbc1180 	ldfeqs	f1, [ip, #512]!	; 0x200
    16ec:	00608000 	rsbeq	r8, r0, r0
    16f0:	02050000 	andeq	r0, r5, #0
    16f4:	640a0000 	strvs	r0, [sl], #-0
    16f8:	e1860100 	orr	r0, r6, r0, lsl #2
    16fc:	02000000 	andeq	r0, r0, #0
    1700:	11006891 			; <UNDEFINED> instruction: 0x11006891
    1704:	80000e1c 	andhi	r0, r0, ip, lsl lr
    1708:	0000002c 	andeq	r0, r0, ip, lsr #32
    170c:	0000021f 	andeq	r0, r0, pc, lsl r2
    1710:	0100750a 	tsteq	r0, sl, lsl #10
    1714:	0000d392 	muleq	r0, r2, r3
    1718:	60910200 	addsvs	r0, r1, r0, lsl #4
    171c:	0e701100 	rpweqs	f1, f0, f0
    1720:	002c8000 	eoreq	r8, ip, r0
    1724:	02390000 	eorseq	r0, r9, #0
    1728:	780a0000 	stmdavc	sl, {}	; <UNPREDICTABLE>
    172c:	d3a10100 			; <UNDEFINED> instruction: 0xd3a10100
    1730:	02000000 	andeq	r0, r0, #0
    1734:	11005c91 			; <UNDEFINED> instruction: 0x11005c91
    1738:	80000e9c 	mulhi	r0, ip, lr
    173c:	00000048 	andeq	r0, r0, r8, asr #32
    1740:	00000253 	andeq	r0, r0, r3, asr r2
    1744:	0100730a 	tsteq	r0, sl, lsl #6
    1748:	00028ea8 	andeq	r8, r2, r8, lsr #29
    174c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    1750:	0ee40e00 	cdpeq	14, 14, cr0, cr4, cr0, {0}
    1754:	002c8000 	eoreq	r8, ip, r0
    1758:	630a0000 	movwvs	r0, #40960	; 0xa000
    175c:	daaf0100 	ble	febc1b64 <value+0x7ebc063a>
    1760:	02000000 	andeq	r0, r0, #0
    1764:	00005891 	muleq	r0, r1, r8
    1768:	02700403 	rsbseq	r0, r0, #50331648	; 0x3000000
    176c:	410c0000 	mrsmi	r0, (UNDEF: 12)
    1770:	12000000 	andne	r0, r0, #0
    1774:	00001c0b 	andeq	r1, r0, fp, lsl #24
    1778:	8c000304 	stchi	3, cr0, [r0], {4}
    177c:	13000002 	movwne	r0, #2
    1780:	00001c6a 	andeq	r1, r0, sl, ror #24
    1784:	0000028c 	andeq	r0, r0, ip, lsl #5
    1788:	04140000 	ldreq	r0, [r4], #-0
    178c:	00410403 	subeq	r0, r1, r3, lsl #8
    1790:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1794:	04000002 	streq	r0, [r0], #-2
    1798:	0005ec00 	andeq	lr, r5, r0, lsl #24
    179c:	78010400 	stmdavc	r1, {sl}
    17a0:	01000000 	mrseq	r0, (UNDEF: 0)
    17a4:	00001eca 	andeq	r1, r0, sl, asr #29
    17a8:	00001ef6 	strdeq	r1, [r0], -r6
    17ac:	80000f78 	andhi	r0, r0, r8, ror pc
    17b0:	00000560 	andeq	r0, r0, r0, ror #10
    17b4:	00000427 	andeq	r0, r0, r7, lsr #8
    17b8:	001ec302 	andseq	ip, lr, r2, lsl #6
    17bc:	7f0a0100 	svcvc	0x000a0100
    17c0:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    17c4:	a480000f 	strge	r0, [r0], #15
    17c8:	01000000 	mrseq	r0, (UNDEF: 0)
    17cc:	00007f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
    17d0:	73640300 	cmnvc	r4, #0, 6
    17d4:	0a010074 	beq	419ac <_start-0x7ffbe654>
    17d8:	00000086 	andeq	r0, r0, r6, lsl #1
    17dc:	036c9102 	cmneq	ip, #-2147483648	; 0x80000000
    17e0:	00637273 	rsbeq	r7, r3, r3, ror r2
    17e4:	00860a01 	addeq	r0, r6, r1, lsl #20
    17e8:	91020000 	mrsls	r0, (UNDEF: 2)
    17ec:	006e0368 	rsbeq	r0, lr, r8, ror #6
    17f0:	007f0a01 	rsbseq	r0, pc, r1, lsl #20
    17f4:	91020000 	mrsls	r0, (UNDEF: 2)
    17f8:	00610464 	rsbeq	r0, r1, r4, ror #8
    17fc:	008d0c01 	addeq	r0, sp, r1, lsl #24
    1800:	91020000 	mrsls	r0, (UNDEF: 2)
    1804:	00620474 	rsbeq	r0, r2, r4, ror r4
    1808:	008d0d01 	addeq	r0, sp, r1, lsl #26
    180c:	91020000 	mrsls	r0, (UNDEF: 2)
    1810:	04050070 	streq	r0, [r5], #-112	; 0x70
    1814:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
    1818:	8c040600 	stchi	6, cr0, [r4], {-0}
    181c:	07000000 	streq	r0, [r0, -r0]
    1820:	00930406 	addseq	r0, r3, r6, lsl #8
    1824:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    1828:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    182c:	00730801 	rsbseq	r0, r3, r1, lsl #16
    1830:	ef020000 	svc	0x00020000
    1834:	0100001e 	tsteq	r0, lr, lsl r0
    1838:	00007f16 	andeq	r7, r0, r6, lsl pc
    183c:	00101c00 	andseq	r1, r0, r0, lsl #24
    1840:	00005480 	andeq	r5, r0, r0, lsl #9
    1844:	d39c0100 	orrsle	r0, ip, #0, 2
    1848:	03000000 	movweq	r0, #0
    184c:	00727473 	rsbseq	r7, r2, r3, ror r4
    1850:	008d1601 	addeq	r1, sp, r1, lsl #12
    1854:	91020000 	mrsls	r0, (UNDEF: 2)
    1858:	0069046c 	rsbeq	r0, r9, ip, ror #8
    185c:	007f1801 	rsbseq	r1, pc, r1, lsl #16
    1860:	91020000 	mrsls	r0, (UNDEF: 2)
    1864:	b5020074 	strlt	r0, [r2, #-116]	; 0x74
    1868:	0100001e 	tsteq	r0, lr, lsl r0
    186c:	0001151e 	andeq	r1, r1, lr, lsl r5
    1870:	00107000 	andseq	r7, r0, r0
    1874:	00006080 	andeq	r6, r0, r0, lsl #1
    1878:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    187c:	03000001 	movweq	r0, #1
    1880:	00747364 	rsbseq	r7, r4, r4, ror #6
    1884:	01151e01 	tsteq	r5, r1, lsl #28
    1888:	91020000 	mrsls	r0, (UNDEF: 2)
    188c:	7273036c 	rsbsvc	r0, r3, #108, 6	; 0xb0000001
    1890:	1e010063 	cdpne	0, 0, cr0, cr1, cr3, {3}
    1894:	0000008d 	andeq	r0, r0, sp, lsl #1
    1898:	04689102 	strbteq	r9, [r8], #-258	; 0x102
    189c:	20010064 	andcs	r0, r1, r4, rrx
    18a0:	00000115 	andeq	r0, r0, r5, lsl r1
    18a4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    18a8:	00980406 	addseq	r0, r8, r6, lsl #8
    18ac:	d9020000 	stmdble	r2, {}	; <UNPREDICTABLE>
    18b0:	0100001e 	tsteq	r0, lr, lsl r0
    18b4:	00011526 	andeq	r1, r1, r6, lsr #10
    18b8:	0010d000 	andseq	sp, r0, r0
    18bc:	0000a880 	andeq	sl, r0, r0, lsl #17
    18c0:	699c0100 	ldmibvs	ip, {r8}
    18c4:	03000001 	movweq	r0, #1
    18c8:	00747364 	rsbseq	r7, r4, r4, ror #6
    18cc:	01152601 	tsteq	r5, r1, lsl #12
    18d0:	91020000 	mrsls	r0, (UNDEF: 2)
    18d4:	7273036c 	rsbsvc	r0, r3, #108, 6	; 0xb0000001
    18d8:	26010063 	strcs	r0, [r1], -r3, rrx
    18dc:	0000008d 	andeq	r0, r0, sp, lsl #1
    18e0:	03689102 	cmneq	r8, #-2147483648	; 0x80000000
    18e4:	2601006e 	strcs	r0, [r1], -lr, rrx
    18e8:	0000007f 	andeq	r0, r0, pc, ror r0
    18ec:	04649102 	strbteq	r9, [r4], #-258	; 0x102
    18f0:	28010064 	stmdacs	r1, {r2, r5, r6}
    18f4:	00000115 	andeq	r0, r0, r5, lsl r1
    18f8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    18fc:	001ee10a 	andseq	lr, lr, sl, lsl #2
    1900:	15300100 	ldrne	r0, [r0, #-256]!	; 0x100
    1904:	78000001 	stmdavc	r0, {r0}
    1908:	6c800011 	stcvs	0, cr0, [r0], {17}
    190c:	01000000 	mrseq	r0, (UNDEF: 0)
    1910:	0001ab9c 	muleq	r1, ip, fp
    1914:	73640300 	cmnvc	r4, #0, 6
    1918:	30010074 	andcc	r0, r1, r4, ror r0
    191c:	00000115 	andeq	r0, r0, r5, lsl r1
    1920:	036c9102 	cmneq	ip, #-2147483648	; 0x80000000
    1924:	00637273 	rsbeq	r7, r3, r3, ror r2
    1928:	008d3001 	addeq	r3, sp, r1
    192c:	91020000 	mrsls	r0, (UNDEF: 2)
    1930:	00690468 	rsbeq	r0, r9, r8, ror #8
    1934:	007f3201 	rsbseq	r3, pc, r1, lsl #4
    1938:	91020000 	mrsls	r0, (UNDEF: 2)
    193c:	420a0074 	andmi	r0, sl, #116	; 0x74
    1940:	0100001f 	tsteq	r0, pc, lsl r0
    1944:	00011537 	andeq	r1, r1, r7, lsr r5
    1948:	0011e400 	andseq	lr, r1, r0, lsl #8
    194c:	0000c080 	andeq	ip, r0, r0, lsl #1
    1950:	f99c0100 			; <UNDEFINED> instruction: 0xf99c0100
    1954:	03000001 	movweq	r0, #1
    1958:	00747364 	rsbseq	r7, r4, r4, ror #6
    195c:	01153701 	tsteq	r5, r1, lsl #14
    1960:	91020000 	mrsls	r0, (UNDEF: 2)
    1964:	7273036c 	rsbsvc	r0, r3, #108, 6	; 0xb0000001
    1968:	37010063 	strcc	r0, [r1, -r3, rrx]
    196c:	0000008d 	andeq	r0, r0, sp, lsl #1
    1970:	03689102 	cmneq	r8, #-2147483648	; 0x80000000
    1974:	3701006e 	strcc	r0, [r1, -lr, rrx]
    1978:	0000007f 	andeq	r0, r0, pc, ror r0
    197c:	04649102 	strbteq	r9, [r4], #-258	; 0x102
    1980:	39010069 	stmdbcc	r1, {r0, r3, r5, r6}
    1984:	0000007f 	andeq	r0, r0, pc, ror r0
    1988:	00749102 	rsbseq	r9, r4, r2, lsl #2
    198c:	001ee802 	andseq	lr, lr, r2, lsl #16
    1990:	7f430100 	svcvc	0x00430100
    1994:	a4000000 	strge	r0, [r0], #-0
    1998:	94800012 	strls	r0, [r0], #18
    199c:	01000000 	mrseq	r0, (UNDEF: 0)
    19a0:	00022f9c 	muleq	r2, ip, pc	; <UNPREDICTABLE>
    19a4:	73640300 	cmnvc	r4, #0, 6
    19a8:	43010074 	movwmi	r0, #4212	; 0x1074
    19ac:	0000008d 	andeq	r0, r0, sp, lsl #1
    19b0:	03749102 	cmneq	r4, #-2147483648	; 0x80000000
    19b4:	00637273 	rsbeq	r7, r3, r3, ror r2
    19b8:	008d4301 	addeq	r4, sp, r1, lsl #6
    19bc:	91020000 	mrsls	r0, (UNDEF: 2)
    19c0:	4a020070 	bmi	81b88 <_start-0x7ff7e478>
    19c4:	0100001f 	tsteq	r0, pc, lsl r0
    19c8:	00007f50 	andeq	r7, r0, r0, asr pc
    19cc:	00133800 	andseq	r3, r3, r0, lsl #16
    19d0:	0000b080 	andeq	fp, r0, r0, lsl #1
    19d4:	719c0100 	orrsvc	r0, ip, r0, lsl #2
    19d8:	03000002 	movweq	r0, #2
    19dc:	00747364 	rsbseq	r7, r4, r4, ror #6
    19e0:	008d5001 	addeq	r5, sp, r1
    19e4:	91020000 	mrsls	r0, (UNDEF: 2)
    19e8:	72730374 	rsbsvc	r0, r3, #116, 6	; 0xd0000001
    19ec:	50010063 	andpl	r0, r1, r3, rrx
    19f0:	0000008d 	andeq	r0, r0, sp, lsl #1
    19f4:	03709102 	cmneq	r0, #-2147483648	; 0x80000000
    19f8:	5001006e 	andpl	r0, r1, lr, rrx
    19fc:	0000007f 	andeq	r0, r0, pc, ror r0
    1a00:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1a04:	001ebc02 	andseq	fp, lr, r2, lsl #24
    1a08:	155c0100 	ldrbne	r0, [ip, #-256]	; 0x100
    1a0c:	e8000001 	stmda	r0, {r0}
    1a10:	7c800013 	stcvc	0, cr0, [r0], {19}
    1a14:	01000000 	mrseq	r0, (UNDEF: 0)
    1a18:	0002b19c 	muleq	r2, ip, r1
    1a1c:	74700300 	ldrbtvc	r0, [r0], #-768	; 0x300
    1a20:	5c010072 	stcpl	0, cr0, [r1], {114}	; 0x72
    1a24:	0000008d 	andeq	r0, r0, sp, lsl #1
    1a28:	036c9102 	cmneq	ip, #-2147483648	; 0x80000000
    1a2c:	5c010063 	stcpl	0, cr0, [r1], {99}	; 0x63
    1a30:	0000007f 	andeq	r0, r0, pc, ror r0
    1a34:	04689102 	strbteq	r9, [r8], #-258	; 0x102
    1a38:	5e010073 	mcrpl	0, 0, r0, cr1, cr3, {3}
    1a3c:	00000098 	muleq	r0, r8, r0
    1a40:	00779102 	rsbseq	r9, r7, r2, lsl #2
    1a44:	001f3a0b 	andseq	r3, pc, fp, lsl #20
    1a48:	15650100 	strbne	r0, [r5, #-256]!	; 0x100
    1a4c:	64000001 	strvs	r0, [r0], #-1
    1a50:	74800014 	strvc	r0, [r0], #20
    1a54:	01000000 	mrseq	r0, (UNDEF: 0)
    1a58:	7470039c 	ldrbtvc	r0, [r0], #-924	; 0x39c
    1a5c:	65010072 	strvs	r0, [r1, #-114]	; 0x72
    1a60:	0000008d 	andeq	r0, r0, sp, lsl #1
    1a64:	036c9102 	cmneq	ip, #-2147483648	; 0x80000000
    1a68:	65010063 	strvs	r0, [r1, #-99]	; 0x63
    1a6c:	0000007f 	andeq	r0, r0, pc, ror r0
    1a70:	0c689102 	stfeqp	f1, [r8], #-8
    1a74:	0000020b 	andeq	r0, r0, fp, lsl #4
    1a78:	01156701 	tsteq	r5, r1, lsl #14
    1a7c:	91020000 	mrsls	r0, (UNDEF: 2)
    1a80:	00730474 	rsbseq	r0, r3, r4, ror r4
    1a84:	00986801 	addseq	r6, r8, r1, lsl #16
    1a88:	91020000 	mrsls	r0, (UNDEF: 2)
    1a8c:	Address 0x0000000000001a8c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  18:	0b3b0b3a 	bleq	ec2d08 <_start-0x7f13d2f8>
  1c:	00001349 	andeq	r1, r0, r9, asr #6
  20:	0b002403 	bleq	9034 <_start-0x7fff6fcc>
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  28:	0400000e 	streq	r0, [r0], #-14
  2c:	0b0b0024 	bleq	2c00c4 <_start-0x7fd3ff3c>
  30:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  34:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  38:	03193f01 	tsteq	r9, #1, 30
  3c:	3b0b3a0e 	blcc	2ce87c <_start-0x7fd31784>
  40:	1119270b 	tstne	r9, fp, lsl #14
  44:	40061201 	andmi	r1, r6, r1, lsl #4
  48:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  4c:	00001301 	andeq	r1, r0, r1, lsl #6
  50:	03003406 	movweq	r3, #1030	; 0x406
  54:	3b0b3a08 	blcc	2ce87c <_start-0x7fd31784>
  58:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  5c:	07000018 	smladeq	r0, r8, r0, r0
  60:	13490035 	movtne	r0, #36917	; 0x9035
  64:	01000000 	mrseq	r0, (UNDEF: 0)
  68:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
  6c:	0e030b13 	vmoveq.32	d3[0], r0
  70:	01110e1b 	tsteq	r1, fp, lsl lr
  74:	17100612 			; <UNDEFINED> instruction: 0x17100612
  78:	16020000 	strne	r0, [r2], -r0
  7c:	3a0e0300 	bcc	380c84 <_start-0x7fc7f37c>
  80:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  84:	03000013 	movweq	r0, #19
  88:	0b0b0024 	bleq	2c0120 <_start-0x7fd3fee0>
  8c:	0e030b3e 	vmoveq.16	d3[0], r0
  90:	24040000 	strcs	r0, [r4], #-0
  94:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  98:	0008030b 	andeq	r0, r8, fp, lsl #6
  9c:	01040500 	tsteq	r4, r0, lsl #10
  a0:	0b3a0b0b 	bleq	e82cd4 <_start-0x7f17d32c>
  a4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  a8:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
  ac:	1c0e0300 	stcne	3, cr0, [lr], {-0}
  b0:	0700000d 	streq	r0, [r0, -sp]
  b4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  b8:	0b3a0e03 	bleq	e838cc <_start-0x7f17c734>
  bc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  c4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  c8:	00130119 	andseq	r0, r3, r9, lsl r1
  cc:	00050800 	andeq	r0, r5, r0, lsl #16
  d0:	0b3a0e03 	bleq	e838e4 <_start-0x7f17c71c>
  d4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  d8:	00001802 	andeq	r1, r0, r2, lsl #16
  dc:	03000509 	movweq	r0, #1289	; 0x509
  e0:	3b0b3a08 	blcc	2ce908 <_start-0x7fd316f8>
  e4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  e8:	0a000018 	beq	150 <_start-0x7ffffeb0>
  ec:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  f0:	0b3a0e03 	bleq	e83904 <_start-0x7f17c6fc>
  f4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  f8:	01111349 	tsteq	r1, r9, asr #6
  fc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 100:	01194297 			; <UNDEFINED> instruction: 0x01194297
 104:	0b000013 	bleq	158 <_start-0x7ffffea8>
 108:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 10c:	0b3a0e03 	bleq	e83920 <_start-0x7f17c6e0>
 110:	01110b3b 	tsteq	r1, fp, lsr fp
 114:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 118:	00194296 	mulseq	r9, r6, r2
 11c:	00340c00 	eorseq	r0, r4, r0, lsl #24
 120:	0b3a0e03 	bleq	e83934 <_start-0x7f17c6cc>
 124:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 128:	00001802 	andeq	r1, r0, r2, lsl #16
 12c:	01110100 	tsteq	r1, r0, lsl #2
 130:	0b130e25 	bleq	4c39cc <_start-0x7fb3c634>
 134:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 138:	06120111 			; <UNDEFINED> instruction: 0x06120111
 13c:	00001710 	andeq	r1, r0, r0, lsl r7
 140:	03001602 	movweq	r1, #1538	; 0x602
 144:	3b0b3a0e 	blcc	2ce984 <_start-0x7fd3167c>
 148:	0013490b 	andseq	r4, r3, fp, lsl #18
 14c:	00240300 	eoreq	r0, r4, r0, lsl #6
 150:	0b3e0b0b 	bleq	f82d84 <_start-0x7f07d27c>
 154:	00000e03 	andeq	r0, r0, r3, lsl #28
 158:	0b002404 	bleq	9170 <_start-0x7fff6e90>
 15c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 160:	05000008 	streq	r0, [r0, #-8]
 164:	0b0b0104 	bleq	2c057c <_start-0x7fd3fa84>
 168:	0b3b0b3a 	bleq	ec2e58 <_start-0x7f13d1a8>
 16c:	00001301 	andeq	r1, r0, r1, lsl #6
 170:	03002806 	movweq	r2, #2054	; 0x806
 174:	000d1c0e 	andeq	r1, sp, lr, lsl #24
 178:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
 17c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
 180:	0b3b0b3a 	bleq	ec2e70 <_start-0x7f13d190>
 184:	01111927 	tsteq	r1, r7, lsr #18
 188:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 18c:	01194297 			; <UNDEFINED> instruction: 0x01194297
 190:	08000013 	stmdaeq	r0, {r0, r1, r4}
 194:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 198:	0b3b0b3a 	bleq	ec2e88 <_start-0x7f13d178>
 19c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 1a0:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
 1a4:	03193f01 	tsteq	r9, #1, 30
 1a8:	3b0b3a0e 	blcc	2ce9e8 <_start-0x7fd31618>
 1ac:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 1b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 1b4:	97184006 	ldrls	r4, [r8, -r6]
 1b8:	13011942 	movwne	r1, #6466	; 0x1942
 1bc:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
 1c0:	03193f01 	tsteq	r9, #1, 30
 1c4:	3b0b3a0e 	blcc	2cea04 <_start-0x7fd315fc>
 1c8:	1119270b 	tstne	r9, fp, lsl #14
 1cc:	40061201 	andmi	r1, r6, r1, lsl #4
 1d0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 1d4:	00001301 	andeq	r1, r0, r1, lsl #6
 1d8:	0300340b 	movweq	r3, #1035	; 0x40b
 1dc:	3b0b3a0e 	blcc	2cea1c <_start-0x7fd315e4>
 1e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1e4:	0c000018 	stceq	0, cr0, [r0], {24}
 1e8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 1ec:	0b3a0e03 	bleq	e83a00 <_start-0x7f17c600>
 1f0:	01110b3b 	tsteq	r1, fp, lsr fp
 1f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1f8:	00194296 	mulseq	r9, r6, r2
 1fc:	11010000 	mrsne	r0, (UNDEF: 1)
 200:	130e2501 	movwne	r2, #58625	; 0xe501
 204:	1b0e030b 	blne	380e38 <_start-0x7fc7f1c8>
 208:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 20c:	00171006 	andseq	r1, r7, r6
 210:	01130200 	tsteq	r3, r0, lsl #4
 214:	0b3a0b0b 	bleq	e82e48 <_start-0x7f17d1b8>
 218:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 21c:	0d030000 	stceq	0, cr0, [r3, #-0]
 220:	3a0e0300 	bcc	380e28 <_start-0x7fc7f1d8>
 224:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 228:	000b3813 	andeq	r3, fp, r3, lsl r8
 22c:	000d0400 	andeq	r0, sp, r0, lsl #8
 230:	0b3a0803 	bleq	e82244 <_start-0x7f17ddbc>
 234:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 238:	00000b38 	andeq	r0, r0, r8, lsr fp
 23c:	0b002405 	bleq	9258 <_start-0x7fff6da8>
 240:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 244:	06000008 	streq	r0, [r0], -r8
 248:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 24c:	0b3b0b3a 	bleq	ec2f3c <_start-0x7f13d0c4>
 250:	00001349 	andeq	r1, r0, r9, asr #6
 254:	3f012e07 	svccc	0x00012e07
 258:	3a0e0319 	bcc	380ec4 <_start-0x7fc7f13c>
 25c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 260:	11134919 	tstne	r3, r9, lsl r9
 264:	40061201 	andmi	r1, r6, r1, lsl #4
 268:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 26c:	00001301 	andeq	r1, r0, r1, lsl #6
 270:	03000508 	movweq	r0, #1288	; 0x508
 274:	3b0b3a08 	blcc	2cea9c <_start-0x7fd31564>
 278:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 27c:	09000018 	stmdbeq	r0, {r3, r4}
 280:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 284:	0b3b0b3a 	bleq	ec2f74 <_start-0x7f13d08c>
 288:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 28c:	340a0000 	strcc	r0, [sl], #-0
 290:	3a080300 	bcc	200e98 <_start-0x7fdff168>
 294:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 298:	00180213 	andseq	r0, r8, r3, lsl r2
 29c:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
 2a0:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
 2a4:	0b3b0b3a 	bleq	ec2f94 <_start-0x7f13d06c>
 2a8:	13491927 	movtne	r1, #39207	; 0x9927
 2ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2b0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 2b4:	00000019 	andeq	r0, r0, r9, lsl r0
 2b8:	25011101 	strcs	r1, [r1, #-257]	; 0x101
 2bc:	030b130e 	movweq	r1, #45838	; 0xb30e
 2c0:	110e1b0e 	tstne	lr, lr, lsl #22
 2c4:	10061201 	andne	r1, r6, r1, lsl #4
 2c8:	02000017 	andeq	r0, r0, #23
 2cc:	0b0b0024 	bleq	2c0364 <_start-0x7fd3fc9c>
 2d0:	0e030b3e 	vmoveq.16	d3[0], r0
 2d4:	24030000 	strcs	r0, [r3], #-0
 2d8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 2dc:	0008030b 	andeq	r0, r8, fp, lsl #6
 2e0:	01040400 	tsteq	r4, r0, lsl #8
 2e4:	0b3a0b0b 	bleq	e82f18 <_start-0x7f17d0e8>
 2e8:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 2ec:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
 2f0:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2f4:	0600000d 	streq	r0, [r0], -sp
 2f8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 2fc:	0b3b0b3a 	bleq	ec2fec <_start-0x7f13d014>
 300:	00001349 	andeq	r1, r0, r9, asr #6
 304:	0b000f07 	bleq	3f28 <_start-0x7fffc0d8>
 308:	0013490b 	andseq	r4, r3, fp, lsl #18
 30c:	01150800 	tsteq	r5, r0, lsl #16
 310:	13011927 	movwne	r1, #6439	; 0x1927
 314:	05090000 	streq	r0, [r9, #-0]
 318:	00134900 	andseq	r4, r3, r0, lsl #18
 31c:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
 320:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
 324:	0b3b0b3a 	bleq	ec3014 <_start-0x7f13cfec>
 328:	01111927 	tsteq	r1, r7, lsr #18
 32c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 330:	01194296 			; <UNDEFINED> instruction: 0x01194296
 334:	0b000013 	bleq	388 <_start-0x7ffffc78>
 338:	08030005 	stmdaeq	r3, {r0, r2}
 33c:	0b3b0b3a 	bleq	ec302c <_start-0x7f13cfd4>
 340:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 344:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
 348:	0d000000 	stceq	0, cr0, [r0, #-0]
 34c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 350:	0b3b0b3a 	bleq	ec3040 <_start-0x7f13cfc0>
 354:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 358:	260e0000 	strcs	r0, [lr], -r0
 35c:	00134900 	andseq	r4, r3, r0, lsl #18
 360:	01130f00 	tsteq	r3, r0, lsl #30
 364:	0b0b0e03 	bleq	2c3b78 <_start-0x7fd3c488>
 368:	0b3b0b3a 	bleq	ec3058 <_start-0x7f13cfa8>
 36c:	00001301 	andeq	r1, r0, r1, lsl #6
 370:	03000d10 	movweq	r0, #3344	; 0xd10
 374:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
 378:	0019340b 	andseq	r3, r9, fp, lsl #8
 37c:	000f1100 	andeq	r1, pc, r0, lsl #2
 380:	00000b0b 	andeq	r0, r0, fp, lsl #22
 384:	3f002e12 	svccc	0x00002e12
 388:	3a0e0319 	bcc	380ff4 <_start-0x7fc7f00c>
 38c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 390:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 394:	96184006 	ldrls	r4, [r8], -r6
 398:	00001942 	andeq	r1, r0, r2, asr #18
 39c:	03003413 	movweq	r3, #1043	; 0x413
 3a0:	3b0b3a0e 	blcc	2cebe0 <_start-0x7fd31420>
 3a4:	3f13490b 	svccc	0x0013490b
 3a8:	00193c19 	andseq	r3, r9, r9, lsl ip
 3ac:	11010000 	mrsne	r0, (UNDEF: 1)
 3b0:	130e2501 	movwne	r2, #58625	; 0xe501
 3b4:	1b0e030b 	blne	380fe8 <_start-0x7fc7f018>
 3b8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 3bc:	00171006 	andseq	r1, r7, r6
 3c0:	00160200 	andseq	r0, r6, r0, lsl #4
 3c4:	0b3a0e03 	bleq	e83bd8 <_start-0x7f17c428>
 3c8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3cc:	24030000 	strcs	r0, [r3], #-0
 3d0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 3d4:	000e030b 	andeq	r0, lr, fp, lsl #6
 3d8:	00240400 	eoreq	r0, r4, r0, lsl #8
 3dc:	0b3e0b0b 	bleq	f83010 <_start-0x7f07cff0>
 3e0:	00000803 	andeq	r0, r0, r3, lsl #16
 3e4:	0b010405 	bleq	41400 <_start-0x7ffbec00>
 3e8:	3b0b3a0b 	blcc	2cec1c <_start-0x7fd313e4>
 3ec:	0013010b 	andseq	r0, r3, fp, lsl #2
 3f0:	00280600 	eoreq	r0, r8, r0, lsl #12
 3f4:	0d1c0803 	ldceq	8, cr0, [ip, #-12]
 3f8:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
 3fc:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 400:	0800000d 	stmdaeq	r0, {r0, r2, r3}
 404:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 408:	0b3a0e03 	bleq	e83c1c <_start-0x7f17c3e4>
 40c:	01110b3b 	tsteq	r1, fp, lsr fp
 410:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 414:	01194296 			; <UNDEFINED> instruction: 0x01194296
 418:	09000013 	stmdbeq	r0, {r0, r1, r4}
 41c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 420:	0b3b0b3a 	bleq	ec3110 <_start-0x7f13cef0>
 424:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 428:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
 42c:	03193f01 	tsteq	r9, #1, 30
 430:	3b0b3a0e 	blcc	2cec70 <_start-0x7fd31390>
 434:	1119270b 	tstne	r9, fp, lsl #14
 438:	40061201 	andmi	r1, r6, r1, lsl #4
 43c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 440:	00001301 	andeq	r1, r0, r1, lsl #6
 444:	0300050b 	movweq	r0, #1291	; 0x50b
 448:	3b0b3a0e 	blcc	2cec88 <_start-0x7fd31378>
 44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 450:	0c000018 	stceq	0, cr0, [r0], {24}
 454:	08030034 	stmdaeq	r3, {r2, r4, r5}
 458:	0b3b0b3a 	bleq	ec3148 <_start-0x7f13ceb8>
 45c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 460:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
 464:	03193f01 	tsteq	r9, #1, 30
 468:	3b0b3a0e 	blcc	2ceca8 <_start-0x7fd31358>
 46c:	1119270b 	tstne	r9, fp, lsl #14
 470:	40061201 	andmi	r1, r6, r1, lsl #4
 474:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 478:	00001301 	andeq	r1, r0, r1, lsl #6
 47c:	0300050e 	movweq	r0, #1294	; 0x50e
 480:	3b0b3a08 	blcc	2ceca8 <_start-0x7fd31358>
 484:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 488:	0f000018 	svceq	0x00000018
 48c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 490:	0b3a0e03 	bleq	e83ca4 <_start-0x7f17c35c>
 494:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 498:	06120111 			; <UNDEFINED> instruction: 0x06120111
 49c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 4a0:	10000019 	andne	r0, r0, r9, lsl r0
 4a4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 4a8:	0b3a0e03 	bleq	e83cbc <_start-0x7f17c344>
 4ac:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 4b0:	01111349 	tsteq	r1, r9, asr #6
 4b4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 4b8:	01194296 			; <UNDEFINED> instruction: 0x01194296
 4bc:	11000013 	tstne	r0, r3, lsl r0
 4c0:	0111010b 	tsteq	r1, fp, lsl #2
 4c4:	00000612 	andeq	r0, r0, r2, lsl r6
 4c8:	0b000f12 	bleq	4118 <_start-0x7fffbee8>
 4cc:	0013490b 	andseq	r4, r3, fp, lsl #18
 4d0:	00341300 	eorseq	r1, r4, r0, lsl #6
 4d4:	0b3a0e03 	bleq	e83ce8 <_start-0x7f17c318>
 4d8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4dc:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 4e0:	01000000 	mrseq	r0, (UNDEF: 0)
 4e4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 4e8:	0e030b13 	vmoveq.32	d3[0], r0
 4ec:	01110e1b 	tsteq	r1, fp, lsl lr
 4f0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 4f4:	16020000 	strne	r0, [r2], -r0
 4f8:	3a0e0300 	bcc	381100 <_start-0x7fc7ef00>
 4fc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 500:	03000013 	movweq	r0, #19
 504:	0b0b000f 	bleq	2c0548 <_start-0x7fd3fab8>
 508:	00001349 	andeq	r1, r0, r9, asr #6
 50c:	27011504 	strcs	r1, [r1, -r4, lsl #10]
 510:	00130119 	andseq	r0, r3, r9, lsl r1
 514:	00050500 	andeq	r0, r5, r0, lsl #10
 518:	00001349 	andeq	r1, r0, r9, asr #6
 51c:	0b002406 	bleq	953c <_start-0x7fff6ac4>
 520:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 524:	0700000e 	streq	r0, [r0, -lr]
 528:	0e03012e 	adfeqsp	f0, f3, #0.5
 52c:	0b3b0b3a 	bleq	ec321c <_start-0x7f13cde4>
 530:	01111927 	tsteq	r1, r7, lsr #18
 534:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 538:	01194296 			; <UNDEFINED> instruction: 0x01194296
 53c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 540:	08030005 	stmdaeq	r3, {r0, r2}
 544:	0b3b0b3a 	bleq	ec3234 <_start-0x7f13cdcc>
 548:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 54c:	05090000 	streq	r0, [r9, #-0]
 550:	3a0e0300 	bcc	381158 <_start-0x7fc7eea8>
 554:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 558:	00180213 	andseq	r0, r8, r3, lsl r2
 55c:	00340a00 	eorseq	r0, r4, r0, lsl #20
 560:	0b3a0803 	bleq	e82574 <_start-0x7f17da8c>
 564:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 568:	00001802 	andeq	r1, r0, r2, lsl #16
 56c:	0300340b 	movweq	r3, #1035	; 0x40b
 570:	3b0b3a0e 	blcc	2cedb0 <_start-0x7fd31250>
 574:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 578:	0c000018 	stceq	0, cr0, [r0], {24}
 57c:	13490026 	movtne	r0, #36902	; 0x9026
 580:	240d0000 	strcs	r0, [sp], #-0
 584:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 588:	0008030b 	andeq	r0, r8, fp, lsl #6
 58c:	010b0e00 	tsteq	fp, r0, lsl #28
 590:	06120111 			; <UNDEFINED> instruction: 0x06120111
 594:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
 598:	03193f01 	tsteq	r9, #1, 30
 59c:	3b0b3a0e 	blcc	2ceddc <_start-0x7fd31224>
 5a0:	1119270b 	tstne	r9, fp, lsl #14
 5a4:	40061201 	andmi	r1, r6, r1, lsl #4
 5a8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 5ac:	00001301 	andeq	r1, r0, r1, lsl #6
 5b0:	03000a10 	movweq	r0, #2576	; 0xa10
 5b4:	3b0b3a0e 	blcc	2cedf4 <_start-0x7fd3120c>
 5b8:	0001110b 	andeq	r1, r1, fp, lsl #2
 5bc:	010b1100 	mrseq	r1, (UNDEF: 27)
 5c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 5c4:	00001301 	andeq	r1, r0, r1, lsl #6
 5c8:	03011312 	movweq	r1, #4882	; 0x1312
 5cc:	3a0b0b0e 	bcc	2c320c <_start-0x7fd3cdf4>
 5d0:	010b3b0b 	tsteq	fp, fp, lsl #22
 5d4:	13000013 	movwne	r0, #19
 5d8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 5dc:	0b381349 	bleq	e05308 <_start-0x7f1facf8>
 5e0:	00001934 	andeq	r1, r0, r4, lsr r9
 5e4:	0b000f14 	bleq	423c <_start-0x7fffbdc4>
 5e8:	0000000b 	andeq	r0, r0, fp
 5ec:	25011101 	strcs	r1, [r1, #-257]	; 0x101
 5f0:	030b130e 	movweq	r1, #45838	; 0xb30e
 5f4:	110e1b0e 	tstne	lr, lr, lsl #22
 5f8:	10061201 	andne	r1, r6, r1, lsl #4
 5fc:	02000017 	andeq	r0, r0, #23
 600:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 604:	0b3a0e03 	bleq	e83e18 <_start-0x7f17c1e8>
 608:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 60c:	01111349 	tsteq	r1, r9, asr #6
 610:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 614:	01194297 			; <UNDEFINED> instruction: 0x01194297
 618:	03000013 	movweq	r0, #19
 61c:	08030005 	stmdaeq	r3, {r0, r2}
 620:	0b3b0b3a 	bleq	ec3310 <_start-0x7f13ccf0>
 624:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 628:	34040000 	strcc	r0, [r4], #-0
 62c:	3a080300 	bcc	201234 <_start-0x7fdfedcc>
 630:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 634:	00180213 	andseq	r0, r8, r3, lsl r2
 638:	00240500 	eoreq	r0, r4, r0, lsl #10
 63c:	0b3e0b0b 	bleq	f83270 <_start-0x7f07cd90>
 640:	00000803 	andeq	r0, r0, r3, lsl #16
 644:	0b000f06 	bleq	4264 <_start-0x7fffbd9c>
 648:	0013490b 	andseq	r4, r3, fp, lsl #18
 64c:	00260700 	eoreq	r0, r6, r0, lsl #14
 650:	26080000 	strcs	r0, [r8], -r0
 654:	00134900 	andseq	r4, r3, r0, lsl #18
 658:	00240900 	eoreq	r0, r4, r0, lsl #18
 65c:	0b3e0b0b 	bleq	f83290 <_start-0x7f07cd70>
 660:	00000e03 	andeq	r0, r0, r3, lsl #28
 664:	3f012e0a 	svccc	0x00012e0a
 668:	3a0e0319 	bcc	3812d4 <_start-0x7fc7ed2c>
 66c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 670:	11134919 	tstne	r3, r9, lsl r9
 674:	40061201 	andmi	r1, r6, r1, lsl #4
 678:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 67c:	00001301 	andeq	r1, r0, r1, lsl #6
 680:	3f012e0b 	svccc	0x00012e0b
 684:	3a0e0319 	bcc	3812f0 <_start-0x7fc7ed10>
 688:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 68c:	11134919 	tstne	r3, r9, lsl r9
 690:	40061201 	andmi	r1, r6, r1, lsl #4
 694:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 698:	340c0000 	strcc	r0, [ip], #-0
 69c:	3a0e0300 	bcc	3812a4 <_start-0x7fc7ed5c>
 6a0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6a4:	00180213 	andseq	r0, r8, r3, lsl r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	8000003c 	andhi	r0, r0, ip, lsr r0
  14:	00000068 	andeq	r0, r0, r8, rrx
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00830002 	addeq	r0, r3, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	800000a4 	andhi	r0, r0, r4, lsr #1
  34:	0000014c 	andeq	r0, r0, ip, asr #2
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	04f30002 	ldrbteq	r0, [r3], #2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	800001f0 	strdhi	r0, [r0], -r0	; <UNPREDICTABLE>
  54:	000000ec 	andeq	r0, r0, ip, ror #1
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	0bf90002 	bleq	ffe40074 <value+0x7fe3eb4a>
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	800002dc 	ldrdhi	r0, [r0], -ip
  74:	000000e4 	andeq	r0, r0, r4, ror #1
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	0cde0002 	ldcleq	0, cr0, [lr], {2}
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	800003c0 	andhi	r0, r0, r0, asr #7
  94:	000000fc 	strdeq	r0, [r0], -ip
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	0e140002 	cdpeq	0, 1, cr0, cr4, cr2, {0}
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	800004c0 	andhi	r0, r0, r0, asr #9
  b4:	0000041c 	andeq	r0, r0, ip, lsl r4
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	14fe0002 	ldrbtne	r0, [lr], #2
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	800008dc 	ldrdhi	r0, [r0], -ip
  d4:	0000069c 	muleq	r0, ip, r6
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	17930002 	ldrne	r0, [r3, r2]
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	80000f78 	andhi	r0, r0, r8, ror pc
  f4:	00000560 	andeq	r0, r0, r0, ror #10
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000041 	andeq	r0, r0, r1, asr #32
   4:	00280002 	eoreq	r0, r8, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	00010000 	andeq	r0, r1, r0
  1c:	4f495047 	svcmi	0x00495047
  20:	0000632e 	andeq	r6, r0, lr, lsr #6
  24:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
  28:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
  2c:	00000068 	andeq	r0, r0, r8, rrx
  30:	05000000 	streq	r0, [r0, #-0]
  34:	00003c02 	andeq	r3, r0, r2, lsl #24
  38:	9f6b1580 	svcls	0x006b1580
  3c:	83846783 	orrhi	r6, r4, #34340864	; 0x20c0000
  40:	01000602 	tsteq	r0, r2, lsl #12
  44:	00005c01 	andeq	r5, r0, r1, lsl #24
  48:	34000200 	strcc	r0, [r0], #-512	; 0x200
  4c:	02000000 	andeq	r0, r0, #0
  50:	0d0efb01 	vstreq	d15, [lr, #-4]
  54:	01010100 	mrseq	r0, (UNDEF: 17)
  58:	00000001 	andeq	r0, r0, r1
  5c:	01000001 	tsteq	r0, r1
  60:	6f6c6300 	svcvs	0x006c6300
  64:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
  68:	00000000 	andeq	r0, r0, r0
  6c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
  70:	00682e73 	rsbeq	r2, r8, r3, ror lr
  74:	63000000 	movwvs	r0, #0
  78:	6b636f6c 	blvs	18dbe30 <_start-0x7e7241d0>
  7c:	0000682e 	andeq	r6, r0, lr, lsr #16
  80:	00000000 	andeq	r0, r0, r0
  84:	00a40205 	adceq	r0, r4, r5, lsl #4
  88:	d8158000 	ldmdale	r5, {pc}
  8c:	83bb69bb 			; <UNDEFINED> instruction: 0x83bb69bb
  90:	679f6a85 	ldrvs	r6, [pc, r5, lsl #21]
  94:	679fa167 	ldrvs	sl, [pc, r7, ror #2]
  98:	679fa167 	ldrvs	sl, [pc, r7, ror #2]
  9c:	9e0c0367 	cdpls	3, 0, cr0, cr12, cr7, {3}
  a0:	01000402 	tsteq	r0, r2, lsl #8
  a4:	00006801 	andeq	r6, r0, r1, lsl #16
  a8:	46000200 	strmi	r0, [r0], -r0, lsl #4
  ac:	02000000 	andeq	r0, r0, #0
  b0:	0d0efb01 	vstreq	d15, [lr, #-4]
  b4:	01010100 	mrseq	r0, (UNDEF: 17)
  b8:	00000001 	andeq	r0, r0, r1
  bc:	01000001 	tsteq	r0, r1
  c0:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
  c4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; fffffefc <value+0x7fffe9d2>
  c8:	646f6d5f 	strbtvs	r6, [pc], #-3423	; d0 <_start-0x7fffff30>
  cc:	2e656c75 	mcrcs	12, 3, r6, cr5, cr5, {3}
  d0:	00000063 	andeq	r0, r0, r3, rrx
  d4:	70797400 	rsbsvc	r7, r9, r0, lsl #8
  d8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
  dc:	00000000 	andeq	r0, r0, r0
  e0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xf63
  e4:	5f6c6f72 	svcpl	0x006c6f72
  e8:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xf6d
  ec:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
  f0:	00000000 	andeq	r0, r0, r0
  f4:	02050000 	andeq	r0, r5, #0
  f8:	800001f0 	strdhi	r0, [r0], -r0	; <UNPREDICTABLE>
  fc:	69bbbc15 	ldmibvs	fp!, {r0, r2, r4, sl, fp, ip, sp, pc}
 100:	bb85839f 	bllt	fe160f84 <value+0x7e15fa5a>
 104:	85836767 	strhi	r6, [r3, #1895]	; 0x767
 108:	6b674c52 	blvs	19d3258 <_start-0x7e62cda8>
 10c:	01000202 	tsteq	r0, r2, lsl #4
 110:	00004001 	andeq	r4, r0, r1
 114:	1c000200 	sfmne	f0, 4, [r0], {-0}
 118:	02000000 	andeq	r0, r0, #0
 11c:	0d0efb01 	vstreq	d15, [lr, #-4]
 120:	01010100 	mrseq	r0, (UNDEF: 17)
 124:	00000001 	andeq	r0, r0, r1
 128:	01000001 	tsteq	r0, r1
 12c:	76696400 	strbtvc	r6, [r9], -r0, lsl #8
 130:	0000632e 	andeq	r6, r0, lr, lsr #6
 134:	00000000 	andeq	r0, r0, r0
 138:	02dc0205 	sbcseq	r0, ip, #1342177280	; 0x50000000
 13c:	bc148000 	ldclt	0, cr8, [r4], {-0}
 140:	64832f4c 	strvs	r2, [r3], #3916	; 0xf4c
 144:	9f4c4b87 	svcls	0x004c4b87
 148:	2f4c9f84 	svccs	0x004c9f84
 14c:	2f876483 	svccs	0x00876483
 150:	01000802 	tsteq	r0, r2, lsl #16
 154:	0000a901 	andeq	sl, r0, r1, lsl #18
 158:	71000200 	mrsvc	r0, R8_usr
 15c:	02000000 	andeq	r0, r0, #0
 160:	0d0efb01 	vstreq	d15, [lr, #-4]
 164:	01010100 	mrseq	r0, (UNDEF: 17)
 168:	00000001 	andeq	r0, r0, r1
 16c:	01000001 	tsteq	r0, r1
 170:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 174:	6e696d2f 	cdpvs	13, 6, cr6, cr9, cr15, {1}
 178:	6c756d69 	ldclvs	13, cr6, [r5], #-420	; 0xfffffe5c
 17c:	6c5f635f 	mrrcvs	3, 5, r6, pc, cr15	; <UNPREDICTABLE>
 180:	6d2f6269 	sfmvs	f6, 4, [pc, #-420]!	; ffffffe4 <value+0x7fffeaba>
 184:	2f637369 	svccs	0x00637369
 188:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 18c:	00656475 	rsbeq	r6, r5, r5, ror r4
 190:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 194:	00632e6e 	rsbeq	r2, r3, lr, ror #28
 198:	75000000 	strvc	r0, [r0, #-0]
 19c:	5f747261 	svcpl	0x00747261
 1a0:	736e6f63 	cmnvc	lr, #396	; 0x18c
 1a4:	5f656c6f 	svcpl	0x00656c6f
 1a8:	64616568 	strbtvs	r6, [r1], #-1384	; 0x568
 1ac:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	5f737973 	svcpl	0x00737973
 1b8:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
 1bc:	00010068 	andeq	r0, r1, r8, rrx
 1c0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xc00
 1c4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
 1c8:	003e6e69 	eorseq	r6, lr, r9, ror #28
 1cc:	00000000 	andeq	r0, r0, r0
 1d0:	c0020500 	andgt	r0, r2, r0, lsl #10
 1d4:	03800003 	orreq	r0, r0, #3
 1d8:	6883010a 	stmvs	r3, {r1, r3, r8}
 1dc:	4b85844b 	blmi	fe161310 <value+0x7e15fde6>
 1e0:	674bbb2f 	strbvs	fp, [fp, -pc, lsr #22]
 1e4:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
 1e8:	04020067 	streq	r0, [r2], #-103	; 0x67
 1ec:	0200d801 	andeq	sp, r0, #65536	; 0x10000
 1f0:	00670104 	rsbeq	r0, r7, r4, lsl #2
 1f4:	83010402 	movwhi	r0, #5122	; 0x1402
 1f8:	01040200 	mrseq	r0, R12_usr
 1fc:	0002024b 	andeq	r0, r2, fp, asr #4
 200:	00ef0101 	rsceq	r0, pc, r1, lsl #2
 204:	00020000 	andeq	r0, r2, r0
 208:	0000005e 	andeq	r0, r0, lr, asr r0
 20c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 210:	0101000d 	tsteq	r1, sp
 214:	00000101 	andeq	r0, r0, r1, lsl #2
 218:	00000100 	andeq	r0, r0, r0, lsl #2
 21c:	61750001 	cmnvs	r5, r1
 220:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 224:	6f736e6f 	svcvs	0x00736e6f
 228:	632e656c 			; <UNDEFINED> instruction: 0x632e656c
 22c:	00000000 	andeq	r0, r0, r0
 230:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
 234:	00682e73 	rsbeq	r2, r8, r3, ror lr
 238:	75000000 	strvc	r0, [r0, #-0]
 23c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
 240:	00000068 	andeq	r0, r0, r8, rrx
 244:	72617500 	rsbvc	r7, r1, #0, 10
 248:	6f635f74 	svcvs	0x00635f74
 24c:	6c6f736e 	stclvs	3, cr7, [pc], #-440	; 9c <_start-0x7fffff64>
 250:	65685f65 	strbvs	r5, [r8, #-3941]!	; 0xf65
 254:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 258:	0000682e 	andeq	r6, r0, lr, lsr #16
 25c:	6c630000 	stclvs	0, cr0, [r3], #-0
 260:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
 264:	00000068 	andeq	r0, r0, r8, rrx
 268:	05000000 	streq	r0, [r0, #-0]
 26c:	0004c002 	andeq	ip, r4, r2
 270:	67671a80 	strbvs	r1, [r7, -r0, lsl #21]!
 274:	0402009f 	streq	r0, [r2], #-159	; 0x9f
 278:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 27c:	838450f4 	orrhi	r5, r4, #244	; 0xf4
 280:	02008367 	andeq	r8, r0, #-1677721599	; 0x9c000001
 284:	2e060104 	adfcss	f0, f6, f4
 288:	679fbb06 	ldrvs	fp, [pc, r6, lsl #22]
 28c:	040200a2 	streq	r0, [r2], #-162	; 0xa2
 290:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 294:	848383bd 	strhi	r8, [r3], #957	; 0x3bd
 298:	838383f3 	orrhi	r8, r3, #-872415229	; 0xcc000003
 29c:	3d088a83 	vstrcc	s16, [r8, #-524]	; 0xfffffdf4
 2a0:	f49f8383 			; <UNDEFINED> instruction: 0xf49f8383
 2a4:	08a18483 	stmiaeq	r1!, {r0, r1, r7, sl, pc}
 2a8:	4b313195 	blmi	c4c904 <_start-0x7f3b36fc>
 2ac:	4c67a04d 	stclmi	0, cr10, [r7], #-308	; 0xfffffecc
 2b0:	01040200 	mrseq	r0, R12_usr
 2b4:	d9062e06 	stmdble	r6, {r1, r2, r9, sl, fp, sp}
 2b8:	004b4c83 	subeq	r4, fp, r3, lsl #25
 2bc:	06010402 	streq	r0, [r1], -r2, lsl #8
 2c0:	83d7062e 	bicshi	r0, r7, #48234496	; 0x2e00000
 2c4:	00678385 	rsbeq	r8, r7, r5, lsl #7
 2c8:	68030402 	stmdavs	r3, {r1, sl}
 2cc:	03040200 	movweq	r0, #16896	; 0x4200
 2d0:	040200b8 	streq	r0, [r2], #-184	; 0xb8
 2d4:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 2d8:	83692f86 	cmnhi	r9, #536	; 0x218
 2dc:	04020067 	streq	r0, [r2], #-103	; 0x67
 2e0:	02006803 	andeq	r6, r0, #196608	; 0x30000
 2e4:	00b80304 	adcseq	r0, r8, r4, lsl #6
 2e8:	06010402 	streq	r0, [r1], -r2, lsl #8
 2ec:	2f860666 	svccs	0x00860666
 2f0:	01000602 	tsteq	r0, r2, lsl #12
 2f4:	00012e01 	andeq	r2, r1, r1, lsl #28
 2f8:	4a000200 	bmi	b00 <_start-0x7ffff500>
 2fc:	02000000 	andeq	r0, r0, #0
 300:	0d0efb01 	vstreq	d15, [lr, #-4]
 304:	01010100 	mrseq	r0, (UNDEF: 17)
 308:	00000001 	andeq	r0, r0, r1
 30c:	01000001 	tsteq	r0, r1
 310:	72732f2e 	rsbsvc	r2, r3, #46, 30	; 0xb8
 314:	2f2e0063 	svccs	0x002e0063
 318:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 31c:	00656475 	rsbeq	r6, r5, r5, ror r4
 320:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
 324:	2e6b746e 	cdpcs	4, 6, cr7, cr11, cr14, {3}
 328:	00010063 	andeq	r0, r1, r3, rrx
 32c:	73797300 	cmnvc	r9, #0, 6
 330:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
 334:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 338:	623c0000 	eorsvs	r0, ip, #0
 33c:	746c6975 	strbtvc	r6, [ip], #-2421	; 0x975
 340:	3e6e692d 	cdpcc	9, 6, cr6, cr14, cr13, {1}
 344:	00000000 	andeq	r0, r0, r0
 348:	02050000 	andeq	r0, r5, #0
 34c:	800008dc 	ldrdhi	r0, [r0], -ip
 350:	db011503 	blle	45764 <_start-0x7ffba89c>
 354:	4d4b4b67 	vstrmi	d20, [fp, #-412]	; 0xfffffe64
 358:	002f4d67 	eoreq	r4, pc, r7, ror #26
 35c:	06010402 	streq	r0, [r1], -r2, lsl #8
 360:	4b830666 	blmi	fe0c1d00 <value+0x7e0c07d6>
 364:	00839108 	addeq	r9, r3, r8, lsl #2
 368:	06010402 	streq	r0, [r1], -r2, lsl #8
 36c:	04020066 	streq	r0, [r2], #-102	; 0x66
 370:	02004a02 	andeq	r4, r0, #8192	; 0x2000
 374:	062e0404 	strteq	r0, [lr], -r4, lsl #8
 378:	03f36768 	mvnseq	r6, #104, 14	; 0x1a00000
 37c:	0b03f277 	bleq	fcd60 <_start-0x7ff032a0>
 380:	0e03d766 	cdpeq	7, 0, cr13, cr3, cr6, {3}
 384:	4b4bd74a 	blmi	12f60b4 <_start-0x7ed09f4c>
 388:	00f42f4c 	rscseq	r2, r4, ip, asr #30
 38c:	06010402 	streq	r0, [r1], -r2, lsl #8
 390:	04020066 	streq	r0, [r2], #-102	; 0x66
 394:	67066602 	strvs	r6, [r6, -r2, lsl #12]
 398:	0402004b 	streq	r0, [r2], #-75	; 0x4b
 39c:	00660601 	rsbeq	r0, r6, r1, lsl #12
 3a0:	4a020402 	bmi	813b0 <_start-0x7ff7ec50>
 3a4:	04040200 	streq	r0, [r4], #-512	; 0x200
 3a8:	0402002e 	streq	r0, [r2], #-46	; 0x2e
 3ac:	00670604 	rsbeq	r0, r7, r4, lsl #12
 3b0:	83040402 	movwhi	r0, #17410	; 0x4402
 3b4:	0200bb31 	andeq	fp, r0, #50176	; 0xc400
 3b8:	66060104 	strvs	r0, [r6], -r4, lsl #2
 3bc:	02040200 	andeq	r0, r4, #0, 4
 3c0:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 3c4:	03062e04 	movweq	r2, #28164	; 0x6e04
 3c8:	02006675 	andeq	r6, r0, #122683392	; 0x7500000
 3cc:	66060104 	strvs	r0, [r6], -r4, lsl #2
 3d0:	660e0306 	strvs	r0, [lr], -r6, lsl #6
 3d4:	bb4a0e03 	bllt	1283be8 <_start-0x7ed7c418>
 3d8:	2f4e4b4b 	svccs	0x004e4b4b
 3dc:	4bbc8367 	blmi	fef21180 <value+0x7ef1fc56>
 3e0:	b802694b 	stmdalt	r2, {r0, r1, r3, r6, r8, fp, sp, lr}
 3e4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
 3e8:	66060104 	strvs	r0, [r6], -r4, lsl #2
 3ec:	324b6706 	subcc	r6, fp, #1572864	; 0x180000
 3f0:	082c8667 	stmdaeq	ip!, {r0, r1, r2, r5, r6, r9, sl, pc}
 3f4:	67a0365a 	sbfxvs	r3, sl, #12, #1
 3f8:	bc686767 	stcllt	7, cr6, [r8], #-412	; 0xfffffe64
 3fc:	31a0a031 	lsrcc	sl, r1, r0
 400:	4e4b6867 	cdpmi	8, 4, cr6, cr11, cr7, {3}
 404:	a031a0a0 	eorsge	sl, r1, r0, lsr #1
 408:	3184d52f 	orrcc	sp, r4, pc, lsr #10
 40c:	67319fa0 	ldrvs	r9, [r1, -r0, lsr #31]!
 410:	309f6731 	addscc	r6, pc, r1, lsr r7	; <UNPREDICTABLE>
 414:	03664603 	cmneq	r6, #3145728	; 0x300000
 418:	a7032e3d 	smladxge	r3, sp, lr, r2
 41c:	db03667f 	blle	d9e20 <_start-0x7ff261e0>
 420:	04028200 	streq	r8, [r2], #-512	; 0x200
 424:	e9010100 	stmdb	r1, {r8}
 428:	02000000 	andeq	r0, r0, #0
 42c:	00002500 	andeq	r2, r0, r0, lsl #10
 430:	fb010200 	blx	40c3a <_start-0x7ffbf3c6>
 434:	01000d0e 	tsteq	r0, lr, lsl #26
 438:	00010101 	andeq	r0, r1, r1, lsl #2
 43c:	00010000 	andeq	r0, r1, r0
 440:	2f2e0100 	svccs	0x002e0100
 444:	00637273 	rsbeq	r7, r3, r3, ror r2
 448:	72747300 	rsbsvc	r7, r4, #0, 6
 44c:	2e676e69 	cdpcs	14, 6, cr6, cr7, cr9, {3}
 450:	00010063 	andeq	r0, r1, r3, rrx
 454:	05000000 	streq	r0, [r0, #-0]
 458:	000f7802 	andeq	r7, pc, r2, lsl #16
 45c:	010a0380 	smlabbeq	sl, r0, r3, r0
 460:	674b4bbb 			; <UNDEFINED> instruction: 0x674b4bbb
 464:	0402004c 	streq	r0, [r2], #-76	; 0x4c
 468:	002e0602 	eoreq	r0, lr, r2, lsl #12
 46c:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
 470:	bb3f0806 	bllt	fc2490 <_start-0x7f03db70>
 474:	2f4b8384 	svccs	0x004b8384
 478:	852fbc65 	strhi	fp, [pc, #-3173]!	; fffff81b <value+0x7fffe2f1>
 47c:	02004b9f 	andeq	r4, r0, #162816	; 0x27c00
 480:	2e060104 	adfcss	f0, f6, f4
 484:	2f590806 	svccs	0x00590806
 488:	004bbb86 	subeq	fp, fp, r6, lsl #23
 48c:	06020402 	streq	r0, [r2], -r2, lsl #8
 490:	0402002e 	streq	r0, [r2], #-46	; 0x2e
 494:	08069e01 	stmdaeq	r6, {r0, r9, sl, fp, ip, pc}
 498:	649f2f59 	ldrvs	r2, [pc], #3929	; 4a0 <_start-0x7ffffb60>
 49c:	9f842f6a 	svcls	0x00842f6a
 4a0:	04020067 	streq	r0, [r2], #-103	; 0x67
 4a4:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 4a8:	682fae08 	stmdavs	pc!, {r3, r9, sl, fp, sp, pc}	; <UNPREDICTABLE>
 4ac:	020067bb 	andeq	r6, r0, #49020928	; 0x2ec0000
 4b0:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
 4b4:	01040200 	mrseq	r0, R12_usr
 4b8:	ad08069e 	stcge	6, cr0, [r8, #-632]	; 0xfffffd88
 4bc:	6a64f32f 	bvs	193d180 <_start-0x7e6c2e80>
 4c0:	2f9f6930 	svccs	0x009f6930
 4c4:	62672fbb 	rsbvs	r2, r7, #748	; 0x2ec
 4c8:	01040200 	mrseq	r0, R12_usr
 4cc:	88068206 	stmdahi	r6, {r1, r2, r9, pc}
 4d0:	2fbc86bc 	svccs	0x00bc86bc
 4d4:	67672fbb 			; <UNDEFINED> instruction: 0x67672fbb
 4d8:	04020061 	streq	r0, [r2], #-97	; 0x61
 4dc:	00820601 	addeq	r0, r2, r1, lsl #12
 4e0:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
 4e4:	84bb6d06 	ldrthi	r6, [fp], #3334	; 0xd06
 4e8:	64304b9f 	ldrtvs	r4, [r0], #-2975	; 0xb9f
 4ec:	01040200 	mrseq	r0, R12_usr
 4f0:	a2068206 	andge	r8, r6, #1610612736	; 0x60000000
 4f4:	01040200 	mrseq	r0, R12_usr
 4f8:	02008206 	andeq	r8, r0, #1610612736	; 0x60000000
 4fc:	004a0204 	subeq	r0, sl, r4, lsl #4
 500:	06040402 	streq	r0, [r4], -r2, lsl #8
 504:	4b9f842f 	blmi	fe7e15c8 <value+0x7e7e009e>
 508:	4b9f2f4b 	blmi	fe7cc23c <value+0x7e7cad12>
 50c:	022f8763 	eoreq	r8, pc, #25952256	; 0x18c0000
 510:	01010008 	tsteq	r1, r8

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	5f44454c 	svcpl	0x0044454c
       4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xe69
       8:	6f682f00 	svcvs	0x00682f00
       c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
      10:	68736168 	ldmdavs	r3!, {r3, r5, r6, r8, sp, lr}^
      14:	61642f69 	cmnvs	r4, r9, ror #30
      18:	2f616262 	svccs	0x00616262
      1c:	5f424242 	svcpl	0x00424242
      20:	6b726f57 	blvs	1c9bd84 <_start-0x7e36427c>
      24:	2f676e69 	svccs	0x00676e69
      28:	67616542 	strbvs	r6, [r1, -r2, asr #10]!
      2c:	6f42656c 	svcvs	0x0042656c
      30:	6c42656e 	cfstr64vs	mvdx6, [r2], {110}	; 0x6e
      34:	2f6b6361 	svccs	0x006b6361
      38:	54524155 	ldrbpl	r4, [r2], #-341	; 0x155
      3c:	6f687300 	svcvs	0x00687300
      40:	75207472 	strvc	r7, [r0, #-1138]!	; 0x472
      44:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      48:	2064656e 	rsbcs	r6, r4, lr, ror #10
      4c:	00746e69 	rsbseq	r6, r4, r9, ror #28
      50:	746e6975 	strbtvc	r6, [lr], #-2421	; 0x975
      54:	745f3233 	ldrbvc	r3, [pc], #-563	; 5c <_start-0x7fffffa4>
      58:	6f687300 	svcvs	0x00687300
      5c:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
      60:	4700746e 	strmi	r7, [r0, -lr, ror #8]
      64:	2e4f4950 	mcrcs	9, 2, r4, cr15, cr0, {2}
      68:	6e750063 	cdpvs	0, 7, cr0, cr5, cr3, {3}
      6c:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
      70:	63206465 			; <UNDEFINED> instruction: 0x63206465
      74:	00726168 	rsbseq	r6, r2, r8, ror #2
      78:	20554e47 	subscs	r4, r5, r7, asr #28
      7c:	2e342043 	cdpcs	0, 3, cr2, cr4, cr3, {2}
      80:	20332e39 	eorscs	r2, r3, r9, lsr lr
      84:	35313032 	ldrcc	r3, [r1, #-50]!	; 0x32
      88:	39323530 	ldmdbcc	r2!, {r4, r5, r8, sl, ip, sp}
      8c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0x820
      90:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
      94:	5b202965 	blpl	80a630 <_start-0x7f7f59d0>
      98:	2f4d5241 	svccs	0x004d5241
      9c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xd65
      a0:	64656464 	strbtvs	r6, [r5], #-1124	; 0x464
      a4:	395f342d 	ldmdbcc	pc, {r0, r2, r3, r5, sl, ip, sp}^	; <UNPREDICTABLE>
      a8:	6172622d 	cmnvs	r2, sp, lsr #4
      ac:	2068636e 	rsbcs	r6, r8, lr, ror #6
      b0:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
      b4:	6e6f6973 	mcrvs	9, 3, r6, cr15, cr3, {3}
      b8:	37323220 	ldrcc	r3, [r2, -r0, lsr #4]!
      bc:	5d373739 	ldcpl	7, cr3, [r7, #-228]!	; 0xffffff1c
      c0:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      c4:	6e3d7570 	mrcvs	5, 1, r7, cr13, cr0, {3}
      c8:	206e6f65 	rsbcs	r6, lr, r5, ror #30
      cc:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
      d0:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
      d4:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      d8:	64726168 	ldrbtvs	r6, [r2], #-360	; 0x168
      dc:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
      e0:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
      e4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0x26f
      e8:	38612d78 	stmdacc	r1!, {r3, r4, r5, r6, r8, sl, fp, sp}^
      ec:	20672d20 	rsbcs	r2, r7, r0, lsr #26
      f0:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0x32d
      f4:	756e673d 	strbvc	r6, [lr, #-1853]!	; 0x73d
      f8:	43003939 	movwmi	r3, #2361	; 0x939
      fc:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     100:	334c5f52 	movtcc	r5, #53074	; 0xcf52
     104:	4b4c435f 	blmi	1310e88 <_start-0x7ecef178>
     108:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     10c:	43004c52 	movwmi	r4, #3154	; 0xc52
     110:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     114:	434d5f52 	movtmi	r5, #57170	; 0xdf52
     118:	30505341 	subscc	r5, r0, r1, asr #6
     11c:	4b4c435f 	blmi	1310ea0 <_start-0x7ecef160>
     120:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     124:	5f4d4300 	svcpl	0x004d4300
     128:	5f524550 	svcpl	0x00524550
     12c:	30495053 	subcc	r5, r9, r3, asr r0
     130:	4b4c435f 	blmi	1310eb4 <_start-0x7ecef14c>
     134:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     138:	5f4d4300 	svcpl	0x004d4300
     13c:	5f524550 	svcpl	0x00524550
     140:	5348344c 	movtpl	r3, #33868	; 0x844c
     144:	4b4c435f 	blmi	1310ec8 <_start-0x7ecef138>
     148:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     14c:	43004c52 	movwmi	r4, #3154	; 0xc52
     150:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     154:	41555f52 	cmpmi	r5, r2, asr pc
     158:	5f345452 	svcpl	0x00345452
     15c:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     160:	004c5254 	subeq	r5, ip, r4, asr r2
     164:	505f4d43 	subspl	r4, pc, r3, asr #26
     168:	4d5f5245 	lfmmi	f5, 2, [pc, #-276]	; 5c <_start-0x7fffffa4>
     16c:	50534143 	subspl	r4, r3, r3, asr #2
     170:	4c435f31 	mcrrmi	15, 3, r5, r3, cr1
     174:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     178:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     17c:	5245505f 	subpl	r5, r5, #95	; 0x5f
     180:	5450545f 	ldrbpl	r5, [r0], #-1119	; 0x45f
     184:	435f3043 	cmpmi	pc, #67	; 0x43
     188:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     18c:	43004c52 	movwmi	r4, #3154	; 0xc52
     190:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     194:	344c5f52 	strbcc	r5, [ip], #-3922	; 0xf52
     198:	435f5746 	cmpmi	pc, #18350080	; 0x1180000
     19c:	54534b4c 	ldrbpl	r4, [r3], #-2892	; 0xb4c
     1a0:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     1a4:	5f4d4300 	svcpl	0x004d4300
     1a8:	5f435353 	svcpl	0x00435353
     1ac:	46444f4d 	strbmi	r4, [r4], -sp, asr #30
     1b0:	44514552 	ldrbmi	r4, [r1], #-1362	; 0x552
     1b4:	445f5649 	ldrbmi	r5, [pc], #-1609	; 1bc <_start-0x7ffffe44>
     1b8:	5f4c4c50 	svcpl	0x004c4c50
     1bc:	00524444 	subseq	r4, r2, r4, asr #8
     1c0:	505f4d43 	subspl	r4, pc, r3, asr #26
     1c4:	525f5245 	subspl	r5, pc, #1342177284	; 0x50000004
     1c8:	49004745 	stmdbmi	r0, {r0, r2, r6, r8, r9, sl, lr}
     1cc:	5f74696e 	svcpl	0x0074696e
     1d0:	54524155 	ldrbpl	r4, [r2], #-341	; 0x155
     1d4:	6c435f30 	mcrrvs	15, 3, r5, r3, cr0
     1d8:	4d43006b 	stclmi	0, cr0, [r3, #-428]	; 0xfffffe54
     1dc:	5245505f 	subpl	r5, r5, #95	; 0x5f
     1e0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     1e4:	435f3554 	cmpmi	pc, #84, 10	; 0x15000000
     1e8:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     1ec:	43004c52 	movwmi	r4, #3154	; 0xc52
     1f0:	53535f4d 	cmppl	r3, #308	; 0x134
     1f4:	45445f43 	strbmi	r5, [r4, #-3907]	; 0xf43
     1f8:	4d41544c 	cfstrdmi	mvd5, [r1, #-304]	; 0xfffffed0
     1fc:	50455453 	subpl	r5, r5, r3, asr r4
     200:	4c50445f 	cfldrdmi	mvd4, [r0], {95}	; 0x5f
     204:	49445f4c 	stmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     208:	74005053 	strvc	r5, [r0], #-83	; 0x53
     20c:	00706d65 	rsbseq	r6, r0, r5, ror #26
     210:	495f4d43 	ldmdbmi	pc, {r0, r1, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     214:	53454c44 	movtpl	r4, #23620	; 0x5c44
     218:	50445f54 	subpl	r5, r4, r4, asr pc
     21c:	445f4c4c 	ldrbmi	r4, [pc], #-3148	; 224 <_start-0x7ffffddc>
     220:	43005244 	movwmi	r5, #580	; 0x244
     224:	55415f4d 	strbpl	r5, [r1, #-3917]	; 0xf4d
     228:	44494f54 	strbmi	r4, [r9], #-3924	; 0xf54
     22c:	445f454c 	ldrbmi	r4, [pc], #-1356	; 234 <_start-0x7ffffdcc>
     230:	5f4c4c50 	svcpl	0x004c4c50
     234:	00524550 	subseq	r4, r2, r0, asr r5
     238:	445f4d43 	ldrbmi	r4, [pc], #-3395	; 240 <_start-0x7ffffdc0>
     23c:	4d5f5649 	ldclmi	6, cr5, [pc, #-292]	; 120 <_start-0x7ffffee0>
     240:	50445f35 	subpl	r5, r4, r5, lsr pc
     244:	435f4c4c 	cmpmi	pc, #76, 24	; 0x4c00
     248:	0045524f 	subeq	r5, r5, pc, asr #4
     24c:	535f4d43 	cmppl	pc, #4288	; 0x10c0
     250:	445f4353 	ldrbmi	r4, [pc], #-851	; 258 <_start-0x7ffffda8>
     254:	41544c45 	cmpmi	r4, r5, asr #24
     258:	4554534d 	ldrbmi	r5, [r4, #-845]	; 0x34d
     25c:	50445f50 	subpl	r5, r4, r0, asr pc
     260:	505f4c4c 	subspl	r4, pc, ip, asr #24
     264:	76005245 	strvc	r5, [r0], -r5, asr #4
     268:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
     26c:	5f4d4300 	svcpl	0x004d4300
     270:	5f524550 	svcpl	0x00524550
     274:	444b4c43 	strbmi	r4, [fp], #-3139	; 0xc43
     278:	32335649 	eorscc	r5, r3, #76546048	; 0x4900000
     27c:	4c435f4b 	mcrrmi	15, 4, r5, r3, cr11
     280:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     284:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     288:	5455415f 	ldrbpl	r4, [r5], #-351	; 0x15f
     28c:	4c44494f 	mcrrmi	9, 4, r4, r4, cr15
     290:	50445f45 	subpl	r5, r4, r5, asr #30
     294:	435f4c4c 	cmpmi	pc, #76, 24	; 0x4c00
     298:	0045524f 	subeq	r5, r5, pc, asr #4
     29c:	445f4d43 	ldrbmi	r4, [pc], #-3395	; 2a4 <_start-0x7ffffd5c>
     2a0:	4d5f5649 	ldclmi	6, cr5, [pc, #-292]	; 184 <_start-0x7ffffe7c>
     2a4:	50445f32 	subpl	r5, r4, r2, lsr pc
     2a8:	4d5f4c4c 	ldclmi	12, cr4, [pc, #-304]	; 180 <_start-0x7ffffe80>
     2ac:	43005550 	movwmi	r5, #1360	; 0x550
     2b0:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     2b4:	43445f52 	movtmi	r5, #20306	; 0x4f52
     2b8:	5f304e41 	svcpl	0x00304e41
     2bc:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     2c0:	004c5254 	subeq	r5, ip, r4, asr r2
     2c4:	505f4d43 	subspl	r4, pc, r3, asr #26
     2c8:	4c5f5245 	lfmmi	f5, 2, [pc], {69}	; 0x45
     2cc:	5f574634 	svcpl	0x00574634
     2d0:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     2d4:	004c5254 	subeq	r5, ip, r4, asr r2
     2d8:	525f4d43 	subspl	r4, pc, #4288	; 0x10c0
     2dc:	43004354 	movwmi	r4, #852	; 0x354
     2e0:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     2e4:	4d4d5f52 	stclmi	15, cr5, [sp, #-328]	; 0xfffffeb8
     2e8:	435f3043 	cmpmi	pc, #67	; 0x43
     2ec:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     2f0:	43004c52 	movwmi	r4, #3154	; 0xc52
     2f4:	4c435f4d 	mcrrmi	15, 4, r5, r3, cr13
     2f8:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     2fc:	4c50445f 	cfldrdmi	mvd4, [r0], {95}	; 0x5f
     300:	4f435f4c 	svcmi	0x00435f4c
     304:	43004552 	movwmi	r4, #1362	; 0x552
     308:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     30c:	32495f52 	subcc	r5, r9, #328	; 0x148
     310:	435f3143 	cmpmi	pc, #-1073741808	; 0xc0000010
     314:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     318:	43004c52 	movwmi	r4, #3154	; 0xc52
     31c:	49445f4d 	stmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     320:	344d5f56 	strbcc	r5, [sp], #-3926	; 0xf56
     324:	4c50445f 	cfldrdmi	mvd4, [r0], {95}	; 0x5f
     328:	4f435f4c 	svcmi	0x00435f4c
     32c:	43004552 	movwmi	r4, #1362	; 0x552
     330:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     334:	45495f52 	strbmi	r5, [r9, #-3922]	; 0xf52
     338:	30354545 	eorscc	r4, r5, r5, asr #10
     33c:	435f3030 	cmpmi	pc, #48	; 0x30
     340:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     344:	43004c52 	movwmi	r4, #3154	; 0xc52
     348:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     34c:	49545f52 	ldmdbmi	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
     350:	3252454d 	subscc	r4, r2, #322961408	; 0x13400000
     354:	4b4c435f 	blmi	13110d8 <_start-0x7eceef28>
     358:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     35c:	5f4d4300 	svcpl	0x004d4300
     360:	5f524550 	svcpl	0x00524550
     364:	31434d4d 	cmpcc	r3, sp, asr #26
     368:	4b4c435f 	blmi	13110ec <_start-0x7eceef14>
     36c:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     370:	5f4d4300 	svcpl	0x004d4300
     374:	5f435353 	svcpl	0x00435353
     378:	46444f4d 	strbmi	r4, [r4], -sp, asr #30
     37c:	44514552 	ldrbmi	r4, [r1], #-1362	; 0x552
     380:	445f5649 	ldrbmi	r5, [pc], #-1609	; 388 <_start-0x7ffffc78>
     384:	5f4c4c50 	svcpl	0x004c4c50
     388:	0055504d 	subseq	r5, r5, sp, asr #32
     38c:	505f4d43 	subspl	r4, pc, r3, asr #26
     390:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     394:	5f324332 	svcpl	0x00324332
     398:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     39c:	004c5254 	subeq	r5, ip, r4, asr r2
     3a0:	505f4d43 	subspl	r4, pc, r3, asr #26
     3a4:	555f5245 	ldrbpl	r5, [pc, #-581]	; 167 <_start-0x7ffffe99>
     3a8:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     3ac:	4b4c435f 	blmi	1311130 <_start-0x7eceeed0>
     3b0:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     3b4:	5f4d4300 	svcpl	0x004d4300
     3b8:	5f524550 	svcpl	0x00524550
     3bc:	454d4954 	strbmi	r4, [sp, #-2388]	; 0x954
     3c0:	435f3352 	cmpmi	pc, #1207959553	; 0x48000001
     3c4:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     3c8:	43004c52 	movwmi	r4, #3154	; 0xc52
     3cc:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     3d0:	4d4d5f52 	stclmi	15, cr5, [sp, #-328]	; 0xfffffeb8
     3d4:	435f3243 	cmpmi	pc, #805306372	; 0x30000004
     3d8:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     3dc:	43004c52 	movwmi	r4, #3154	; 0xc52
     3e0:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     3e4:	50535f52 	subspl	r5, r3, r2, asr pc
     3e8:	4f4c4e49 	svcmi	0x004c4e49
     3ec:	435f4b43 	cmpmi	pc, #68608	; 0x10c00
     3f0:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     3f4:	43004c52 	movwmi	r4, #3154	; 0xc52
     3f8:	4b575f4d 	blmi	15d8134 <_start-0x7ea27ecc>
     3fc:	575f5055 			; <UNDEFINED> instruction: 0x575f5055
     400:	5f50554b 	svcpl	0x0050554b
     404:	435f334d 	cmpmi	pc, #872415233	; 0x34000001
     408:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     40c:	43004c52 	movwmi	r4, #3154	; 0xc52
     410:	4c435f4d 	mcrrmi	15, 4, r5, r3, cr13
     414:	444f4d4b 	strbmi	r4, [pc], #-3403	; 41c <_start-0x7ffffbe4>
     418:	50445f45 	subpl	r5, r4, r5, asr #30
     41c:	435f4c4c 	cmpmi	pc, #76, 24	; 0x4c00
     420:	0045524f 	subeq	r5, r5, pc, asr #4
     424:	535f4d43 	cmppl	pc, #4288	; 0x10c0
     428:	6c437465 	cfstrdvs	mvd7, [r3], {101}	; 0x65
     42c:	4d43006b 	stclmi	0, cr0, [r3, #-428]	; 0xfffffe54
     430:	5245505f 	subpl	r5, r5, #95	; 0x5f
     434:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     438:	5f345245 	svcpl	0x00345245
     43c:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     440:	004c5254 	subeq	r5, ip, r4, asr r2
     444:	495f4d43 	ldmdbmi	pc, {r0, r1, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     448:	53454c44 	movtpl	r4, #23620	; 0x5c44
     44c:	50445f54 	subpl	r5, r4, r4, asr pc
     450:	445f4c4c 	ldrbmi	r4, [pc], #-3148	; 458 <_start-0x7ffffba8>
     454:	00505349 	subseq	r5, r0, r9, asr #6
     458:	575f4d43 	ldrbpl	r4, [pc, -r3, asr #26]
     45c:	5f50554b 	svcpl	0x0050554b
     460:	544e4f43 	strbpl	r4, [lr], #-3907	; 0xf43
     464:	5f4c4f52 	svcpl	0x004c4f52
     468:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     46c:	004c5254 	subeq	r5, ip, r4, asr r2
     470:	575f4d43 	ldrbpl	r4, [pc, -r3, asr #26]
     474:	5f50554b 	svcpl	0x0050554b
     478:	31544457 	cmpcc	r4, r7, asr r4
     47c:	4b4c435f 	blmi	1311200 <_start-0x7eceee00>
     480:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     484:	5f4d4300 	svcpl	0x004d4300
     488:	5f524550 	svcpl	0x00524550
     48c:	454d4954 	strbmi	r4, [sp, #-2388]	; 0x954
     490:	435f3552 	cmpmi	pc, #343932928	; 0x14800000
     494:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     498:	43004c52 	movwmi	r4, #3154	; 0xc52
     49c:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     4a0:	50535f52 	subspl	r5, r3, r2, asr pc
     4a4:	435f3149 	cmpmi	pc, #1073741842	; 0x40000012
     4a8:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     4ac:	43004c52 	movwmi	r4, #3154	; 0xc52
     4b0:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     4b4:	334c5f52 	movtcc	r5, #53074	; 0xcf52
     4b8:	4b4c435f 	blmi	131123c <_start-0x7eceedc4>
     4bc:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     4c0:	5f4d4300 	svcpl	0x004d4300
     4c4:	5f524550 	svcpl	0x00524550
     4c8:	4e414344 	cdpmi	3, 4, cr4, cr1, cr4, {2}
     4cc:	4c435f31 	mcrrmi	15, 3, r5, r3, cr1
     4d0:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     4d4:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     4d8:	5245505f 	subpl	r5, r5, #95	; 0x5f
     4dc:	5750455f 			; <UNDEFINED> instruction: 0x5750455f
     4e0:	3053534d 	subscc	r5, r3, sp, asr #6
     4e4:	4b4c435f 	blmi	1311268 <_start-0x7eceed98>
     4e8:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     4ec:	5f4d4300 	svcpl	0x004d4300
     4f0:	5f524550 	svcpl	0x00524550
     4f4:	454d4954 	strbmi	r4, [sp, #-2388]	; 0x954
     4f8:	435f3652 	cmpmi	pc, #85983232	; 0x5200000
     4fc:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     500:	43004c52 	movwmi	r4, #3154	; 0xc52
     504:	4b575f4d 	blmi	15d8240 <_start-0x7ea27dc0>
     508:	475f5055 			; <UNDEFINED> instruction: 0x475f5055
     50c:	304f4950 	subcc	r4, pc, r0, asr r9	; <UNPREDICTABLE>
     510:	4b4c435f 	blmi	1311294 <_start-0x7eceed6c>
     514:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     518:	5f4d4300 	svcpl	0x004d4300
     51c:	5f524550 	svcpl	0x00524550
     520:	4d475043 	stclmi	0, cr5, [r7, #-268]	; 0xfffffef4
     524:	5f304341 	svcpl	0x00304341
     528:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     52c:	004c5254 	subeq	r5, ip, r4, asr r2
     530:	535f4d43 	cmppl	pc, #4288	; 0x10c0
     534:	445f4353 	ldrbmi	r4, [pc], #-851	; 53c <_start-0x7ffffac4>
     538:	41544c45 	cmpmi	r4, r5, asr #24
     53c:	4554534d 	ldrbmi	r5, [r4, #-845]	; 0x34d
     540:	50445f50 	subpl	r5, r4, r0, asr pc
     544:	435f4c4c 	cmpmi	pc, #76, 24	; 0x4c00
     548:	0045524f 	subeq	r5, r5, pc, asr #4
     54c:	505f4d43 	subspl	r4, pc, r3, asr #26
     550:	545f5245 	ldrbpl	r5, [pc], #-581	; 558 <_start-0x7ffffaa8>
     554:	52454d49 	subpl	r4, r5, #4672	; 0x1240
     558:	4c435f37 	mcrrmi	15, 3, r5, r3, cr7
     55c:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     560:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     564:	4353535f 	cmpmi	r3, #2080374785	; 0x7c000001
     568:	4c45445f 	cfstrdmi	mvd4, [r5], {95}	; 0x5f
     56c:	534d4154 	movtpl	r4, #53588	; 0xd154
     570:	5f504554 	svcpl	0x00504554
     574:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     578:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xd5f
     57c:	5f4d4300 	svcpl	0x004d4300
     580:	5f524550 	svcpl	0x00524550
     584:	5750434f 	ldrbpl	r4, [r0, -pc, asr #6]
     588:	4c435f50 	mcrrmi	15, 5, r5, r3, cr0
     58c:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     590:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     594:	554b575f 	strbpl	r5, [fp, #-1887]	; 0x75f
     598:	4d535f50 	ldclmi	15, cr5, [r3, #-320]	; 0xfffffec0
     59c:	52545241 	subspl	r5, r4, #268435460	; 0x10000004
     5a0:	454c4645 	strbmi	r4, [ip, #-1605]	; 0x645
     5a4:	435f3058 	cmpmi	pc, #88	; 0x58
     5a8:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     5ac:	43004c52 	movwmi	r4, #3154	; 0xc52
     5b0:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     5b4:	50455f52 	subpl	r5, r5, r2, asr pc
     5b8:	53534d57 	cmppl	r3, #5568	; 0x15c0
     5bc:	4c435f32 	mcrrmi	15, 3, r5, r3, cr2
     5c0:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     5c4:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     5c8:	554b575f 	strbpl	r5, [fp, #-1887]	; 0x75f
     5cc:	41555f50 	cmpmi	r5, r0, asr pc
     5d0:	5f305452 	svcpl	0x00305452
     5d4:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     5d8:	004c5254 	subeq	r5, ip, r4, asr r2
     5dc:	435f4d43 	cmpmi	pc, #4288	; 0x10c0
     5e0:	45534b4c 	ldrbmi	r4, [r3, #-2892]	; 0xb4c
     5e4:	50445f4c 	subpl	r5, r4, ip, asr #30
     5e8:	505f4c4c 	subspl	r4, pc, ip, asr #24
     5ec:	50495245 	subpl	r5, r9, r5, asr #4
     5f0:	4d430048 	stclmi	0, cr0, [r3, #-288]	; 0xfffffee0
     5f4:	5245505f 	subpl	r5, r5, #95	; 0x5f
     5f8:	4c344c5f 	ldcmi	12, cr4, [r4], #-380	; 0xfffffe84
     5fc:	4c435f53 	mcrrmi	15, 5, r5, r3, cr3
     600:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     604:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     608:	5245505f 	subpl	r5, r5, #95	; 0x5f
     60c:	53334c5f 	teqpl	r3, #24320	; 0x5f00
     610:	4b4c435f 	blmi	1311394 <_start-0x7eceec6c>
     614:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     618:	43004c52 	movwmi	r4, #3154	; 0xc52
     61c:	4c435f4d 	mcrrmi	15, 4, r5, r3, cr13
     620:	444f4d4b 	strbmi	r4, [pc], #-3403	; 628 <_start-0x7ffff9d8>
     624:	50445f45 	subpl	r5, r4, r5, asr #30
     628:	445f4c4c 	ldrbmi	r4, [pc], #-3148	; 630 <_start-0x7ffff9d0>
     62c:	43005244 	movwmi	r5, #580	; 0x244
     630:	4b575f4d 	blmi	15d836c <_start-0x7ea27c94>
     634:	535f5055 	cmppl	pc, #85	; 0x55
     638:	5452414d 	ldrbpl	r4, [r2], #-333	; 0x14d
     63c:	4c464552 	cfstr64mi	mvdx4, [r6], {82}	; 0x52
     640:	5f315845 	svcpl	0x00315845
     644:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     648:	004c5254 	subeq	r5, ip, r4, asr r2
     64c:	435f4d43 	cmpmi	pc, #4288	; 0x10c0
     650:	45534b4c 	ldrbmi	r4, [r3, #-2892]	; 0xb4c
     654:	50445f4c 	subpl	r5, r4, ip, asr #30
     658:	445f4c4c 	ldrbmi	r4, [pc], #-3148	; 660 <_start-0x7ffff9a0>
     65c:	00505349 	subseq	r5, r0, r9, asr #6
     660:	505f4d43 	subspl	r4, pc, r3, asr #26
     664:	43005245 	movwmi	r5, #581	; 0x245
     668:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     66c:	4c435f52 	mcrrmi	15, 5, r5, r3, cr2
     670:	34325f4b 	ldrtcc	r5, [r2], #-3915	; 0xf4b
     674:	5f5a484d 	svcpl	0x005a484d
     678:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     67c:	52544354 	subspl	r4, r4, #84, 6	; 0x50000001
     680:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     684:	5245505f 	subpl	r5, r5, #95	; 0x5f
     688:	4253555f 	subsmi	r5, r3, #398458880	; 0x17c00000
     68c:	4c435f30 	mcrrmi	15, 3, r5, r3, cr0
     690:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     694:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     698:	5245505f 	subpl	r5, r5, #95	; 0x5f
     69c:	49414d5f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
     6a0:	584f424c 	stmdapl	pc, {r2, r3, r6, r9, lr}^	; <UNPREDICTABLE>
     6a4:	4c435f30 	mcrrmi	15, 3, r5, r3, cr0
     6a8:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     6ac:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     6b0:	4645435f 			; <UNDEFINED> instruction: 0x4645435f
     6b4:	00455355 	subeq	r5, r5, r5, asr r3
     6b8:	475f4d43 	ldrbmi	r4, [pc, -r3, asr #26]
     6bc:	6c437465 	cfstrdvs	mvd7, [r3], {101}	; 0x65
     6c0:	4d43006b 	stclmi	0, cr0, [r3, #-428]	; 0xfffffe54
     6c4:	5649445f 			; <UNDEFINED> instruction: 0x5649445f
     6c8:	5f364d5f 	svcpl	0x00364d5f
     6cc:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     6d0:	524f435f 	subpl	r4, pc, #2080374785	; 0x7c000001
     6d4:	4d430045 	stclmi	0, cr0, [r3, #-276]	; 0xfffffeec
     6d8:	554b575f 	strbpl	r5, [fp, #-1887]	; 0x75f
     6dc:	4d430050 	stclmi	0, cr0, [r3, #-320]	; 0xfffffec0
     6e0:	4c44495f 	mcrrmi	9, 5, r4, r4, cr15
     6e4:	5f545345 	svcpl	0x00545345
     6e8:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     6ec:	524f435f 	subpl	r4, pc, #2080374785	; 0x7c000001
     6f0:	4d430045 	stclmi	0, cr0, [r3, #-276]	; 0xfffffeec
     6f4:	4c44495f 	mcrrmi	9, 5, r4, r4, cr15
     6f8:	5f545345 	svcpl	0x00545345
     6fc:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     700:	5245505f 	subpl	r5, r5, #95	; 0x5f
     704:	5f4d4300 	svcpl	0x004d4300
     708:	5f524550 	svcpl	0x00524550
     70c:	5f555250 	svcpl	0x00555250
     710:	53534349 	cmppl	r3, #603979777	; 0x24000001
     714:	4b4c435f 	blmi	1311498 <_start-0x7eceeb68>
     718:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     71c:	5f4d4300 	svcpl	0x004d4300
     720:	4d4b4c43 	stclmi	12, cr4, [fp, #-268]	; 0xfffffef4
     724:	5f45444f 	svcpl	0x0045444f
     728:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     72c:	5245505f 	subpl	r5, r5, #95	; 0x5f
     730:	5f4d4300 	svcpl	0x004d4300
     734:	5f524550 	svcpl	0x00524550
     738:	4f495047 	svcmi	0x00495047
     73c:	4c435f31 	mcrrmi	15, 3, r5, r3, cr1
     740:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     744:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     748:	4b4c435f 	blmi	13114cc <_start-0x7eceeb34>
     74c:	4c4f4344 	mcrrmi	3, 4, r4, pc, cr4
     750:	445f4f44 	ldrbmi	r4, [pc], #-3908	; 758 <_start-0x7ffff8a8>
     754:	5f4c4c50 	svcpl	0x004c4c50
     758:	00524550 	subseq	r4, r2, r0, asr r5
     75c:	505f4d43 	subspl	r4, pc, r3, asr #26
     760:	475f5245 	ldrbmi	r5, [pc, -r5, asr #4]
     764:	324f4950 	subcc	r4, pc, #80, 18	; 0x140000
     768:	4b4c435f 	blmi	13114ec <_start-0x7eceeb14>
     76c:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     770:	5f4d4300 	svcpl	0x004d4300
     774:	5f524550 	svcpl	0x00524550
     778:	46494d45 	strbmi	r4, [r9], -r5, asr #26
     77c:	4b4c435f 	blmi	1311500 <_start-0x7eceeb00>
     780:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     784:	5f4d4300 	svcpl	0x004d4300
     788:	5f524550 	svcpl	0x00524550
     78c:	5f4d4c45 	svcpl	0x004d4c45
     790:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     794:	004c5254 	subeq	r5, ip, r4, asr r2
     798:	435f4d43 	cmpmi	pc, #4288	; 0x10c0
     79c:	4f4d4b4c 	svcmi	0x004d4b4c
     7a0:	445f4544 	ldrbmi	r4, [pc], #-1348	; 7a8 <_start-0x7ffff858>
     7a4:	5f4c4c50 	svcpl	0x004c4c50
     7a8:	0055504d 	subseq	r5, r5, sp, asr #32
     7ac:	445f4d43 	ldrbmi	r4, [pc], #-3395	; 7b4 <_start-0x7ffff84c>
     7b0:	004c4c50 	subeq	r4, ip, r0, asr ip
     7b4:	505f4d43 	subspl	r4, pc, r3, asr #26
     7b8:	475f5245 	ldrbmi	r5, [pc, -r5, asr #4]
     7bc:	334f4950 	movtcc	r4, #63824	; 0xf950
     7c0:	4b4c435f 	blmi	1311544 <_start-0x7eceeabc>
     7c4:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     7c8:	5f4d4300 	svcpl	0x004d4300
     7cc:	5f524550 	svcpl	0x00524550
     7d0:	534c344c 	movtpl	r3, #50252	; 0xc44c
     7d4:	4b4c435f 	blmi	1311558 <_start-0x7eceeaa8>
     7d8:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     7dc:	43004c52 	movwmi	r4, #3154	; 0xc52
     7e0:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     7e4:	50545f52 	subspl	r5, r4, r2, asr pc
     7e8:	5f314354 	svcpl	0x00314354
     7ec:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     7f0:	004c5254 	subeq	r5, ip, r4, asr r2
     7f4:	415f4d43 	cmpmi	pc, r3, asr #26
     7f8:	494f5455 	stmdbmi	pc, {r0, r2, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     7fc:	5f454c44 	svcpl	0x00454c44
     800:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     804:	5244445f 	subpl	r4, r4, #1593835520	; 0x5f000000
     808:	5f4d4300 	svcpl	0x004d4300
     80c:	415f334c 	cmpmi	pc, ip, asr #6
     810:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
     814:	54534b4c 	ldrbpl	r4, [r3], #-2892	; 0xb4c
     818:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     81c:	5f4d4300 	svcpl	0x004d4300
     820:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     824:	445f4c45 	ldrbmi	r4, [pc], #-3141	; 82c <_start-0x7ffff7d4>
     828:	5f4c4c50 	svcpl	0x004c4c50
     82c:	00524444 	subseq	r4, r2, r4, asr #8
     830:	535f4d43 	cmppl	pc, #4288	; 0x10c0
     834:	4d5f4353 	ldclmi	3, cr4, [pc, #-332]	; 6f0 <_start-0x7ffff910>
     838:	5246444f 	subpl	r4, r6, #1325400064	; 0x4f000000
     83c:	49445145 	stmdbmi	r4, {r0, r2, r6, r8, ip, lr}^
     840:	50445f56 	subpl	r5, r4, r6, asr pc
     844:	435f4c4c 	cmpmi	pc, #76, 24	; 0x4c00
     848:	0045524f 	subeq	r5, r5, pc, asr #4
     84c:	505f4d43 	subspl	r4, pc, r3, asr #26
     850:	545f5245 	ldrbpl	r5, [pc], #-581	; 858 <_start-0x7ffff7a8>
     854:	32435450 	subcc	r5, r3, #80, 8	; 0x50000000
     858:	4b4c435f 	blmi	13115dc <_start-0x7eceea24>
     85c:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     860:	5f4d4300 	svcpl	0x004d4300
     864:	5f524550 	svcpl	0x00524550
     868:	434d434f 	movtmi	r4, #54095	; 0xd34f
     86c:	5f4d4152 	svcpl	0x004d4152
     870:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     874:	004c5254 	subeq	r5, ip, r4, asr r2
     878:	505f4d43 	subspl	r4, pc, r3, asr #26
     87c:	4c5f5245 	lfmmi	f5, 2, [pc], {69}	; 0x45
     880:	5f434443 	svcpl	0x00434443
     884:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     888:	004c5254 	subeq	r5, ip, r4, asr r2
     88c:	495f4d43 	ldmdbmi	pc, {r0, r1, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     890:	53454c44 	movtpl	r4, #23620	; 0x5c44
     894:	50445f54 	subpl	r5, r4, r4, asr pc
     898:	4d5f4c4c 	ldclmi	12, cr4, [pc, #-304]	; 770 <_start-0x7ffff890>
     89c:	43005550 	movwmi	r5, #1360	; 0x550
     8a0:	4c435f4d 	mcrrmi	15, 4, r5, r3, cr13
     8a4:	444f4d4b 	strbmi	r4, [pc], #-3403	; 8ac <_start-0x7ffff754>
     8a8:	50445f45 	subpl	r5, r4, r5, asr #30
     8ac:	445f4c4c 	ldrbmi	r4, [pc], #-3148	; 8b4 <_start-0x7ffff74c>
     8b0:	00505349 	subseq	r5, r0, r9, asr #6
     8b4:	445f4d43 	ldrbmi	r4, [pc], #-3395	; 8bc <_start-0x7ffff744>
     8b8:	43495645 	movtmi	r5, #38469	; 0x9645
     8bc:	4d430045 	stclmi	0, cr0, [r3, #-276]	; 0xfffffeec
     8c0:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xd5f
     8c4:	5f4d4300 	svcpl	0x004d4300
     8c8:	5f524550 	svcpl	0x00524550
     8cc:	57535043 	ldrbpl	r5, [r3, -r3, asr #32]
     8d0:	4b4c435f 	blmi	1311654 <_start-0x7ecee9ac>
     8d4:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     8d8:	43004c52 	movwmi	r4, #3154	; 0xc52
     8dc:	53535f4d 	cmppl	r3, #308	; 0x134
     8e0:	45445f43 	strbmi	r5, [r4, #-3907]	; 0xf43
     8e4:	4d41544c 	cfstrdmi	mvd5, [r1, #-304]	; 0xfffffed0
     8e8:	50455453 	subpl	r5, r5, r3, asr r4
     8ec:	4c50445f 	cfldrdmi	mvd4, [r0], {95}	; 0x5f
     8f0:	44445f4c 	strbmi	r5, [r4], #-3916	; 0xf4c
     8f4:	4d430052 	stclmi	0, cr0, [r3, #-328]	; 0xfffffeb8
     8f8:	554b575f 	strbpl	r5, [fp, #-1887]	; 0x75f
     8fc:	45445f50 	strbmi	r5, [r4, #-3920]	; 0xf50
     900:	53475542 	movtpl	r5, #30018	; 0x7542
     904:	4c435f53 	mcrrmi	15, 5, r5, r3, cr3
     908:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     90c:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     910:	5846475f 	stmdapl	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     914:	5f4d4300 	svcpl	0x004d4300
     918:	575f344c 	ldrbpl	r3, [pc, -ip, asr #8]
     91c:	5f50554b 	svcpl	0x0050554b
     920:	5f4e4f41 	svcpl	0x004e4f41
     924:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     928:	52544354 	subspl	r4, r4, #84, 6	; 0x50000001
     92c:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     930:	5245505f 	subpl	r5, r5, #95	; 0x5f
     934:	4350545f 	cmpmi	r0, #1593835520	; 0x5f000000
     938:	4c435f43 	mcrrmi	15, 4, r5, r3, cr3
     93c:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     940:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     944:	5649445f 			; <UNDEFINED> instruction: 0x5649445f
     948:	5f324d5f 	svcpl	0x00324d5f
     94c:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     950:	5349445f 	movtpl	r4, #37983	; 0x945f
     954:	4d430050 	stclmi	0, cr0, [r3, #-320]	; 0xfffffec0
     958:	5245505f 	subpl	r5, r5, #95	; 0x5f
     95c:	48344c5f 	ldmdami	r4!, {r0, r1, r2, r3, r4, r6, sl, fp, lr}
     960:	4c435f53 	mcrrmi	15, 5, r5, r3, cr3
     964:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     968:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     96c:	5455415f 	ldrbpl	r4, [r5], #-351	; 0x15f
     970:	4c44494f 	mcrrmi	9, 4, r4, r4, cr15
     974:	50445f45 	subpl	r5, r4, r5, asr #30
     978:	4d5f4c4c 	ldclmi	12, cr4, [pc, #-304]	; 850 <_start-0x7ffff7b0>
     97c:	43005550 	movwmi	r5, #1360	; 0x550
     980:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     984:	4d455f52 	stclmi	15, cr5, [r5, #-328]	; 0xfffffeb8
     988:	465f4649 	ldrbmi	r4, [pc], -r9, asr #12
     98c:	4c435f57 	mcrrmi	15, 5, r5, r3, cr7
     990:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     994:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     998:	4b4c435f 	blmi	131171c <_start-0x7ecee8e4>
     99c:	5f4c4553 	svcpl	0x004c4553
     9a0:	4c4c5044 	mcrrmi	0, 4, r5, ip, cr4
     9a4:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xd5f
     9a8:	6f6c6300 	svcvs	0x006c6300
     9ac:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
     9b0:	5f4d4300 	svcpl	0x004d4300
     9b4:	50554b57 	subspl	r4, r5, r7, asr fp
     9b8:	4b4c435f 	blmi	131173c <_start-0x7ecee8c4>
     9bc:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     9c0:	43004c52 	movwmi	r4, #3154	; 0xc52
     9c4:	49445f4d 	stmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     9c8:	324d5f56 	subcc	r5, sp, #344	; 0x158
     9cc:	4c50445f 	cfldrdmi	mvd4, [r0], {95}	; 0x5f
     9d0:	45505f4c 	ldrbmi	r5, [r0, #-3916]	; 0xf4c
     9d4:	4d430052 	stclmi	0, cr0, [r3, #-328]	; 0xfffffeb8
     9d8:	554b575f 	strbpl	r5, [fp, #-1887]	; 0x75f
     9dc:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
     9e0:	3052454d 	subscc	r4, r2, sp, asr #10
     9e4:	4b4c435f 	blmi	1311768 <_start-0x7ecee898>
     9e8:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     9ec:	5f4d4300 	svcpl	0x004d4300
     9f0:	5f524550 	svcpl	0x00524550
     9f4:	434d5047 	movtmi	r5, #53319	; 0xd047
     9f8:	4b4c435f 	blmi	131177c <_start-0x7ecee884>
     9fc:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     a00:	5f4d4300 	svcpl	0x004d4300
     a04:	5f524550 	svcpl	0x00524550
     a08:	5750434f 	ldrbpl	r4, [r0, -pc, asr #6]
     a0c:	334c5f50 	movtcc	r5, #53072	; 0xcf50
     a10:	4b4c435f 	blmi	1311794 <_start-0x7ecee86c>
     a14:	54435453 	strbpl	r5, [r3], #-1107	; 0x453
     a18:	43004c52 	movwmi	r4, #3154	; 0xc52
     a1c:	4b575f4d 	blmi	15d8758 <_start-0x7ea278a8>
     a20:	545f5055 	ldrbpl	r5, [pc], #-85	; a28 <_start-0x7ffff5d8>
     a24:	52454d49 	subpl	r4, r5, #4672	; 0x1240
     a28:	4c435f31 	mcrrmi	15, 3, r5, r3, cr1
     a2c:	5254434b 	subspl	r4, r4, #738197505	; 0x2c000001
     a30:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     a34:	5245505f 	subpl	r5, r5, #95	; 0x5f
     a38:	44434c5f 	strbmi	r4, [r3], #-3167	; 0xc5f
     a3c:	4c435f43 	mcrrmi	15, 4, r5, r3, cr3
     a40:	4354534b 	cmpmi	r4, #738197505	; 0x2c000001
     a44:	004c5254 	subeq	r5, ip, r4, asr r2
     a48:	505f4d43 	subspl	r4, pc, r3, asr #26
     a4c:	505f5245 	subspl	r5, pc, r5, asr #4
     a50:	495f5552 	ldmdbmi	pc, {r1, r4, r6, r8, sl, ip, lr}^	; <UNPREDICTABLE>
     a54:	5f535343 	svcpl	0x00535343
     a58:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     a5c:	52544354 	subspl	r4, r4, #84, 6	; 0x50000001
     a60:	4d43004c 	stclmi	0, cr0, [r3, #-304]	; 0xfffffed0
     a64:	5245505f 	subpl	r5, r5, #95	; 0x5f
     a68:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     a6c:	435f3154 	cmpmi	pc, #84, 2
     a70:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     a74:	43004c52 	movwmi	r4, #3154	; 0xc52
     a78:	55415f4d 	strbpl	r5, [r1, #-3917]	; 0xf4d
     a7c:	44494f54 	strbmi	r4, [r9], #-3924	; 0xf54
     a80:	445f454c 	ldrbmi	r4, [pc], #-1356	; a88 <_start-0x7ffff578>
     a84:	5f4c4c50 	svcpl	0x004c4c50
     a88:	50534944 	subspl	r4, r3, r4, asr #18
     a8c:	5f4d4300 	svcpl	0x004d4300
     a90:	5f435353 	svcpl	0x00435353
     a94:	46444f4d 	strbmi	r4, [r4], -sp, asr #30
     a98:	44514552 	ldrbmi	r4, [r1], #-1362	; 0x552
     a9c:	445f5649 	ldrbmi	r5, [pc], #-1609	; aa4 <_start-0x7ffff55c>
     aa0:	5f4c4c50 	svcpl	0x004c4c50
     aa4:	00524550 	subseq	r4, r2, r0, asr r5
     aa8:	575f4d43 	ldrbpl	r4, [pc, -r3, asr #26]
     aac:	5f50554b 	svcpl	0x0050554b
     ab0:	5f434441 	svcpl	0x00434441
     ab4:	5f435354 	svcpl	0x00435354
     ab8:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     abc:	004c5254 	subeq	r5, ip, r4, asr r2
     ac0:	535f4d43 	cmppl	pc, #4288	; 0x10c0
     ac4:	4d5f4353 	ldclmi	3, cr4, [pc, #-332]	; 980 <_start-0x7ffff680>
     ac8:	5246444f 	subpl	r4, r6, #1325400064	; 0x4f000000
     acc:	49445145 	stmdbmi	r4, {r0, r2, r6, r8, ip, lr}^
     ad0:	50445f56 	subpl	r5, r4, r6, asr pc
     ad4:	445f4c4c 	ldrbmi	r4, [pc], #-3148	; adc <_start-0x7ffff524>
     ad8:	00505349 	subseq	r5, r0, r9, asr #6
     adc:	505f4d43 	subspl	r4, pc, r3, asr #26
     ae0:	455f5245 	ldrbmi	r5, [pc, #-581]	; 8a3 <_start-0x7ffff75d>
     ae4:	534d5750 	movtpl	r5, #55120	; 0xd750
     ae8:	435f3153 	cmpmi	pc, #-1073741804	; 0xc0000014
     aec:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     af0:	43004c52 	movwmi	r4, #3154	; 0xc52
     af4:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     af8:	334c5f52 	movtcc	r5, #53074	; 0xcf52
     afc:	534e495f 	movtpl	r4, #59743	; 0xe95f
     b00:	435f5254 	cmpmi	pc, #84, 4	; 0x40000005
     b04:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     b08:	43004c52 	movwmi	r4, #3154	; 0xc52
     b0c:	45505f4d 	ldrbmi	r5, [r0, #-3917]	; 0xf4d
     b10:	41555f52 	cmpmi	r5, r2, asr pc
     b14:	5f325452 	svcpl	0x00325452
     b18:	434b4c43 	movtmi	r4, #48195	; 0xbc43
     b1c:	004c5254 	subeq	r5, ip, r4, asr r2
     b20:	575f4d43 	ldrbpl	r4, [pc, -r3, asr #26]
     b24:	5f50554b 	svcpl	0x0050554b
     b28:	4b57344c 	blmi	15cdc60 <_start-0x7ea323a0>
     b2c:	435f5055 	cmpmi	pc, #85	; 0x55
     b30:	54434b4c 	strbpl	r4, [r3], #-2892	; 0xb4c
     b34:	43004c52 	movwmi	r4, #3154	; 0xc52
     b38:	4d5f4b4c 	vldrmi	d20, [pc, #-304]	; a10 <_start-0x7ffff5f0>
     b3c:	4c55444f 	cfldrdmi	mvd4, [r5], {79}	; 0x4f
     b40:	00745f45 	rsbseq	r5, r4, r5, asr #30
     b44:	575f4d43 	ldrbpl	r4, [pc, -r3, asr #26]
     b48:	5f50554b 	svcpl	0x0050554b
     b4c:	30433249 	subcc	r3, r3, r9, asr #4
     b50:	4b4c435f 	blmi	13118d4 <_start-0x7ecee72c>
     b54:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     b58:	5f4d4300 	svcpl	0x004d4300
     b5c:	5f564944 	svcpl	0x00564944
     b60:	445f324d 	ldrbmi	r3, [pc], #-589	; b68 <_start-0x7ffff498>
     b64:	5f4c4c50 	svcpl	0x004c4c50
     b68:	00524444 	subseq	r4, r2, r4, asr #8
     b6c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     b70:	5f666e6f 	svcpl	0x00666e6f
     b74:	636d7067 	cmnvs	sp, #103	; 0x67
     b78:	0030615f 	eorseq	r6, r0, pc, asr r1
     b7c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     b80:	5f666e6f 	svcpl	0x00666e6f
     b84:	636d7067 	cmnvs	sp, #103	; 0x67
     b88:	0031615f 	eorseq	r6, r1, pc, asr r1
     b8c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     b90:	5f666e6f 	svcpl	0x00666e6f
     b94:	636d7067 	cmnvs	sp, #103	; 0x67
     b98:	0032615f 	eorseq	r6, r2, pc, asr r1
     b9c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     ba0:	5f666e6f 	svcpl	0x00666e6f
     ba4:	636d7067 	cmnvs	sp, #103	; 0x67
     ba8:	0033615f 	eorseq	r6, r3, pc, asr r1
     bac:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     bb0:	5f666e6f 	svcpl	0x00666e6f
     bb4:	636d7067 	cmnvs	sp, #103	; 0x67
     bb8:	0034615f 	eorseq	r6, r4, pc, asr r1
     bbc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     bc0:	5f666e6f 	svcpl	0x00666e6f
     bc4:	636d7067 	cmnvs	sp, #103	; 0x67
     bc8:	0035615f 	eorseq	r6, r5, pc, asr r1
     bcc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     bd0:	5f666e6f 	svcpl	0x00666e6f
     bd4:	636d7067 	cmnvs	sp, #103	; 0x67
     bd8:	0036615f 	eorseq	r6, r6, pc, asr r1
     bdc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     be0:	5f666e6f 	svcpl	0x00666e6f
     be4:	636d7067 	cmnvs	sp, #103	; 0x67
     be8:	0037615f 	eorseq	r6, r7, pc, asr r1
     bec:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     bf0:	5f666e6f 	svcpl	0x00666e6f
     bf4:	636d7067 	cmnvs	sp, #103	; 0x67
     bf8:	0038615f 	eorseq	r6, r8, pc, asr r1
     bfc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     c00:	5f666e6f 	svcpl	0x00666e6f
     c04:	636d7067 	cmnvs	sp, #103	; 0x67
     c08:	0039615f 	eorseq	r6, r9, pc, asr r1
     c0c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xf63
     c10:	5f6c6f72 	svcpl	0x006c6f72
     c14:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xf6d
     c18:	632e656c 			; <UNDEFINED> instruction: 0x632e656c
     c1c:	5f4d4300 	svcpl	0x004d4300
     c20:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     c24:	69696d5f 	stmdbvs	r9!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     c28:	72635f31 	rsbvc	r5, r3, #49, 30	; 0xc4
     c2c:	4d430073 	stclmi	0, cr0, [r3, #-460]	; 0xfffffe34
     c30:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     c34:	70745f66 	rsbsvc	r5, r4, r6, ror #30
     c38:	655f6363 	ldrbvs	r6, [pc, #-867]	; 8dd <_start-0x7ffff723>
     c3c:	6d5f7476 	cfldrdvs	mvd7, [pc, #-472]	; a6c <_start-0x7ffff594>
     c40:	325f7875 	subscc	r7, pc, #7667712	; 0x750000
     c44:	33325f30 	teqcc	r2, #48, 30	; 0xc0
     c48:	5f4d4300 	svcpl	0x004d4300
     c4c:	736d7770 	cmnvc	sp, #112, 14	; 0x1c00000
     c50:	74635f73 	strbtvc	r5, [r3], #-3955	; 0xf73
     c54:	43006c72 	movwmi	r6, #3186	; 0xc72
     c58:	65735f4d 	ldrbvs	r5, [r3, #-3917]!	; 0xf4d
     c5c:	72744374 	rsbsvc	r4, r4, #116, 6	; 0xd0000001
     c60:	646f4d6c 	strbtvs	r4, [pc], #-3436	; c68 <_start-0x7ffff398>
     c64:	00656c75 	rsbeq	r6, r5, r5, ror ip
     c68:	655f4d43 	ldrbvs	r4, [pc, #-3395]	; ffffff2d <value+0x7fffea03>
     c6c:	65737566 	ldrbvs	r7, [r3, #-1382]!	; 0x566
     c70:	616d735f 	cmnvs	sp, pc, asr r3
     c74:	5f4d4300 	svcpl	0x004d4300
     c78:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     c7c:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
     c80:	73635f63 	cmnvc	r3, #396	; 0x18c
     c84:	4300316e 	movwmi	r3, #366	; 0x16e
     c88:	6f635f4d 	svcvs	0x00635f4d
     c8c:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
     c90:	5f636d70 	svcpl	0x00636d70
     c94:	326e7363 	rsbcc	r7, lr, #-1946157055	; 0x8c000001
     c98:	5f4d4300 	svcpl	0x004d4300
     c9c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     ca0:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
     ca4:	73635f63 	cmnvc	r3, #396	; 0x18c
     ca8:	4300336e 	movwmi	r3, #878	; 0x36e
     cac:	6f635f4d 	svcvs	0x00635f4d
     cb0:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
     cb4:	5f636d70 	svcpl	0x00636d70
     cb8:	74696177 	strbtvc	r6, [r9], #-375	; 0x177
     cbc:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
     cc0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     cc4:	70675f66 	rsbvc	r5, r7, r6, ror #30
     cc8:	615f636d 	cmpvs	pc, sp, ror #6
     ccc:	43003064 	movwmi	r3, #100	; 0x64
     cd0:	6f635f4d 	svcvs	0x00635f4d
     cd4:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
     cd8:	5f636d70 	svcpl	0x00636d70
     cdc:	00316461 	eorseq	r6, r1, r1, ror #8
     ce0:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     ce4:	5f666e6f 	svcpl	0x00666e6f
     ce8:	636d7067 	cmnvs	sp, #103	; 0x67
     cec:	3264615f 	rsbcc	r6, r4, #-1073741801	; 0xc0000017
     cf0:	5f4d4300 	svcpl	0x004d4300
     cf4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     cf8:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
     cfc:	64615f63 	strbtvs	r5, [r1], #-3939	; 0xf63
     d00:	4d430033 	stclmi	0, cr0, [r3, #-204]	; 0xffffff34
     d04:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     d08:	70675f66 	rsbvc	r5, r7, r6, ror #30
     d0c:	615f636d 	cmpvs	pc, sp, ror #6
     d10:	43003464 	movwmi	r3, #1124	; 0x464
     d14:	6f635f4d 	svcvs	0x00635f4d
     d18:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
     d1c:	5f636d70 	svcpl	0x00636d70
     d20:	00356461 	eorseq	r6, r5, r1, ror #8
     d24:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     d28:	5f666e6f 	svcpl	0x00666e6f
     d2c:	636d7067 	cmnvs	sp, #103	; 0x67
     d30:	3664615f 			; <UNDEFINED> instruction: 0x3664615f
     d34:	5f4d4300 	svcpl	0x004d4300
     d38:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     d3c:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
     d40:	64615f63 	strbtvs	r5, [r1], #-3939	; 0xf63
     d44:	4d430037 	stclmi	0, cr0, [r3, #-220]	; 0xffffff24
     d48:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     d4c:	70675f66 	rsbvc	r5, r7, r6, ror #30
     d50:	615f636d 	cmpvs	pc, sp, ror #6
     d54:	43003864 	movwmi	r3, #2148	; 0x864
     d58:	6f635f4d 	svcvs	0x00635f4d
     d5c:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
     d60:	5f636d70 	svcpl	0x00636d70
     d64:	00396461 	eorseq	r6, r9, r1, ror #8
     d68:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     d6c:	5f666e6f 	svcpl	0x00666e6f
     d70:	63637074 	cmnvs	r3, #116	; 0x74
     d74:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
     d78:	78756d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     d7c:	335f305f 	cmpcc	pc, #95	; 0x5f
     d80:	5f4d4300 	svcpl	0x004d4300
     d84:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     d88:	6163655f 	cmnvs	r3, pc, asr r5
     d8c:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     d90:	77705f6e 	ldrbvc	r5, [r0, -lr, ror #30]!
     d94:	6f5f306d 	svcvs	0x005f306d
     d98:	55007475 	strpl	r7, [r0, #-1141]	; 0x475
     d9c:	30747261 	rsbscc	r7, r4, r1, ror #4
     da0:	78754d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
     da4:	5f4d4300 	svcpl	0x004d4300
     da8:	646e6162 	strbtvs	r6, [lr], #-354	; 0x162
     dac:	5f706167 	svcpl	0x00706167
     db0:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
     db4:	5f4d4300 	svcpl	0x004d4300
     db8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     dbc:	64636c5f 	strbtvs	r6, [r3], #-3167	; 0xc5f
     dc0:	7461645f 	strbtvc	r6, [r1], #-1119	; 0x45f
     dc4:	00303161 	eorseq	r3, r0, r1, ror #2
     dc8:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     dcc:	5f666e6f 	svcpl	0x00666e6f
     dd0:	5f64636c 	svcpl	0x0064636c
     dd4:	61746164 	cmnvs	r4, r4, ror #2
     dd8:	43003131 	movwmi	r3, #305	; 0x131
     ddc:	6f635f4d 	svcvs	0x00635f4d
     de0:	6c5f666e 	mrrcvs	6, 6, r6, pc, cr14	; <UNPREDICTABLE>
     de4:	645f6463 	ldrbvs	r6, [pc], #-1123	; dec <_start-0x7ffff214>
     de8:	31617461 	cmncc	r1, r1, ror #8
     dec:	4d430032 	stclmi	0, cr0, [r3, #-200]	; 0xffffff38
     df0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     df4:	636c5f66 	cmnvs	ip, #408	; 0x198
     df8:	61645f64 	cmnvs	r4, r4, ror #30
     dfc:	33316174 	teqcc	r1, #116, 2
     e00:	5f4d4300 	svcpl	0x004d4300
     e04:	6765726d 	strbvs	r7, [r5, -sp, ror #4]!
     e08:	6f697270 	svcvs	0x00697270
     e0c:	4300305f 	movwmi	r3, #95	; 0x5f
     e10:	6f635f4d 	svcvs	0x00635f4d
     e14:	6c5f666e 	mrrcvs	6, 6, r6, pc, cr14	; <UNPREDICTABLE>
     e18:	645f6463 	ldrbvs	r6, [pc], #-1123	; e20 <_start-0x7ffff1e0>
     e1c:	31617461 	cmncc	r1, r1, ror #8
     e20:	4d430035 	stclmi	0, cr0, [r3, #-212]	; 0xffffff2c
     e24:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     e28:	6e6e5f66 	cdpvs	15, 6, cr5, cr14, cr6, {3}
     e2c:	4300696d 	movwmi	r6, #2413	; 0x96d
     e30:	6f635f4d 	svcvs	0x00635f4d
     e34:	745f666e 	ldrbvc	r6, [pc], #-1646	; e3c <_start-0x7ffff1c4>
     e38:	5f636370 	svcpl	0x00636370
     e3c:	5f747665 	svcpl	0x00747665
     e40:	5f78756d 	svcpl	0x0078756d
     e44:	335f3633 	cmpcc	pc, #53477376	; 0x3300000
     e48:	4d430039 	stclmi	0, cr0, [r3, #-228]	; 0xffffff1c
     e4c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     e50:	70745f66 	rsbsvc	r5, r4, r6, ror #30
     e54:	655f6363 	ldrbvs	r6, [pc, #-867]	; af9 <_start-0x7ffff507>
     e58:	6d5f7476 	cfldrdvs	mvd7, [pc, #-472]	; c88 <_start-0x7ffff378>
     e5c:	315f7875 	cmpcc	pc, r5, ror r8	; <UNPREDICTABLE>
     e60:	39315f36 	ldmdbcc	r1!, {r1, r2, r4, r5, r8, r9, sl, fp, ip, lr}
     e64:	5f4d4300 	svcpl	0x004d4300
     e68:	735f6262 	cmpvc	pc, #536870918	; 0x20000006
     e6c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
     e70:	5f4d4300 	svcpl	0x004d4300
     e74:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     e78:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     e7c:	655f7265 	ldrbvs	r7, [pc, #-613]	; c1f <_start-0x7ffff3e1>
     e80:	635f7476 	cmpvs	pc, #1979711488	; 0x76000000
     e84:	00747061 	rsbseq	r7, r4, r1, rrx
     e88:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     e8c:	5f666e6f 	svcpl	0x00666e6f
     e90:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0x572
     e94:	73695f74 	cmnvc	r9, #116, 30	; 0x1d0
     e98:	4150006f 	cmpmi	r0, pc, rrx
     e9c:	65735f44 	ldrbvs	r5, [r3, #-3908]!	; 0xf44
     ea0:	646f4d74 	strbtvs	r4, [pc], #-3444	; ea8 <_start-0x7ffff158>
     ea4:	4d430065 	stclmi	0, cr0, [r3, #-404]	; 0xfffffe6c
     ea8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     eac:	636c5f66 	cmnvs	ip, #408	; 0x198
     eb0:	61645f64 	cmnvs	r4, r4, ror #30
     eb4:	00306174 	eorseq	r6, r0, r4, ror r1
     eb8:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     ebc:	5f666e6f 	svcpl	0x00666e6f
     ec0:	5f64636c 	svcpl	0x0064636c
     ec4:	61746164 	cmnvs	r4, r4, ror #2
     ec8:	4d430031 	stclmi	0, cr0, [r3, #-196]	; 0xffffff3c
     ecc:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     ed0:	636c5f66 	cmnvs	ip, #408	; 0x198
     ed4:	61645f64 	cmnvs	r4, r4, ror #30
     ed8:	00326174 	eorseq	r6, r2, r4, ror r1
     edc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     ee0:	5f666e6f 	svcpl	0x00666e6f
     ee4:	5f64636c 	svcpl	0x0064636c
     ee8:	61746164 	cmnvs	r4, r4, ror #2
     eec:	4d430033 	stclmi	0, cr0, [r3, #-204]	; 0xffffff34
     ef0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     ef4:	636c5f66 	cmnvs	ip, #408	; 0x198
     ef8:	61645f64 	cmnvs	r4, r4, ror #30
     efc:	00346174 	eorseq	r6, r4, r4, ror r1
     f00:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     f04:	5f666e6f 	svcpl	0x00666e6f
     f08:	5f64636c 	svcpl	0x0064636c
     f0c:	61746164 	cmnvs	r4, r4, ror #2
     f10:	4d430035 	stclmi	0, cr0, [r3, #-212]	; 0xffffff2c
     f14:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
     f18:	636c5f66 	cmnvs	ip, #408	; 0x198
     f1c:	61645f64 	cmnvs	r4, r4, ror #30
     f20:	00366174 	eorseq	r6, r6, r4, ror r1
     f24:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     f28:	5f666e6f 	svcpl	0x00666e6f
     f2c:	5f64636c 	svcpl	0x0064636c
     f30:	61746164 	cmnvs	r4, r4, ror #2
     f34:	4d430037 	stclmi	0, cr0, [r3, #-220]	; 0xffffff24
     f38:	726d735f 	rsbvc	r7, sp, #2080374785	; 0x7c000001
     f3c:	74635f74 	strbtvc	r5, [r3], #-3956	; 0xf74
     f40:	43006c72 	movwmi	r6, #3186	; 0xc72
     f44:	6f635f4d 	svcvs	0x00635f4d
     f48:	6c5f666e 	mrrcvs	6, 6, r6, pc, cr14	; <UNPREDICTABLE>
     f4c:	645f6463 	ldrbvs	r6, [pc], #-1123	; f54 <_start-0x7ffff0ac>
     f50:	39617461 	stmdbcc	r1!, {r0, r5, r6, sl, ip, sp, lr}^
     f54:	5f4d4300 	svcpl	0x004d4300
     f58:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     f5c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     f60:	725f3074 	subsvc	r3, pc, #116	; 0x74
     f64:	006e7374 	rsbeq	r7, lr, r4, ror r3
     f68:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
     f6c:	5f666e6f 	svcpl	0x00666e6f
     f70:	5f726464 	svcpl	0x00726464
     f74:	61746164 	cmnvs	r4, r4, ror #2
     f78:	6f695f31 	svcvs	0x00695f31
     f7c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
     f80:	5f4d4300 	svcpl	0x004d4300
     f84:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     f88:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
     f8c:	64615f63 	strbtvs	r5, [r1], #-3939	; 0xf63
     f90:	615f6e76 	cmpvs	pc, r6, ror lr	; <UNPREDICTABLE>
     f94:	4300656c 	movwmi	r6, #1388	; 0x56c
     f98:	6f635f4d 	svcvs	0x00635f4d
     f9c:	695f666e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
     fa0:	6d5f6370 	ldclvs	3, cr6, [pc, #-448]	; de8 <_start-0x7ffff218>
     fa4:	725f6773 	subsvc	r6, pc, #30146560	; 0x1cc0000
     fa8:	00376765 	eorseq	r6, r7, r5, ror #14
     fac:	645f4d43 	ldrbvs	r4, [pc], #-3395	; fb4 <_start-0x7ffff04c>
     fb0:	5f6c6c70 	svcpl	0x006c6c70
     fb4:	5f727770 	svcpl	0x00727770
     fb8:	735f7773 	cmpvc	pc, #30146560	; 0x1cc0000
     fbc:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
     fc0:	4d430073 	stclmi	0, cr0, [r3, #-460]	; 0xfffffe34
     fc4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     fc8:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
     fcc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     fd0:	305f7974 	subscc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
     fd4:	5f4d4300 	svcpl	0x004d4300
     fd8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     fdc:	63646d5f 	cmnvs	r4, #6080	; 0x17c0
     fe0:	5f4d4300 	svcpl	0x004d4300
     fe4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     fe8:	69696d5f 	stmdbvs	r9!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     fec:	78745f31 	ldmdavc	r4!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     ff0:	6b6c635f 	blvs	1b19d74 <_start-0x7e4e628c>
     ff4:	5f4d4300 	svcpl	0x004d4300
     ff8:	5f75706d 	svcpl	0x0075706d
     ffc:	6f646c73 	svcvs	0x00646c73
    1000:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1004:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    1008:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    100c:	6d655f66 	stclvs	15, cr5, [r5, #-408]!	; 0xfffffe68
    1010:	43003075 	movwmi	r3, #117	; 0x75
    1014:	6f635f4d 	svcvs	0x00635f4d
    1018:	655f666e 	ldrbvs	r6, [pc, #-1646]	; 9b2 <_start-0x7ffff64e>
    101c:	0031756d 	eorseq	r7, r1, sp, ror #10
    1020:	544e4f43 	strbpl	r4, [lr], #-3907	; 0xf43
    1024:	5f4c4f52 	svcpl	0x004c4f52
    1028:	55444f4d 	strbpl	r4, [r4, #-3917]	; 0xf4d
    102c:	525f454c 	subspl	r4, pc, #76, 10	; 0x13000000
    1030:	745f4745 	ldrbvc	r4, [pc], #-1861	; 1038 <_start-0x7fffefc8>
    1034:	5f4d4300 	svcpl	0x004d4300
    1038:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    103c:	64636c5f 	strbtvs	r6, [r3], #-3167	; 0xc5f
    1040:	6c63705f 	stclvs	0, cr7, [r3], #-380	; 0xfffffe84
    1044:	4d43006b 	stclmi	0, cr0, [r3, #-428]	; 0xfffffe54
    1048:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    104c:	74725f66 	ldrbtvc	r5, [r2], #-3942	; 0xf66
    1050:	616b5f63 	cmnvs	fp, r3, ror #30
    1054:	5f6f646c 	svcpl	0x006f646c
    1058:	006e6e65 	rsbeq	r6, lr, r5, ror #28
    105c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1060:	5f666e6f 	svcpl	0x00666e6f
    1064:	63637074 	cmnvs	r3, #116	; 0x74
    1068:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
    106c:	78756d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    1070:	5f38325f 	svcpl	0x0038325f
    1074:	43003133 	movwmi	r3, #307	; 0x133
    1078:	6f635f4d 	svcvs	0x00635f4d
    107c:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; ecc <_start-0x7ffff134>
    1080:	5f30636d 	svcpl	0x0030636d
    1084:	30746164 	rsbscc	r6, r4, r4, ror #2
    1088:	5f4d4300 	svcpl	0x004d4300
    108c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1090:	636d6d5f 	cmnvs	sp, #6080	; 0x17c0
    1094:	61645f30 	cmnvs	r4, r0, lsr pc
    1098:	43003174 	movwmi	r3, #372	; 0x174
    109c:	77685f4d 	strbvc	r5, [r8, -sp, asr #30]!
    10a0:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0x55f
    10a4:	735f746e 	cmpvc	pc, #1845493760	; 0x6e000000
    10a8:	675f6c65 	ldrbvs	r6, [pc, -r5, ror #24]
    10ac:	00317072 	eorseq	r7, r1, r2, ror r0
    10b0:	685f4d43 	ldmdavs	pc, {r0, r1, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    10b4:	76655f77 	uqsub16vc	r5, r5, r7
    10b8:	5f746e65 	svcpl	0x00746e65
    10bc:	5f6c6573 	svcpl	0x006c6573
    10c0:	32707267 	rsbscc	r7, r0, #1879048198	; 0x70000006
    10c4:	5f4d4300 	svcpl	0x004d4300
    10c8:	655f7768 	ldrbvs	r7, [pc, #-1896]	; 968 <_start-0x7ffff698>
    10cc:	746e6576 	strbtvc	r6, [lr], #-1398	; 0x576
    10d0:	6c65735f 	stclvs	3, cr7, [r5], #-380	; 0xfffffe84
    10d4:	7072675f 	rsbsvc	r6, r2, pc, asr r7
    10d8:	4d430033 	stclmi	0, cr0, [r3, #-204]	; 0xffffff34
    10dc:	5f77685f 	svcpl	0x0077685f
    10e0:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    10e4:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xf74
    10e8:	72675f6c 	rsbvc	r5, r7, #108, 30	; 0x1b0
    10ec:	43003470 	movwmi	r3, #1136	; 0x470
    10f0:	65645f4d 	strbvs	r5, [r4, #-3917]!	; 0xf4d
    10f4:	6c737065 	ldclvs	0, cr7, [r3], #-404	; 0xfffffe6c
    10f8:	5f706565 	svcpl	0x00706565
    10fc:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
    1100:	5f4d4300 	svcpl	0x004d4300
    1104:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1108:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
    110c:	70775f63 	rsbsvc	r5, r7, r3, ror #30
    1110:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
    1114:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1118:	6d705f66 	ldclvs	15, cr5, [r0, #-408]!	; 0xfffffe68
    111c:	705f6369 	subsvc	r6, pc, r9, ror #6
    1120:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
    1124:	006e655f 	rsbeq	r6, lr, pc, asr r5
    1128:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    112c:	5f666e6f 	svcpl	0x00666e6f
    1130:	74726175 	ldrbtvc	r6, [r2], #-373	; 0x175
    1134:	74725f31 	ldrbtvc	r5, [r2], #-3889	; 0xf31
    1138:	43006e73 	movwmi	r6, #3699	; 0xe73
    113c:	6f635f4d 	svcvs	0x00635f4d
    1140:	775f666e 	ldrbvc	r6, [pc, -lr, ror #12]
    1144:	726d7261 	rsbvc	r7, sp, #268435462	; 0x10000006
    1148:	006e7473 	rsbeq	r7, lr, r3, ror r4
    114c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1150:	5f666e6f 	svcpl	0x00666e6f
    1154:	30636d6d 	rsbcc	r6, r3, sp, ror #26
    1158:	6b6c635f 	blvs	1b19edc <_start-0x7e4e6124>
    115c:	5f4d4300 	svcpl	0x004d4300
    1160:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1164:	736d745f 	cmnvc	sp, #1593835520	; 0x5f000000
    1168:	5f4d4300 	svcpl	0x004d4300
    116c:	43746567 	cmnmi	r4, #432013312	; 0x19c00000
    1170:	4d6c7274 	sfmmi	f7, 2, [ip, #-464]!	; 0xfffffe30
    1174:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	; 0xfffffe44
    1178:	4d430065 	stclmi	0, cr0, [r3, #-404]	; 0xfffffe6c
    117c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1180:	64615f66 	strbtvs	r5, [r1], #-3942	; 0xf66
    1184:	76655f63 	strbtvc	r5, [r5], -r3, ror #30
    1188:	61635f74 	smcvs	13812	; 0x35f4
    118c:	43007470 	movwmi	r7, #1136	; 0x470
    1190:	6f635f4d 	svcvs	0x00635f4d
    1194:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
    1198:	5f636d70 	svcpl	0x00636d70
    119c:	006e6577 	rsbeq	r6, lr, r7, ror r5
    11a0:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    11a4:	5f666e6f 	svcpl	0x00666e6f
    11a8:	636d7067 	cmnvs	sp, #103	; 0x67
    11ac:	6e73635f 	mrcvs	3, 3, r6, cr3, cr15, {2}
    11b0:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
    11b4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    11b8:	70675f66 	rsbvc	r5, r7, r6, ror #30
    11bc:	615f636d 	cmpvs	pc, sp, ror #6
    11c0:	43003031 	movwmi	r3, #49	; 0x31
    11c4:	6f635f4d 	svcvs	0x00635f4d
    11c8:	645f666e 	ldrbvs	r6, [pc], #-1646	; 11d0 <_start-0x7fffee30>
    11cc:	645f7264 	ldrbvs	r7, [pc], #-612	; 11d4 <_start-0x7fffee2c>
    11d0:	30617461 	rsbcc	r7, r1, r1, ror #8
    11d4:	636f695f 	cmnvs	pc, #1556480	; 0x17c000
    11d8:	006c7274 	rsbeq	r7, ip, r4, ror r2
    11dc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    11e0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0x26f
    11e4:	62765f78 	rsbsvs	r5, r6, #120, 30	; 0x1e0
    11e8:	6f646c62 	svcvs	0x00646c62
    11ec:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    11f0:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    11f4:	6464765f 	strbtvs	r7, [r4], #-1631	; 0x65f
    11f8:	75706d5f 	ldrbvc	r6, [r0, #-3423]!	; 0xd5f
    11fc:	70706f5f 	rsbsvc	r6, r0, pc, asr pc
    1200:	3035305f 	eorscc	r3, r5, pc, asr r0
    1204:	5f4d4300 	svcpl	0x004d4300
    1208:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    120c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    1210:	745f3174 	ldrbvc	r3, [pc], #-372	; 1218 <_start-0x7fffede8>
    1214:	43006478 	movwmi	r6, #1144	; 0x478
    1218:	6f635f4d 	svcvs	0x00635f4d
    121c:	745f666e 	ldrbvc	r6, [pc], #-1646	; 1224 <_start-0x7fffeddc>
    1220:	5f636370 	svcpl	0x00636370
    1224:	5f747665 	svcpl	0x00747665
    1228:	5f78756d 	svcpl	0x0078756d
    122c:	31315f38 	teqcc	r1, r8, lsr pc
    1230:	5f4d4300 	svcpl	0x004d4300
    1234:	5f63616d 	svcpl	0x0063616d
    1238:	5f316469 	svcpl	0x00316469
    123c:	43006f6c 	movwmi	r6, #3948	; 0xf6c
    1240:	6f635f4d 	svcvs	0x00635f4d
    1244:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; 1094 <_start-0x7fffef6c>
    1248:	70736163 	rsbsvc	r6, r3, r3, ror #2
    124c:	73665f30 	cmnvc	r6, #48, 30	; 0xc0
    1250:	4d430072 	stclmi	0, cr0, [r3, #-456]	; 0xfffffe38
    1254:	6464765f 	strbtvs	r7, [r4], #-1631	; 0x65f
    1258:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    125c:	706f5f65 	rsbvc	r5, pc, r5, ror #30
    1260:	35305f70 	ldrcc	r5, [r0, #-3952]!	; 0xf70
    1264:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
    1268:	6e61625f 	mcrvs	2, 3, r6, cr1, cr15, {2}
    126c:	70616764 	rsbvc	r6, r1, r4, ror #14
    1270:	6972745f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    1274:	4d43006d 	stclmi	0, cr0, [r3, #-436]	; 0xfffffe4c
    1278:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    127c:	64645f66 	strbtvs	r5, [r4], #-3942	; 0xf66
    1280:	6f695f72 	svcvs	0x00695f72
    1284:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1288:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    128c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1290:	636d5f66 	cmnvs	sp, #408	; 0x198
    1294:	30707361 	rsbscc	r7, r0, r1, ror #6
    1298:	7873665f 	ldmdavc	r3!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
    129c:	5f4d4300 	svcpl	0x004d4300
    12a0:	63747074 	cmnvs	r4, #116	; 0x74
    12a4:	6766635f 			; <UNDEFINED> instruction: 0x6766635f
    12a8:	5f4d4300 	svcpl	0x004d4300
    12ac:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    12b0:	636d6d5f 	cmnvs	sp, #6080	; 0x17c0
    12b4:	6d635f30 	stclvs	15, cr5, [r3, #-192]!	; 0xffffff40
    12b8:	4d430064 	stclmi	0, cr0, [r3, #-400]	; 0xfffffe70
    12bc:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    12c0:	74725f66 	ldrbtvc	r5, [r2], #-3942	; 0xf66
    12c4:	77705f63 	ldrbvc	r5, [r0, -r3, ror #30]!
    12c8:	726e6f72 	rsbvc	r6, lr, #456	; 0x1c8
    12cc:	006e7473 	rsbeq	r7, lr, r3, ror r4
    12d0:	6d5f4d43 	ldclvs	13, cr4, [pc, #-268]	; 11cc <_start-0x7fffee34>
    12d4:	695f6361 	ldmdbvs	pc, {r0, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    12d8:	685f3164 	ldmdavs	pc, {r2, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    12dc:	4d430069 	stclmi	0, cr0, [r3, #-420]	; 0xfffffe5c
    12e0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    12e4:	78655f66 	stmdavc	r5!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    12e8:	61775f74 	cmnvs	r7, r4, ror pc
    12ec:	7075656b 	rsbsvc	r6, r5, fp, ror #10
    12f0:	5f4d4300 	svcpl	0x004d4300
    12f4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    12f8:	69696d5f 	stmdbvs	r9!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    12fc:	78725f31 	ldmdavc	r2!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
    1300:	0076645f 	rsbseq	r6, r6, pc, asr r4
    1304:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1308:	5f666e6f 	svcpl	0x00666e6f
    130c:	5f726464 	svcpl	0x00726464
    1310:	32646d63 	rsbcc	r6, r4, #6336	; 0x18c0
    1314:	636f695f 	cmnvs	pc, #1556480	; 0x17c000
    1318:	006c7274 	rsbeq	r7, ip, r4, ror r2
    131c:	6d5f4d43 	ldclvs	13, cr4, [pc, #-268]	; 1218 <_start-0x7fffede8>
    1320:	73737570 	cmnvc	r3, #112, 10	; 0x1c000000
    1324:	5f77685f 	svcpl	0x0077685f
    1328:	75626564 	strbvc	r6, [r2, #-1380]!	; 0x564
    132c:	65735f67 	ldrbvs	r5, [r3, #-3943]!	; 0xf67
    1330:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    1334:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1338:	696d5f66 	stmdbvs	sp!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    133c:	725f3169 	subsvc	r3, pc, #1073741850	; 0x4000001a
    1340:	00326478 	eorseq	r6, r2, r8, ror r4
    1344:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1348:	5f666e6f 	svcpl	0x00666e6f
    134c:	636d7067 	cmnvs	sp, #103	; 0x67
    1350:	6e65625f 	mcrvs	2, 3, r6, cr5, cr15, {2}
    1354:	6c635f30 	stclvs	15, cr5, [r3], #-192	; 0xffffff40
    1358:	4d430065 	stclmi	0, cr0, [r3, #-404]	; 0xfffffe6c
    135c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1360:	70735f66 	rsbsvc	r5, r3, r6, ror #30
    1364:	635f3069 	cmpvs	pc, #105	; 0x69
    1368:	43003073 	movwmi	r3, #115	; 0x73
    136c:	6f635f4d 	svcvs	0x00635f4d
    1370:	735f666e 	cmpvc	pc, #115343360	; 0x6e00000
    1374:	5f306970 	svcpl	0x00306970
    1378:	00317363 	eorseq	r7, r1, r3, ror #6
    137c:	6d5f4d43 	ldclvs	13, cr4, [pc, #-268]	; 1278 <_start-0x7fffed88>
    1380:	73737570 	cmnvc	r3, #112, 10	; 0x1c000000
    1384:	5f77685f 	svcpl	0x0077685f
    1388:	5f676264 	svcpl	0x00676264
    138c:	6f666e69 	svcvs	0x00666e69
    1390:	5f4d4300 	svcpl	0x004d4300
    1394:	5f63616d 	svcpl	0x0063616d
    1398:	5f306469 	svcpl	0x00306469
    139c:	43006f6c 	movwmi	r6, #3948	; 0xf6c
    13a0:	6f635f4d 	svcvs	0x00635f4d
    13a4:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; 11f4 <_start-0x7fffee0c>
    13a8:	78745f33 	ldmdavc	r4!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    13ac:	655f7665 	ldrbvs	r7, [pc, #-1637]	; d4f <_start-0x7ffff2b1>
    13b0:	4300696f 	movwmi	r6, #2415	; 0x96f
    13b4:	6f635f4d 	svcvs	0x00635f4d
    13b8:	6f72746e 	svcvs	0x0072746e
    13bc:	77685f6c 	strbvc	r5, [r8, -ip, ror #30]!
    13c0:	6f666e69 	svcvs	0x00666e69
    13c4:	5f4d4300 	svcpl	0x004d4300
    13c8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    13cc:	64636c5f 	strbtvs	r6, [r3], #-3167	; 0xc5f
    13d0:	5f63615f 	svcpl	0x0063615f
    13d4:	73616962 	cmnvc	r1, #1605632	; 0x188000
    13d8:	006e655f 	rsbeq	r6, lr, pc, asr r5
    13dc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    13e0:	5f666e6f 	svcpl	0x00666e6f
    13e4:	70616365 	rsbvc	r6, r1, r5, ror #6
    13e8:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
    13ec:	7061635f 	rsbvc	r6, r1, pc, asr r3
    13f0:	4d430074 	stclmi	0, cr0, [r3, #-464]	; 0xfffffe30
    13f4:	6464765f 	strbtvs	r7, [r4], #-1631	; 0x65f
    13f8:	75706d5f 	ldrbvc	r6, [r0, #-3423]!	; 0xd5f
    13fc:	70706f5f 	rsbsvc	r6, r0, pc, asr pc
    1400:	3030315f 	eorscc	r3, r0, pc, asr r1
    1404:	5f4d4300 	svcpl	0x004d4300
    1408:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    140c:	69646d5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    1410:	4d43006f 	stclmi	0, cr0, [r3, #-444]	; 0xfffffe44
    1414:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1418:	64645f66 	strbtvs	r5, [r4], #-3942	; 0xf66
    141c:	6d635f72 	stclvs	15, cr5, [r3, #-456]!	; 0xfffffe38
    1420:	695f3164 	ldmdbvs	pc, {r2, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1424:	7274636f 	rsbsvc	r6, r4, #-1140850687	; 0xbc000001
    1428:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    142c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1430:	72745f66 	rsbsvc	r5, r4, #408	; 0x198
    1434:	006e7473 	rsbeq	r7, lr, r3, ror r4
    1438:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    143c:	5f666e6f 	svcpl	0x00666e6f
    1440:	63637074 	cmnvs	r3, #116	; 0x74
    1444:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
    1448:	78756d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    144c:	5f32355f 	svcpl	0x0032355f
    1450:	43003535 	movwmi	r3, #1333	; 0x535
    1454:	6f635f4d 	svcvs	0x00635f4d
    1458:	745f666e 	ldrbvc	r6, [pc], #-1646	; 1460 <_start-0x7fffeba0>
    145c:	5f636370 	svcpl	0x00636370
    1460:	5f747665 	svcpl	0x00747665
    1464:	5f78756d 	svcpl	0x0078756d
    1468:	345f3034 	ldrbcc	r3, [pc], #-52	; 1470 <_start-0x7fffeb90>
    146c:	4d430033 	stclmi	0, cr0, [r3, #-204]	; 0xffffff34
    1470:	6464765f 	strbtvs	r7, [r4], #-1631	; 0x65f
    1474:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    1478:	706f5f65 	rsbvc	r5, pc, r5, ror #30
    147c:	30315f70 	eorscc	r5, r1, r0, ror pc
    1480:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
    1484:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1488:	696d5f66 	stmdbvs	sp!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    148c:	725f3169 	subsvc	r3, pc, #1073741850	; 0x4000001a
    1490:	6c635f78 	stclvs	15, cr5, [r3], #-480	; 0xfffffe20
    1494:	4d43006b 	stclmi	0, cr0, [r3, #-428]	; 0xfffffe54
    1498:	65726d5f 	ldrbvs	r6, [r2, #-3423]!	; 0xd5f
    149c:	69727071 	ldmdbvs	r2!, {r0, r4, r5, r6, ip, sp, lr}^
    14a0:	00315f6f 	eorseq	r5, r1, pc, ror #30
    14a4:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    14a8:	5f666e6f 	svcpl	0x00666e6f
    14ac:	63637074 	cmnvs	r3, #116	; 0x74
    14b0:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
    14b4:	78756d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    14b8:	5f32335f 	svcpl	0x0032335f
    14bc:	43003533 	movwmi	r3, #1331	; 0x533
    14c0:	6f635f4d 	svcvs	0x00635f4d
    14c4:	745f666e 	ldrbvc	r6, [pc], #-1646	; 14cc <_start-0x7fffeb34>
    14c8:	5f636370 	svcpl	0x00636370
    14cc:	5f747665 	svcpl	0x00747665
    14d0:	5f78756d 	svcpl	0x0078756d
    14d4:	315f3231 	cmpcc	pc, r1, lsr r2	; <UNPREDICTABLE>
    14d8:	4d430035 	stclmi	0, cr0, [r3, #-212]	; 0xffffff2c
    14dc:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    14e0:	71635f66 	cmnvc	r3, r6, ror #30
    14e4:	65746564 	ldrbvs	r6, [r4, #-1380]!	; 0x564
    14e8:	735f7463 	cmpvc	pc, #1660944384	; 0x63000000
    14ec:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    14f0:	4d430073 	stclmi	0, cr0, [r3, #-460]	; 0xfffffe34
    14f4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    14f8:	61755f66 	cmnvs	r5, r6, ror #30
    14fc:	5f307472 	svcpl	0x00307472
    1500:	00647872 	rsbeq	r7, r4, r2, ror r8
    1504:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1508:	5f666e6f 	svcpl	0x00666e6f
    150c:	3169696d 	cmncc	r9, sp, ror #18
    1510:	5f78725f 	svcpl	0x0078725f
    1514:	43007265 	movwmi	r7, #613	; 0x265
    1518:	6f635f4d 	svcvs	0x00635f4d
    151c:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; 136c <_start-0x7fffec94>
    1520:	5f30636d 	svcpl	0x0030636d
    1524:	32746164 	rsbscc	r6, r4, #100, 2
    1528:	5f4d4300 	svcpl	0x004d4300
    152c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1530:	636d6d5f 	cmnvs	sp, #6080	; 0x17c0
    1534:	61645f30 	cmnvs	r4, r0, lsr pc
    1538:	43003374 	movwmi	r3, #884	; 0x374
    153c:	6f635f4d 	svcvs	0x00635f4d
    1540:	745f666e 	ldrbvc	r6, [pc], #-1646	; 1548 <_start-0x7fffeab8>
    1544:	5f636370 	svcpl	0x00636370
    1548:	5f747665 	svcpl	0x00747665
    154c:	5f78756d 	svcpl	0x0078756d
    1550:	325f3432 	subscc	r3, pc, #838860800	; 0x32000000
    1554:	4d430037 	stclmi	0, cr0, [r3, #-220]	; 0xffffff24
    1558:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    155c:	636d5f66 	cmnvs	sp, #408	; 0x198
    1560:	30707361 	rsbscc	r7, r0, r1, ror #6
    1564:	6368615f 	cmnvs	r8, #-1073741801	; 0xc0000017
    1568:	00726b6c 	rsbseq	r6, r2, ip, ror #22
    156c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1570:	5f666e6f 	svcpl	0x00666e6f
    1574:	5f64636c 	svcpl	0x0064636c
    1578:	6e797368 	cdpvs	3, 7, cr7, cr9, cr8, {3}
    157c:	4d430063 	stclmi	0, cr0, [r3, #-396]	; 0xfffffe74
    1580:	736f6d5f 	cmnvc	pc, #6080	; 0x17c0
    1584:	74635f63 	strbtvc	r5, [r3], #-3939	; 0xf63
    1588:	43006c72 	movwmi	r6, #3186	; 0xc72
    158c:	6f635f4d 	svcvs	0x00635f4d
    1590:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; 13e0 <_start-0x7fffec20>
    1594:	5f316969 	svcpl	0x00316969
    1598:	006c6f63 	rsbeq	r6, ip, r3, ror #30
    159c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    15a0:	5f666e6f 	svcpl	0x00666e6f
    15a4:	7361636d 	cmnvc	r1, #-1275068415	; 0xb4000001
    15a8:	615f3070 	cmpvs	pc, r0, ror r0	; <UNPREDICTABLE>
    15ac:	6b6c6368 	blvs	1b1a354 <_start-0x7e4e5cac>
    15b0:	4d430078 	stclmi	0, cr0, [r3, #-480]	; 0xfffffe20
    15b4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    15b8:	64645f66 	strbtvs	r5, [r4], #-3942	; 0xf66
    15bc:	6b635f72 	blvs	18d938c <_start-0x7e726c74>
    15c0:	74635f65 	strbtvc	r5, [r3], #-3941	; 0xf65
    15c4:	43006c72 	movwmi	r6, #3186	; 0xc72
    15c8:	6f635f4d 	svcvs	0x00635f4d
    15cc:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
    15d0:	5f636d70 	svcpl	0x00636d70
    15d4:	00313161 	eorseq	r3, r1, r1, ror #2
    15d8:	765f4d43 	ldrbvc	r4, [pc], -r3, asr #26
    15dc:	6d5f6464 	cfldrdvs	mvd6, [pc, #-400]	; 1454 <_start-0x7fffebac>
    15e0:	6f5f7570 	svcvs	0x005f7570
    15e4:	745f7070 	ldrbvc	r7, [pc], #-112	; 15ec <_start-0x7fffea14>
    15e8:	6f627275 	svcvs	0x00627275
    15ec:	5f4d4300 	svcpl	0x004d4300
    15f0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    15f4:	6370695f 	cmnvs	r0, #1556480	; 0x17c000
    15f8:	67736d5f 			; <UNDEFINED> instruction: 0x67736d5f
    15fc:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    1600:	4d430031 	stclmi	0, cr0, [r3, #-196]	; 0xffffff3c
    1604:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1608:	61755f66 	cmnvs	r5, r6, ror #30
    160c:	5f317472 	svcpl	0x00317472
    1610:	00647872 	rsbeq	r7, r4, r2, ror r8
    1614:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1618:	5f666e6f 	svcpl	0x00666e6f
    161c:	5f637069 	svcpl	0x00637069
    1620:	5f67736d 	svcpl	0x0067736d
    1624:	33676572 	cmncc	r7, #478150656	; 0x1c800000
    1628:	5f4d4300 	svcpl	0x004d4300
    162c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1630:	6370695f 	cmnvs	r0, #1556480	; 0x17c000
    1634:	67736d5f 			; <UNDEFINED> instruction: 0x67736d5f
    1638:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    163c:	4d430034 	stclmi	0, cr0, [r3, #-208]	; 0xffffff30
    1640:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1644:	61755f66 	cmnvs	r5, r6, ror #30
    1648:	5f307472 	svcpl	0x00307472
    164c:	00647874 	rsbeq	r7, r4, r4, ror r8
    1650:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1654:	5f666e6f 	svcpl	0x00666e6f
    1658:	63637074 	cmnvs	r3, #116	; 0x74
    165c:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
    1660:	78756d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    1664:	5f36355f 	svcpl	0x0036355f
    1668:	43003935 	movwmi	r3, #2357	; 0x935
    166c:	6f635f4d 	svcvs	0x00635f4d
    1670:	675f666e 	ldrbvs	r6, [pc, -lr, ror #12]
    1674:	5f636d70 	svcpl	0x00636d70
    1678:	006b6c63 	rsbeq	r6, fp, r3, ror #24
    167c:	645f4d43 	ldrbvs	r4, [pc], #-3395	; 1684 <_start-0x7fffe97c>
    1680:	5f6e6163 	svcpl	0x006e6163
    1684:	696d6172 	stmdbvs	sp!, {r1, r4, r5, r6, r8, sp, lr}^
    1688:	0074696e 	rsbseq	r6, r4, lr, ror #18
    168c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1690:	5f666e6f 	svcpl	0x00666e6f
    1694:	31627375 	smccc	10037	; 0x2735
    1698:	7672645f 			; <UNDEFINED> instruction: 0x7672645f
    169c:	73756276 	cmnvc	r5, #1610612743	; 0x60000007
    16a0:	5f4d4300 	svcpl	0x004d4300
    16a4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    16a8:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
    16ac:	656f5f63 	strbvs	r5, [pc, #-3939]!	; 751 <_start-0x7ffff8af>
    16b0:	65725f6e 	ldrbvs	r5, [r2, #-3950]!	; 0xf6e
    16b4:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
    16b8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    16bc:	696d5f66 	stmdbvs	sp!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    16c0:	745f3169 	ldrbvc	r3, [pc], #-361	; 16c8 <_start-0x7fffe938>
    16c4:	00306478 	eorseq	r6, r0, r8, ror r4
    16c8:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    16cc:	5f666e6f 	svcpl	0x00666e6f
    16d0:	3169696d 	cmncc	r9, sp, ror #18
    16d4:	6478745f 	ldrbtvs	r7, [r8], #-1119	; 0x45f
    16d8:	4d430031 	stclmi	0, cr0, [r3, #-196]	; 0xffffff3c
    16dc:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    16e0:	696d5f66 	stmdbvs	sp!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    16e4:	745f3169 	ldrbvc	r3, [pc], #-361	; 16ec <_start-0x7fffe914>
    16e8:	00326478 	eorseq	r6, r2, r8, ror r4
    16ec:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    16f0:	5f666e6f 	svcpl	0x00666e6f
    16f4:	3169696d 	cmncc	r9, sp, ror #18
    16f8:	6478745f 	ldrbtvs	r7, [r8], #-1119	; 0x45f
    16fc:	4d430033 	stclmi	0, cr0, [r3, #-204]	; 0xffffff34
    1700:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1704:	70675f66 	rsbvc	r5, r7, r6, ror #30
    1708:	625f636d 	subsvs	r6, pc, #-1275068415	; 0xb4000001
    170c:	00316e65 	eorseq	r6, r1, r5, ror #28
    1710:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1714:	5f666e6f 	svcpl	0x00666e6f
    1718:	66657276 			; <UNDEFINED> instruction: 0x66657276
    171c:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1720:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    1724:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1728:	6d735f66 	ldclvs	15, cr5, [r3, #-408]!	; 0xfffffe68
    172c:	43003261 	movwmi	r3, #609	; 0x261
    1730:	6f635f4d 	svcvs	0x00635f4d
    1734:	735f666e 	cmpvc	pc, #115343360	; 0x6e00000
    1738:	5f306970 	svcpl	0x00306970
    173c:	6b6c6373 	blvs	1b1a510 <_start-0x7e4e5af0>
    1740:	5f4d4300 	svcpl	0x004d4300
    1744:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1748:	6370695f 	cmnvs	r0, #1556480	; 0x17c000
    174c:	67736d5f 			; <UNDEFINED> instruction: 0x67736d5f
    1750:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    1754:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
    1758:	696d675f 	stmdbvs	sp!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    175c:	65735f69 	ldrbvs	r5, [r3, #-3945]!	; 0xf69
    1760:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    1764:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1768:	70695f66 	rsbvc	r5, r9, r6, ror #30
    176c:	736d5f63 	cmnvc	sp, #396	; 0x18c
    1770:	65725f67 	ldrbvs	r5, [r2, #-3943]!	; 0xf67
    1774:	43003267 	movwmi	r3, #615	; 0x267
    1778:	6c635f4d 	stclvs	15, cr5, [r3], #-308	; 0xfffffecc
    177c:	6b32336b 	blvs	c8e530 <_start-0x7f371ad0>
    1780:	72766964 	rsbsvc	r6, r6, #100, 18	; 0x190000
    1784:	6f697461 	svcvs	0x00697461
    1788:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    178c:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    1790:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1794:	73755f66 	cmnvc	r5, #408	; 0x198
    1798:	645f3062 	ldrbvs	r3, [pc], #-98	; 17a0 <_start-0x7fffe860>
    179c:	62767672 	rsbsvs	r7, r6, #119537664	; 0x7200000
    17a0:	43007375 	movwmi	r7, #885	; 0x375
    17a4:	6f635f4d 	svcvs	0x00635f4d
    17a8:	695f666e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
    17ac:	6d5f6370 	ldclvs	3, cr6, [pc, #-448]	; 15f4 <_start-0x7fffea0c>
    17b0:	725f6773 	subsvc	r6, pc, #30146560	; 0x1cc0000
    17b4:	00356765 	eorseq	r6, r5, r5, ror #14
    17b8:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    17bc:	5f666e6f 	svcpl	0x00666e6f
    17c0:	5f637069 	svcpl	0x00637069
    17c4:	5f67736d 	svcpl	0x0067736d
    17c8:	36676572 			; <UNDEFINED> instruction: 0x36676572
    17cc:	5f4d4300 	svcpl	0x004d4300
    17d0:	5f766564 	svcpl	0x00766564
    17d4:	74616566 	strbtvc	r6, [r1], #-1382	; 0x566
    17d8:	00657275 	rsbeq	r7, r5, r5, ror r2
    17dc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    17e0:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    17e4:	6d5f6c6f 	ldclvs	12, cr6, [pc, #-444]	; 1630 <_start-0x7fffe9d0>
    17e8:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	; 0xfffffe44
    17ec:	6f6d0065 	svcvs	0x006d0065
    17f0:	43006564 	movwmi	r6, #1380	; 0x564
    17f4:	65645f4d 	strbvs	r5, [r4, #-3917]!	; 0xf4d
    17f8:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
    17fc:	0064695f 	rsbeq	r6, r4, pc, asr r9
    1800:	695f4d43 	ldmdbvs	pc, {r0, r1, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    1804:	5f74696e 	svcpl	0x0074696e
    1808:	6f697270 	svcvs	0x00697270
    180c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1810:	4300315f 	movwmi	r3, #351	; 0x15f
    1814:	73755f4d 	cmnvc	r5, #308	; 0x134
    1818:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xf62
    181c:	43003073 	movwmi	r3, #115	; 0x73
    1820:	73755f4d 	cmnvc	r5, #308	; 0x134
    1824:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xf62
    1828:	43003173 	movwmi	r3, #371	; 0x173
    182c:	6f635f4d 	svcvs	0x00635f4d
    1830:	6c5f666e 	mrrcvs	6, 6, r6, pc, cr14	; <UNPREDICTABLE>
    1834:	645f6463 	ldrbvs	r6, [pc], #-1123	; 183c <_start-0x7fffe7c4>
    1838:	31617461 	cmncc	r1, r1, ror #8
    183c:	4d430034 	stclmi	0, cr0, [r3, #-208]	; 0xffffff30
    1840:	6464765f 	strbtvs	r7, [r4], #-1631	; 0x65f
    1844:	75706d5f 	ldrbvc	r6, [r0, #-3423]!	; 0xd5f
    1848:	70706f5f 	rsbsvc	r6, r0, pc, asr pc
    184c:	3032315f 	eorscc	r3, r2, pc, asr r1
    1850:	5f4d4300 	svcpl	0x004d4300
    1854:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1858:	6c70645f 	cfldrdvs	mvd6, [r0], #-380	; 0xfffffe84
    185c:	77705f6c 	ldrbvc	r5, [r0, -ip, ror #30]!
    1860:	77735f72 			; <UNDEFINED> instruction: 0x77735f72
    1864:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1868:	4d43006c 	stclmi	0, cr0, [r3, #-432]	; 0xfffffe50
    186c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1870:	64785f66 	ldrbtvs	r5, [r8], #-3942	; 0xf66
    1874:	655f616d 	ldrbvs	r6, [pc, #-365]	; 170f <_start-0x7fffe8f1>
    1878:	746e6576 	strbtvc	r6, [lr], #-1398	; 0x576
    187c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0x95f
    1880:	43003072 	movwmi	r3, #114	; 0x72
    1884:	6f635f4d 	svcvs	0x00635f4d
    1888:	785f666e 	ldmdavc	pc, {r1, r2, r3, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
    188c:	5f616d64 	svcpl	0x00616d64
    1890:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    1894:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    1898:	00317274 	eorseq	r7, r1, r4, ror r2
    189c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    18a0:	5f666e6f 	svcpl	0x00666e6f
    18a4:	63637074 	cmnvs	r3, #116	; 0x74
    18a8:	7476655f 	ldrbtvc	r6, [r6], #-1375	; 0x55f
    18ac:	78756d5f 	ldmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    18b0:	375f345f 			; <UNDEFINED> instruction: 0x375f345f
    18b4:	5f4d4300 	svcpl	0x004d4300
    18b8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    18bc:	6370745f 	cmnvs	r0, #1593835520	; 0x5f000000
    18c0:	76655f63 	strbtvc	r5, [r5], -r3, ror #30
    18c4:	756d5f74 	strbvc	r5, [sp, #-3956]!	; 0xf74
    18c8:	38345f78 	ldmdacc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}
    18cc:	0031355f 	eorseq	r3, r1, pc, asr r5
    18d0:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    18d4:	5f666e6f 	svcpl	0x00666e6f
    18d8:	30697073 	rsbcc	r7, r9, r3, ror r0
    18dc:	0030645f 	eorseq	r6, r0, pc, asr r4
    18e0:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    18e4:	5f666e6f 	svcpl	0x00666e6f
    18e8:	5f726464 	svcpl	0x00726464
    18ec:	30646d63 	rsbcc	r6, r4, r3, ror #26
    18f0:	636f695f 	cmnvs	pc, #1556480	; 0x17c000
    18f4:	006c7274 	rsbeq	r7, ip, r4, ror r2
    18f8:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    18fc:	5f666e6f 	svcpl	0x00666e6f
    1900:	7361636d 	cmnvc	r1, #-1275068415	; 0xb4000001
    1904:	615f3070 	cmpvs	pc, r0, ror r0	; <UNPREDICTABLE>
    1908:	00307278 	eorseq	r7, r0, r8, ror r2
    190c:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1910:	5f666e6f 	svcpl	0x00666e6f
    1914:	7361636d 	cmnvc	r1, #-1275068415	; 0xb4000001
    1918:	615f3070 	cmpvs	pc, r0, ror r0	; <UNPREDICTABLE>
    191c:	00317278 	eorseq	r7, r1, r8, ror r2
    1920:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1924:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1928:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
    192c:	6f637379 	svcvs	0x00637379
    1930:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1934:	5f4d4300 	svcpl	0x004d4300
    1938:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    193c:	64636c5f 	strbtvs	r6, [r3], #-3167	; 0xc5f
    1940:	7461645f 	strbtvc	r6, [r1], #-1119	; 0x45f
    1944:	43003861 	movwmi	r3, #2145	; 0x861
    1948:	6f635f4d 	svcvs	0x00635f4d
    194c:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; 179c <_start-0x7fffe864>
    1950:	5f316969 	svcpl	0x00316969
    1954:	655f7874 	ldrbvs	r7, [pc, #-2164]	; 10e8 <_start-0x7fffef18>
    1958:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
    195c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1960:	63745f66 	cmnvs	r4, #408	; 0x198
    1964:	4d43006b 	stclmi	0, cr0, [r3, #-428]	; 0xfffffe54
    1968:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    196c:	61755f66 	cmnvs	r5, r6, ror #30
    1970:	5f307472 	svcpl	0x00307472
    1974:	6e737463 	cdpvs	4, 7, cr7, cr3, cr3, {3}
    1978:	5f4d4300 	svcpl	0x004d4300
    197c:	5f627375 	svcpl	0x00627375
    1980:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
    1984:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
    1988:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
    198c:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1990:	4300316c 	movwmi	r3, #364	; 0x16c
    1994:	73755f4d 	cmnvc	r5, #308	; 0x134
    1998:	69765f62 	ldmdbvs	r6!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    199c:	69705f64 	ldmdbvs	r0!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    19a0:	4d430064 	stclmi	0, cr0, [r3, #-400]	; 0xfffffe70
    19a4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    19a8:	32695f66 	rsbcc	r5, r9, #408	; 0x198
    19ac:	735f3063 	cmpvc	pc, #99	; 0x63
    19b0:	43006c63 	movwmi	r6, #3171	; 0xc63
    19b4:	73755f4d 	cmnvc	r5, #308	; 0x134
    19b8:	6b775f62 	blvs	1dd9748 <_start-0x7e2268b8>
    19bc:	635f7075 	cmpvs	pc, #117	; 0x75
    19c0:	006c7274 	rsbeq	r7, ip, r4, ror r2
    19c4:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    19c8:	5f666e6f 	svcpl	0x00666e6f
    19cc:	3169696d 	cmncc	r9, sp, ror #18
    19d0:	6478725f 	ldrbtvs	r7, [r8], #-607	; 0x25f
    19d4:	4d430030 	stclmi	0, cr0, [r3, #-192]	; 0xffffff40
    19d8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    19dc:	696d5f66 	stmdbvs	sp!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    19e0:	725f3169 	subsvc	r3, pc, #1073741850	; 0x4000001a
    19e4:	00316478 	eorseq	r6, r1, r8, ror r4
    19e8:	6d5f4d43 	ldclvs	13, cr4, [pc, #-268]	; 18e4 <_start-0x7fffe71c>
    19ec:	635f756d 	cmpvs	pc, #457179136	; 0x1b400000
    19f0:	43006766 	movwmi	r6, #1894	; 0x766
    19f4:	6f635f4d 	svcvs	0x00635f4d
    19f8:	6d5f666e 	ldclvs	6, cr6, [pc, #-440]	; 1848 <_start-0x7fffe7b8>
    19fc:	5f316969 	svcpl	0x00316969
    1a00:	33647872 	cmncc	r4, #7471104	; 0x720000
    1a04:	5f4d4300 	svcpl	0x004d4300
    1a08:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1a0c:	6964745f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    1a10:	5f4d4300 	svcpl	0x004d4300
    1a14:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1a18:	6370745f 	cmnvs	r0, #1593835520	; 0x5f000000
    1a1c:	76655f63 	strbtvc	r5, [r5], -r3, ror #30
    1a20:	756d5f74 	strbvc	r5, [sp, #-3956]!	; 0xf74
    1a24:	30365f78 	eorscc	r5, r6, r8, ror pc
    1a28:	0033365f 	eorseq	r3, r3, pc, asr r6
    1a2c:	705f4d43 	subsvc	r4, pc, r3, asr #26
    1a30:	635f6c6c 	cmpvs	pc, #108, 24	; 0x6c00
    1a34:	6e696b6c 	vnmulvs.f64	d22, d9, d28
    1a38:	6f6c7570 	svcvs	0x006c7570
    1a3c:	74635f77 	strbtvc	r5, [r3], #-3959	; 0xf77
    1a40:	43006c72 	movwmi	r6, #3186	; 0xc72
    1a44:	6f635f4d 	svcvs	0x00635f4d
    1a48:	765f666e 	ldrbvc	r6, [pc], -lr, ror #12
    1a4c:	635f7074 	cmpvs	pc, #116	; 0x74
    1a50:	006c7274 	rsbeq	r7, ip, r4, ror r2
    1a54:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1a58:	5f666e6f 	svcpl	0x00666e6f
    1a5c:	7361636d 	cmnvc	r1, #-1275068415	; 0xb4000001
    1a60:	615f3070 	cmpvs	pc, r0, ror r0	; <UNPREDICTABLE>
    1a64:	726b6c63 	rsbvc	r6, fp, #25344	; 0x6300
    1a68:	5f4d4300 	svcpl	0x004d4300
    1a6c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1a70:	6d70675f 	ldclvs	7, cr6, [r0, #-380]!	; 0xfffffe84
    1a74:	64615f63 	strbtvs	r5, [r1], #-3939	; 0xf63
    1a78:	43003231 	movwmi	r3, #561	; 0x231
    1a7c:	6f635f4d 	svcvs	0x00635f4d
    1a80:	725f666e 	subsvc	r6, pc, #115343360	; 0x6e00000
    1a84:	3169696d 	cmncc	r9, sp, ror #18
    1a88:	6665725f 			; <UNDEFINED> instruction: 0x6665725f
    1a8c:	6b6c635f 	blvs	1b1a810 <_start-0x7e4e57f0>
    1a90:	5f4d4300 	svcpl	0x004d4300
    1a94:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1a98:	61636d5f 	cmnvs	r3, pc, asr sp
    1a9c:	5f307073 	svcpl	0x00307073
    1aa0:	6b6c6361 	blvs	1b1a82c <_start-0x7e4e57d4>
    1aa4:	4d430078 	stclmi	0, cr0, [r3, #-480]	; 0xfffffe20
    1aa8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1aac:	70675f66 	rsbvc	r5, r7, r6, ror #30
    1ab0:	615f636d 	cmpvs	pc, sp, ror #6
    1ab4:	00303164 	eorseq	r3, r0, r4, ror #2
    1ab8:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1abc:	5f666e6f 	svcpl	0x00666e6f
    1ac0:	636d7067 	cmnvs	sp, #103	; 0x67
    1ac4:	3164615f 	cmncc	r4, pc, asr r1
    1ac8:	4d430031 	stclmi	0, cr0, [r3, #-196]	; 0xffffff3c
    1acc:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1ad0:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 1908 <_start-0x7fffe6f8>
    1ad4:	6174735f 	cmnvs	r4, pc, asr r3
    1ad8:	00737574 	rsbseq	r7, r3, r4, ror r5
    1adc:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1ae0:	5f666e6f 	svcpl	0x00666e6f
    1ae4:	636d7067 	cmnvs	sp, #103	; 0x67
    1ae8:	3164615f 	cmncc	r4, pc, asr r1
    1aec:	4d430033 	stclmi	0, cr0, [r3, #-204]	; 0xffffff34
    1af0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1af4:	70675f66 	rsbvc	r5, r7, r6, ror #30
    1af8:	615f636d 	cmpvs	pc, sp, ror #6
    1afc:	00343164 	eorseq	r3, r4, r4, ror #2
    1b00:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1b04:	5f666e6f 	svcpl	0x00666e6f
    1b08:	636d7067 	cmnvs	sp, #103	; 0x67
    1b0c:	3164615f 	cmncc	r4, pc, asr r1
    1b10:	4d430035 	stclmi	0, cr0, [r3, #-212]	; 0xffffff2c
    1b14:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    1b18:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
    1b1c:	635f6f64 	cmpvs	pc, #100, 30	; 0x190
    1b20:	006c7274 	rsbeq	r7, ip, r4, ror r2
    1b24:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1b28:	5f666e6f 	svcpl	0x00666e6f
    1b2c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0x175
    1b30:	74635f31 	strbtvc	r5, [r3], #-3889	; 0xf31
    1b34:	43006e73 	movwmi	r6, #3699	; 0xe73
    1b38:	616d5f4d 	cmnvs	sp, sp, asr #30
    1b3c:	64695f63 	strbtvs	r5, [r9], #-3939	; 0xf63
    1b40:	69685f30 	stmdbvs	r8!, {r4, r5, r8, r9, sl, fp, ip, lr}^
    1b44:	5f4d4300 	svcpl	0x004d4300
    1b48:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xf63
    1b4c:	5f6c6f72 	svcpl	0x006c6f72
    1b50:	66696d65 	strbtvs	r6, [r9], -r5, ror #26
    1b54:	7264735f 	rsbvc	r7, r4, #2080374785	; 0x7c000001
    1b58:	635f6d61 	cmpvs	pc, #6208	; 0x1840
    1b5c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1b60:	4d430067 	stclmi	0, cr0, [r3, #-412]	; 0xfffffe64
    1b64:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1b68:	636c5f66 	cmnvs	ip, #408	; 0x198
    1b6c:	73765f64 	cmnvc	r6, #100, 30	; 0x190
    1b70:	00636e79 	rsbeq	r6, r3, r9, ror lr
    1b74:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1b78:	5f666e6f 	svcpl	0x00666e6f
    1b7c:	30697073 	rsbcc	r7, r9, r3, ror r0
    1b80:	0031645f 	eorseq	r6, r1, pc, asr r4
    1b84:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1b88:	5f666e6f 	svcpl	0x00666e6f
    1b8c:	006f6474 	rsbeq	r6, pc, r4, ror r4	; <UNPREDICTABLE>
    1b90:	635f4d43 	cmpvs	pc, #4288	; 0x10c0
    1b94:	5f666e6f 	svcpl	0x00666e6f
    1b98:	30633269 	rsbcc	r3, r3, r9, ror #4
    1b9c:	6164735f 	cmnvs	r4, pc, asr r3
    1ba0:	5f4d4300 	svcpl	0x004d4300
    1ba4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1ba8:	6370745f 	cmnvs	r0, #1593835520	; 0x5f000000
    1bac:	76655f63 	strbtvc	r5, [r5], -r3, ror #30
    1bb0:	756d5f74 	strbvc	r5, [sp, #-3956]!	; 0xf74
    1bb4:	34345f78 	ldrtcc	r5, [r4], #-3960	; 0xf78
    1bb8:	0037345f 	eorseq	r3, r7, pc, asr r4
    1bbc:	746f7571 	strbtvc	r7, [pc], #-1393	; 1bc4 <_start-0x7fffe43c>
    1bc0:	615f5f00 	cmpvs	pc, r0, lsl #30
    1bc4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1bc8:	6964695f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1bcc:	646f6d76 	strbtvs	r6, [pc], #-3446	; 1bd4 <_start-0x7fffe42c>
    1bd0:	615f5f00 	cmpvs	pc, r0, lsl #30
    1bd4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1bd8:	6964695f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1bdc:	69640076 	stmdbvs	r4!, {r1, r2, r4, r5, r6}^
    1be0:	00632e76 	rsbeq	r2, r3, r6, ror lr
    1be4:	76696469 	strbtvc	r6, [r9], -r9, ror #8
    1be8:	7465725f 	strbtvc	r7, [r5], #-607	; 0x25f
    1bec:	006e7275 	rsbeq	r7, lr, r5, ror r2
    1bf0:	6f6e6564 	svcvs	0x006e6564
    1bf4:	6d5f006d 	ldclvs	0, cr0, [pc, #-436]	; 1a48 <_start-0x7fffe5b8>
    1bf8:	006e6961 	rsbeq	r6, lr, r1, ror #18
    1bfc:	6e69616d 	powvsez	f6, f1, #5.0
    1c00:	5300632e 	movwpl	r6, #814	; 0x32e
    1c04:	31504f54 	cmpcc	r0, r4, asr pc
    1c08:	5f00355f 	svcpl	0x0000355f
    1c0c:	5f61765f 	svcpl	0x0061765f
    1c10:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0x96c
    1c14:	72617500 	rsbvc	r7, r1, #0, 10
    1c18:	75705f74 	ldrbvc	r5, [r0, #-3956]!	; 0xf74
    1c1c:	50006674 	andpl	r6, r0, r4, ror r6
    1c20:	54495241 	strbpl	r5, [r9], #-577	; 0x241
    1c24:	56455f59 			; <UNDEFINED> instruction: 0x56455f59
    1c28:	46004e45 	strmi	r4, [r0], -r5, asr #28
    1c2c:	5f574f4c 	svcpl	0x00574f4c
    1c30:	0046464f 	subeq	r4, r6, pc, asr #12
    1c34:	504f5453 	subpl	r5, pc, r3, asr r4	; <UNPREDICTABLE>
    1c38:	54530031 	ldrbpl	r0, [r3], #-49	; 0x31
    1c3c:	0032504f 	eorseq	r5, r2, pc, asr #32
    1c40:	574f4c46 	strbpl	r4, [pc, -r6, asr #24]
    1c44:	004e4f5f 	subeq	r4, lr, pc, asr pc
    1c48:	5f74756f 	svcpl	0x0074756f
    1c4c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    1c50:	5000745f 	andpl	r7, r0, pc, asr r4
    1c54:	54495241 	strbpl	r5, [r9], #-577	; 0x241
    1c58:	444f5f59 	strbmi	r5, [pc], #-3929	; 1c60 <_start-0x7fffe3a0>
    1c5c:	41500044 	cmpmi	r0, r4, asr #32
    1c60:	59544952 	ldmdbpl	r4, {r1, r4, r6, r8, fp, lr}^
    1c64:	4e4f4e5f 	mcrmi	14, 2, r4, cr15, cr15, {2}
    1c68:	5f5f0045 	svcpl	0x005f0045
    1c6c:	49007061 	stmdbmi	r0, {r0, r5, r6, ip, sp, lr}
    1c70:	00325253 	eorseq	r5, r2, r3, asr r2
    1c74:	64756162 	ldrbtvs	r6, [r5], #-354	; 0x162
    1c78:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0x172
    1c7c:	46585400 	ldrbmi	r5, [r8], -r0, lsl #8
    1c80:	5f4f4649 	svcpl	0x004f4649
    1c84:	004c564c 	subeq	r5, ip, ip, asr #12
    1c88:	45524341 	ldrbmi	r4, [r2, #-833]	; 0x341
    1c8c:	46530047 	ldrbmi	r0, [r3], -r7, asr #32
    1c90:	0052534c 	subseq	r5, r2, ip, asr #6
    1c94:	4f495047 	svcmi	0x00495047
    1c98:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1c9c:	61750074 	cmnvs	r5, r4, ror r0
    1ca0:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
    1ca4:	6f736e6f 	svcvs	0x00736e6f
    1ca8:	632e656c 			; <UNDEFINED> instruction: 0x632e656c
    1cac:	52415500 	subpl	r5, r1, #0, 10
    1cb0:	75705f54 	ldrbvc	r5, [r0, #-3924]!	; 0xf54
    1cb4:	73004374 	movwvc	r4, #884	; 0x374
    1cb8:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1cbc:	6600676e 	strvs	r6, [r0], -lr, ror #14
    1cc0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xf6c
    1cc4:	72615500 	rsbvc	r5, r1, #0, 10
    1cc8:	525f3074 	subspl	r3, pc, #116	; 0x74
    1ccc:	74657365 	strbtvc	r7, [r5], #-869	; 0x365
    1cd0:	52415500 	subpl	r5, r1, #0, 10
    1cd4:	65675f54 	strbvs	r5, [r7, #-3924]!	; 0xf54
    1cd8:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    1cdc:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1ce0:	43535953 	cmpmi	r3, #1359872	; 0x14c000
    1ce4:	46585400 	ldrbmi	r5, [r8], -r0, lsl #8
    1ce8:	5400484c 	strpl	r4, [r0], #-2124	; 0x84c
    1cec:	4c4c4658 	mcrrmi	6, 5, r4, ip, cr8
    1cf0:	53595300 	cmppl	r9, #0, 6
    1cf4:	6e690053 	mcrvs	0, 3, r0, cr9, cr3, {2}
    1cf8:	76696474 			; <UNDEFINED> instruction: 0x76696474
    1cfc:	50464300 	subpl	r4, r6, r0, lsl #6
    1d00:	444d0053 	strbmi	r0, [sp], #-83	; 0x53
    1d04:	4d003152 	stfmis	f3, [r0, #-328]	; 0xfffffeb8
    1d08:	00325244 	eorseq	r5, r2, r4, asr #4
    1d0c:	3352444d 	cmpcc	r2, #1291845632	; 0x4d000000
    1d10:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
    1d14:	745f3874 	ldrbvc	r3, [pc], #-2164	; 1d1c <_start-0x7fffe2e4>
    1d18:	52454900 	subpl	r4, r5, #0, 18
    1d1c:	58540032 	ldmdapl	r4, {r1, r4, r5}^
    1d20:	00414d44 	subeq	r4, r1, r4, asr #26
    1d24:	51455246 	cmppl	r5, r6, asr #4
    1d28:	4c45535f 	mcrrmi	3, 5, r5, r5, cr15
    1d2c:	4c424500 	cfstr64mi	mvdx4, [r2], {-0}
    1d30:	58520052 	ldmdapl	r2, {r1, r4, r6}^
    1d34:	4f464946 	svcmi	0x00464946
    1d38:	4c564c5f 	mrrcmi	12, 5, r4, r6, cr15
    1d3c:	52415500 	subpl	r5, r1, #0, 10
    1d40:	75705f54 	ldrbvc	r5, [r0, #-3924]!	; 0xf54
    1d44:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    1d48:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1d4c:	54524155 	ldrbpl	r4, [r2], #-341	; 0x155
    1d50:	7465675f 	strbtvc	r6, [r5], #-1887	; 0x75f
    1d54:	61700043 	cmnvs	r0, r3, asr #32
    1d58:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1d5c:	4f545300 	svcmi	0x00545300
    1d60:	49425f50 	stmdbmi	r2, {r4, r6, r8, r9, sl, fp, ip, lr}^
    1d64:	00745f54 	rsbseq	r5, r4, r4, asr pc
    1d68:	676e656c 	strbvs	r6, [lr, -ip, ror #10]!
    1d6c:	55006874 	strpl	r6, [r0, #-2164]	; 0x874
    1d70:	5f545241 	svcpl	0x00545241
    1d74:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xe69
    1d78:	52465300 	subpl	r5, r6, #0, 6
    1d7c:	00484745 	subeq	r4, r8, r5, asr #14
    1d80:	45524653 	ldrbmi	r4, [r2, #-1619]	; 0x653
    1d84:	52004c47 	andpl	r4, r0, #18176	; 0x4700
    1d88:	4d555345 	ldclmi	3, cr5, [r5, #-276]	; 0xfffffeec
    1d8c:	6c660045 	stclvs	0, cr0, [r6], #-276	; 0xfffffeec
    1d90:	6f43776f 	svcvs	0x0043776f
    1d94:	6f72746e 	svcvs	0x0072746e
    1d98:	4c46006c 	mcrrmi	0, 6, r0, r6, cr12
    1d9c:	745f574f 	ldrbvc	r5, [pc], #-1871	; 1da4 <_start-0x7fffe25c>
    1da0:	6f747300 	svcvs	0x00747300
    1da4:	74694270 	strbtvc	r4, [r9], #-624	; 0x270
    1da8:	52415000 	subpl	r5, r1, #0
    1dac:	5f595449 	svcpl	0x00595449
    1db0:	5f544942 	svcpl	0x00544942
    1db4:	58520074 	ldmdapl	r2, {r2, r4, r5, r6}^
    1db8:	00484c46 	subeq	r4, r8, r6, asr #24
    1dbc:	4c465852 	mcrrmi	8, 5, r5, r6, cr2
    1dc0:	6973004c 	ldmdbvs	r3!, {r2, r3, r6}^
    1dc4:	2e00657a 	cfrshl64cs	mvdx0, mvdx10, r6
    1dc8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1dcc:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
    1dd0:	2e6b746e 	cdpcs	4, 6, cr7, cr11, cr14, {3}
    1dd4:	705f0063 	subsvc	r0, pc, r3, rrx
    1dd8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0x972
    1ddc:	65645f6b 	strbvs	r5, [r4, #-3947]!	; 0xf6b
    1de0:	6c755f63 	ldclvs	15, cr5, [r5], #-396	; 0xfffffe74
    1de4:	00676e6f 	rsbeq	r6, r7, pc, ror #28
    1de8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    1dec:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
    1df0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0x769
    1df4:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
    1df8:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0x74
    1dfc:	6e69616d 	powvsez	f6, f1, #5.0
    1e00:	00726564 	rsbseq	r6, r2, r4, ror #10
    1e04:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
    1e08:	616c5f64 	cmnvs	ip, r4, ror #30
    1e0c:	73656772 	cmnvc	r5, #29884416	; 0x1c80000
    1e10:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e14:	00746967 	rsbseq	r6, r4, r7, ror #18
    1e18:	7270765f 	rsbsvc	r7, r0, #99614720	; 0x5f00000
    1e1c:	6b746e69 	blvs	1d1d7c8 <_start-0x7e2e2838>
    1e20:	6f682f00 	svcvs	0x00682f00
    1e24:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    1e28:	68736168 	ldmdavs	r3!, {r3, r5, r6, r8, sp, lr}^
    1e2c:	61642f69 	cmnvs	r4, r9, ror #30
    1e30:	2f616262 	svccs	0x00616262
    1e34:	5f424242 	svcpl	0x00424242
    1e38:	6b726f57 	blvs	1c9db9c <_start-0x7e362464>
    1e3c:	2f676e69 	svccs	0x00676e69
    1e40:	67616542 	strbvs	r6, [r1, -r2, asr #10]!
    1e44:	6f42656c 	svcvs	0x0042656c
    1e48:	6c42656e 	cfstr64vs	mvdx6, [r2], {110}	; 0x6e
    1e4c:	2f6b6361 	svccs	0x006b6361
    1e50:	696e696d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^
    1e54:	5f6c756d 	svcpl	0x006c756d
    1e58:	696c5f63 	stmdbvs	ip!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e5c:	696d2f62 	stmdbvs	sp!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    1e60:	6d006373 	stcvs	3, cr6, [r0, #-460]	; 0xfffffe34
    1e64:	775f6e69 	ldrbvc	r6, [pc, -r9, ror #28]
    1e68:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
    1e6c:	64617000 	strbtvs	r7, [r1], #-0
    1e70:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
    1e74:	705f006f 	subsvc	r0, pc, pc, rrx
    1e78:	746e6972 	strbtvc	r6, [lr], #-2418	; 0x972
    1e7c:	65685f6b 	strbvs	r5, [r8, #-3947]!	; 0xf6b
    1e80:	6c755f78 	ldclvs	15, cr5, [r5], #-480	; 0xfffffe20
    1e84:	00676e6f 	rsbeq	r6, r7, pc, ror #28
    1e88:	6c697473 	cfstrdvs	mvd7, [r9], #-460	; 0xfffffe34
    1e8c:	696d5f6c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e90:	5f746867 	svcpl	0x00746867
    1e94:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1e98:	6c007461 	cfstrsvs	mvf7, [r0], {97}	; 0x61
    1e9c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
    1ea0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1ea4:	6262696e 	rsbvs	r6, r2, #1802240	; 0x1b8000
    1ea8:	7200656c 	andvc	r6, r0, #108, 10	; 0x1b000000
    1eac:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1eb0:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    1eb4:	72747300 	rsbsvc	r7, r4, #0, 6
    1eb8:	00797063 	rsbseq	r7, r9, r3, rrx
    1ebc:	63727473 	cmnvs	r2, #1929379840	; 0x73000000
    1ec0:	6d007268 	sfmvs	f7, 4, [r0, #-416]	; 0xfffffe60
    1ec4:	6d636d65 	stclvs	13, cr6, [r3, #-404]!	; 0xfffffe6c
    1ec8:	2f2e0070 	svccs	0x002e0070
    1ecc:	2f637273 	svccs	0x00637273
    1ed0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1ed4:	632e676e 			; <UNDEFINED> instruction: 0x632e676e
    1ed8:	72747300 	rsbsvc	r7, r4, #0, 6
    1edc:	7970636e 	ldmdbvc	r0!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    1ee0:	72747300 	rsbsvc	r7, r4, #0, 6
    1ee4:	00746163 	rsbseq	r6, r4, r3, ror #2
    1ee8:	63727473 	cmnvs	r2, #1929379840	; 0x73000000
    1eec:	7300706d 	movwvc	r7, #109	; 0x6d
    1ef0:	656c7274 	strbvs	r7, [ip, #-628]!	; 0x274
    1ef4:	682f006e 	stmdavs	pc!, {r1, r2, r3, r5, r6}	; <UNPREDICTABLE>
    1ef8:	2f656d6f 	svccs	0x00656d6f
    1efc:	73616873 	cmnvc	r1, #7536640	; 0x730000
    1f00:	642f6968 	strtvs	r6, [pc], #-2408	; 1f08 <_start-0x7fffe0f8>
    1f04:	61626261 	cmnvs	r2, r1, ror #4
    1f08:	4242422f 	submi	r4, r2, #-268435454	; 0xf0000002
    1f0c:	726f575f 	rsbvc	r5, pc, #24903680	; 0x17c0000
    1f10:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
    1f14:	6165422f 	cmnvs	r5, pc, lsr #4
    1f18:	42656c67 	rsbmi	r6, r5, #26368	; 0x6700
    1f1c:	42656e6f 	rsbmi	r6, r5, #1776	; 0x6f0
    1f20:	6b63616c 	blvs	18da4d8 <_start-0x7e725b28>
    1f24:	6e696d2f 	cdpvs	13, 6, cr6, cr9, cr15, {1}
    1f28:	6c756d69 	ldclvs	13, cr6, [r5], #-420	; 0xfffffe5c
    1f2c:	6c5f635f 	mrrcvs	3, 5, r6, pc, cr15	; <UNPREDICTABLE>
    1f30:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
    1f34:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    1f38:	74730067 	ldrbtvc	r0, [r3], #-103	; 0x67
    1f3c:	68637272 	stmdavs	r3!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    1f40:	74730072 	ldrbtvc	r0, [r3], #-114	; 0x72
    1f44:	61636e72 	smcvs	14050	; 0x36e2
    1f48:	74730074 	ldrbtvc	r0, [r3], #-116	; 0x74
    1f4c:	6d636e72 	stclvs	14, cr6, [r3, #-456]!	; 0xfffffe38
    1f50:	Address 0x0000000000001f50 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	8000003c 	andhi	r0, r0, ip, lsr r0
  1c:	00000068 	andeq	r0, r0, r8, rrx
  20:	8b040e42 	blhi	103930 <_start-0x7fefc6d0>
  24:	0b0d4201 	bleq	350830 <_start-0x7fcaf7d0>
  28:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
  2c:	00000ecb 	andeq	r0, r0, fp, asr #29
  30:	0000000c 	andeq	r0, r0, ip
  34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  38:	7c020001 	stcvc	0, cr0, [r2], {1}
  3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00000030 	andeq	r0, r0, r0, lsr r0
  48:	800000a4 	andhi	r0, r0, r4, lsr #1
  4c:	00000040 	andeq	r0, r0, r0, asr #32
  50:	8b040e42 	blhi	103960 <_start-0x7fefc6a0>
  54:	0b0d4201 	bleq	350860 <_start-0x7fcaf7a0>
  58:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
  5c:	00000ecb 	andeq	r0, r0, fp, asr #29
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	00000030 	andeq	r0, r0, r0, lsr r0
  68:	800000e4 	andhi	r0, r0, r4, ror #1
  6c:	00000038 	andeq	r0, r0, r8, lsr r0
  70:	8b040e42 	blhi	103980 <_start-0x7fefc680>
  74:	0b0d4201 	bleq	350880 <_start-0x7fcaf780>
  78:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
  7c:	00000ecb 	andeq	r0, r0, fp, asr #29
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000030 	andeq	r0, r0, r0, lsr r0
  88:	8000011c 	andhi	r0, r0, ip, lsl r1
  8c:	000000d4 	ldrdeq	r0, [r0], -r4
  90:	8b080e42 	blhi	2039a0 <_start-0x7fdfc660>
  94:	42018e02 	andmi	r8, r1, #2, 28
  98:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
  9c:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
  a0:	0000000c 	andeq	r0, r0, ip
  a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  a8:	7c020001 	stcvc	0, cr0, [r2], {1}
  ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	000000a0 	andeq	r0, r0, r0, lsr #1
  b8:	800001f0 	strdhi	r0, [r0], -r0	; <UNPREDICTABLE>
  bc:	0000003c 	andeq	r0, r0, ip, lsr r0
  c0:	8b040e42 	blhi	1039d0 <_start-0x7fefc630>
  c4:	0b0d4201 	bleq	3508d0 <_start-0x7fcaf730>
  c8:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
  cc:	00000ecb 	andeq	r0, r0, fp, asr #29
  d0:	0000001c 	andeq	r0, r0, ip, lsl r0
  d4:	000000a0 	andeq	r0, r0, r0, lsr #1
  d8:	8000022c 	andhi	r0, r0, ip, lsr #4
  dc:	00000034 	andeq	r0, r0, r4, lsr r0
  e0:	8b040e42 	blhi	1039f0 <_start-0x7fefc610>
  e4:	0b0d4201 	bleq	3508f0 <_start-0x7fcaf710>
  e8:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
  ec:	00000ecb 	andeq	r0, r0, fp, asr #29
  f0:	0000001c 	andeq	r0, r0, ip, lsl r0
  f4:	000000a0 	andeq	r0, r0, r0, lsr #1
  f8:	80000260 	andhi	r0, r0, r0, ror #4
  fc:	00000058 	andeq	r0, r0, r8, asr r0
 100:	8b080e42 	blhi	203a10 <_start-0x7fdfc5f0>
 104:	42018e02 	andmi	r8, r1, #2, 28
 108:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
 10c:	00080d0c 	andeq	r0, r8, ip, lsl #26
 110:	00000018 	andeq	r0, r0, r8, lsl r0
 114:	000000a0 	andeq	r0, r0, r0, lsr #1
 118:	800002b8 			; <UNDEFINED> instruction: 0x800002b8
 11c:	00000024 	andeq	r0, r0, r4, lsr #32
 120:	8b080e42 	blhi	203a30 <_start-0x7fdfc5d0>
 124:	42018e02 	andmi	r8, r1, #2, 28
 128:	00040b0c 	andeq	r0, r4, ip, lsl #22
 12c:	0000000c 	andeq	r0, r0, ip
 130:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 134:	7c020001 	stcvc	0, cr0, [r2], {1}
 138:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
 140:	0000012c 	andeq	r0, r0, ip, lsr #2
 144:	800002dc 	ldrdhi	r0, [r0], -ip
 148:	00000084 	andeq	r0, r0, r4, lsl #1
 14c:	8b040e42 	blhi	103a5c <_start-0x7fefc5a4>
 150:	0b0d4201 	bleq	35095c <_start-0x7fcaf6a4>
 154:	420d0d7a 	andmi	r0, sp, #7808	; 0x1e80
 158:	00000ecb 	andeq	r0, r0, fp, asr #29
 15c:	0000001c 	andeq	r0, r0, ip, lsl r0
 160:	0000012c 	andeq	r0, r0, ip, lsr #2
 164:	80000360 	andhi	r0, r0, r0, ror #6
 168:	00000060 	andeq	r0, r0, r0, rrx
 16c:	8b040e42 	blhi	103a7c <_start-0x7fefc584>
 170:	0b0d4201 	bleq	35097c <_start-0x7fcaf684>
 174:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
 178:	00000ecb 	andeq	r0, r0, fp, asr #29
 17c:	0000000c 	andeq	r0, r0, ip
 180:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 184:	7c020001 	stcvc	0, cr0, [r2], {1}
 188:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 18c:	00000034 	andeq	r0, r0, r4, lsr r0
 190:	0000017c 	andeq	r0, r0, ip, ror r1
 194:	800003c0 	andhi	r0, r0, r0, asr #7
 198:	00000044 	andeq	r0, r0, r4, asr #32
 19c:	80100e42 	andshi	r0, r0, r2, asr #28
 1a0:	82038104 	andhi	r8, r3, #4, 2
 1a4:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
 1a8:	068b180e 	streq	r1, [fp], lr, lsl #16
 1ac:	0c42058e 	cfstr64eq	mvdx0, [r2], {142}	; 0x8e
 1b0:	0c56140b 	cfldrdeq	mvd1, [r6], {11}
 1b4:	ce42180d 	cdpgt	8, 4, cr1, cr2, cr13, {0}
 1b8:	42100ecb 	andsmi	r0, r0, #3248	; 0xcb0
 1bc:	c0c1c2c3 	sbcgt	ip, r1, r3, asr #5
 1c0:	0000000e 	andeq	r0, r0, lr
 1c4:	00000018 	andeq	r0, r0, r8, lsl r0
 1c8:	0000017c 	andeq	r0, r0, ip, ror r1
 1cc:	80000404 	andhi	r0, r0, r4, lsl #8
 1d0:	000000b8 	strheq	r0, [r0], -r8
 1d4:	8b080e42 	blhi	203ae4 <_start-0x7fdfc51c>
 1d8:	42018e02 	andmi	r8, r1, #2, 28
 1dc:	00040b0c 	andeq	r0, r4, ip, lsl #22
 1e0:	0000000c 	andeq	r0, r0, ip
 1e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1e8:	7c020001 	stcvc	0, cr0, [r2], {1}
 1ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1f0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f4:	000001e0 	andeq	r0, r0, r0, ror #3
 1f8:	800004c0 	andhi	r0, r0, r0, asr #9
 1fc:	00000058 	andeq	r0, r0, r8, asr r0
 200:	8b080e42 	blhi	203b10 <_start-0x7fdfc4f0>
 204:	42018e02 	andmi	r8, r1, #2, 28
 208:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
 20c:	00080d0c 	andeq	r0, r8, ip, lsl #26
 210:	0000001c 	andeq	r0, r0, ip, lsl r0
 214:	000001e0 	andeq	r0, r0, r0, ror #3
 218:	80000518 	andhi	r0, r0, r8, lsl r5
 21c:	000001f8 	strdeq	r0, [r0], -r8
 220:	8b040e42 	blhi	103b30 <_start-0x7fefc4d0>
 224:	0b0d4201 	bleq	350a30 <_start-0x7fcaf5d0>
 228:	0d0df002 	stceq	0, cr15, [sp, #-8]
 22c:	000ecb42 	andeq	ip, lr, r2, asr #22
 230:	0000001c 	andeq	r0, r0, ip, lsl r0
 234:	000001e0 	andeq	r0, r0, r0, ror #3
 238:	80000710 	andhi	r0, r0, r0, lsl r7
 23c:	0000004c 	andeq	r0, r0, ip, asr #32
 240:	8b080e42 	blhi	203b50 <_start-0x7fdfc4b0>
 244:	42018e02 	andmi	r8, r1, #2, 28
 248:	60040b0c 	andvs	r0, r4, ip, lsl #22
 24c:	00080d0c 	andeq	r0, r8, ip, lsl #26
 250:	0000001c 	andeq	r0, r0, ip, lsl r0
 254:	000001e0 	andeq	r0, r0, r0, ror #3
 258:	8000075c 	andhi	r0, r0, ip, asr r7
 25c:	00000060 	andeq	r0, r0, r0, rrx
 260:	8b080e42 	blhi	203b70 <_start-0x7fdfc490>
 264:	42018e02 	andmi	r8, r1, #2, 28
 268:	6a040b0c 	bvs	102ea0 <_start-0x7fefd160>
 26c:	00080d0c 	andeq	r0, r8, ip, lsl #26
 270:	0000001c 	andeq	r0, r0, ip, lsl r0
 274:	000001e0 	andeq	r0, r0, r0, ror #3
 278:	800007bc 			; <UNDEFINED> instruction: 0x800007bc
 27c:	00000048 	andeq	r0, r0, r8, asr #32
 280:	8b040e42 	blhi	103b90 <_start-0x7fefc470>
 284:	0b0d4201 	bleq	350a90 <_start-0x7fcaf570>
 288:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
 28c:	00000ecb 	andeq	r0, r0, fp, asr #29
 290:	0000001c 	andeq	r0, r0, ip, lsl r0
 294:	000001e0 	andeq	r0, r0, r0, ror #3
 298:	80000804 	andhi	r0, r0, r4, lsl #16
 29c:	0000006c 	andeq	r0, r0, ip, rrx
 2a0:	8b080e42 	blhi	203bb0 <_start-0x7fdfc450>
 2a4:	42018e02 	andmi	r8, r1, #2, 28
 2a8:	70040b0c 	andvc	r0, r4, ip, lsl #22
 2ac:	00080d0c 	andeq	r0, r8, ip, lsl #26
 2b0:	00000020 	andeq	r0, r0, r0, lsr #32
 2b4:	000001e0 	andeq	r0, r0, r0, ror #3
 2b8:	80000870 	andhi	r0, r0, r0, ror r8
 2bc:	0000006c 	andeq	r0, r0, ip, rrx
 2c0:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
 2c4:	8e028b03 	vmlahi.f64	d8, d2, d3
 2c8:	0b0c4201 	bleq	310ad4 <_start-0x7fcef52c>
 2cc:	0d0c7004 	stceq	0, cr7, [ip, #-16]
 2d0:	0000000c 	andeq	r0, r0, ip
 2d4:	0000000c 	andeq	r0, r0, ip
 2d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2dc:	7c020001 	stcvc	0, cr0, [r2], {1}
 2e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e8:	000002d4 	ldrdeq	r0, [r0], -r4
 2ec:	800008dc 	ldrdhi	r0, [r0], -ip
 2f0:	00000160 	andeq	r0, r0, r0, ror #2
 2f4:	8b080e42 	blhi	203c04 <_start-0x7fdfc3fc>
 2f8:	42018e02 	andmi	r8, r1, #2, 28
 2fc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 300:	080d0caa 	stmdaeq	sp, {r1, r3, r5, r7, sl, fp}
 304:	0000001c 	andeq	r0, r0, ip, lsl r0
 308:	000002d4 	ldrdeq	r0, [r0], -r4
 30c:	80000a3c 	andhi	r0, r0, ip, lsr sl
 310:	00000118 	andeq	r0, r0, r8, lsl r1
 314:	8b080e42 	blhi	203c24 <_start-0x7fdfc3dc>
 318:	42018e02 	andmi	r8, r1, #2, 28
 31c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 320:	080d0c86 	stmdaeq	sp, {r1, r2, r7, sl, fp}
 324:	00000020 	andeq	r0, r0, r0, lsr #32
 328:	000002d4 	ldrdeq	r0, [r0], -r4
 32c:	80000b54 	andhi	r0, r0, r4, asr fp
 330:	00000424 	andeq	r0, r0, r4, lsr #8
 334:	8b080e42 	blhi	203c44 <_start-0x7fdfc3bc>
 338:	42018e02 	andmi	r8, r1, #2, 28
 33c:	03040b0c 	movweq	r0, #19212	; 0x4b0c
 340:	0d0c020c 	sfmeq	f0, 4, [ip, #-48]	; 0xffffffd0
 344:	00000008 	andeq	r0, r0, r8
 348:	0000000c 	andeq	r0, r0, ip
 34c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 350:	7c020001 	stcvc	0, cr0, [r2], {1}
 354:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 358:	0000001c 	andeq	r0, r0, ip, lsl r0
 35c:	00000348 	andeq	r0, r0, r8, asr #6
 360:	80000f78 	andhi	r0, r0, r8, ror pc
 364:	000000a4 	andeq	r0, r0, r4, lsr #1
 368:	8b040e42 	blhi	103c78 <_start-0x7fefc388>
 36c:	0b0d4201 	bleq	350b78 <_start-0x7fcaf488>
 370:	0d0d4a02 	vstreq	s8, [sp, #-8]
 374:	000ecb42 	andeq	ip, lr, r2, asr #22
 378:	0000001c 	andeq	r0, r0, ip, lsl r0
 37c:	00000348 	andeq	r0, r0, r8, asr #6
 380:	8000101c 	andhi	r1, r0, ip, lsl r0
 384:	00000054 	andeq	r0, r0, r4, asr r0
 388:	8b040e42 	blhi	103c98 <_start-0x7fefc368>
 38c:	0b0d4201 	bleq	350b98 <_start-0x7fcaf468>
 390:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
 394:	00000ecb 	andeq	r0, r0, fp, asr #29
 398:	0000001c 	andeq	r0, r0, ip, lsl r0
 39c:	00000348 	andeq	r0, r0, r8, asr #6
 3a0:	80001070 	andhi	r1, r0, r0, ror r0
 3a4:	00000060 	andeq	r0, r0, r0, rrx
 3a8:	8b040e42 	blhi	103cb8 <_start-0x7fefc348>
 3ac:	0b0d4201 	bleq	350bb8 <_start-0x7fcaf448>
 3b0:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
 3b4:	00000ecb 	andeq	r0, r0, fp, asr #29
 3b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3bc:	00000348 	andeq	r0, r0, r8, asr #6
 3c0:	800010d0 	ldrdhi	r1, [r0], -r0
 3c4:	000000a8 	andeq	r0, r0, r8, lsr #1
 3c8:	8b040e42 	blhi	103cd8 <_start-0x7fefc328>
 3cc:	0b0d4201 	bleq	350bd8 <_start-0x7fcaf428>
 3d0:	0d0d4c02 	stceq	12, cr4, [sp, #-8]
 3d4:	000ecb42 	andeq	ip, lr, r2, asr #22
 3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3dc:	00000348 	andeq	r0, r0, r8, asr #6
 3e0:	80001178 	andhi	r1, r0, r8, ror r1
 3e4:	0000006c 	andeq	r0, r0, ip, rrx
 3e8:	8b080e42 	blhi	203cf8 <_start-0x7fdfc308>
 3ec:	42018e02 	andmi	r8, r1, #2, 28
 3f0:	70040b0c 	andvc	r0, r4, ip, lsl #22
 3f4:	00080d0c 	andeq	r0, r8, ip, lsl #26
 3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3fc:	00000348 	andeq	r0, r0, r8, asr #6
 400:	800011e4 	andhi	r1, r0, r4, ror #3
 404:	000000c0 	andeq	r0, r0, r0, asr #1
 408:	8b080e42 	blhi	203d18 <_start-0x7fdfc2e8>
 40c:	42018e02 	andmi	r8, r1, #2, 28
 410:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 414:	080d0c5a 	stmdaeq	sp, {r1, r3, r4, r6, sl, fp}
 418:	0000001c 	andeq	r0, r0, ip, lsl r0
 41c:	00000348 	andeq	r0, r0, r8, asr #6
 420:	800012a4 	andhi	r1, r0, r4, lsr #5
 424:	00000094 	muleq	r0, r4, r0
 428:	8b040e42 	blhi	103d38 <_start-0x7fefc2c8>
 42c:	0b0d4201 	bleq	350c38 <_start-0x7fcaf3c8>
 430:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
 434:	000ecb42 	andeq	ip, lr, r2, asr #22
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	00000348 	andeq	r0, r0, r8, asr #6
 440:	80001338 	andhi	r1, r0, r8, lsr r3
 444:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 448:	8b040e42 	blhi	103d58 <_start-0x7fefc2a8>
 44c:	0b0d4201 	bleq	350c58 <_start-0x7fcaf3a8>
 450:	0d0d5002 	stceq	0, cr5, [sp, #-8]
 454:	000ecb42 	andeq	ip, lr, r2, asr #22
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	00000348 	andeq	r0, r0, r8, asr #6
 460:	800013e8 	andhi	r1, r0, r8, ror #7
 464:	0000007c 	andeq	r0, r0, ip, ror r0
 468:	8b040e42 	blhi	103d78 <_start-0x7fefc288>
 46c:	0b0d4201 	bleq	350c78 <_start-0x7fcaf388>
 470:	420d0d76 	andmi	r0, sp, #7552	; 0x1d80
 474:	00000ecb 	andeq	r0, r0, fp, asr #29
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	00000348 	andeq	r0, r0, r8, asr #6
 480:	80001464 	andhi	r1, r0, r4, ror #8
 484:	00000074 	andeq	r0, r0, r4, ror r0
 488:	8b040e42 	blhi	103d98 <_start-0x7fefc268>
 48c:	0b0d4201 	bleq	350c98 <_start-0x7fcaf368>
 490:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
 494:	00000ecb 	andeq	r0, r0, fp, asr #29
